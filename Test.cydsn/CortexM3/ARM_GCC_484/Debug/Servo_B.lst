ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Servo_B.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Servo_B_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Servo_B_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Servo_B_Enable, %function
  24              	Servo_B_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Servo_B.c"
   1:.\Generated_Source\PSoC5/Servo_B.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Servo_B.c **** * File Name: Servo_B.c
   3:.\Generated_Source\PSoC5/Servo_B.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/Servo_B.c **** *
   5:.\Generated_Source\PSoC5/Servo_B.c **** * Description:
   6:.\Generated_Source\PSoC5/Servo_B.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/Servo_B.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/Servo_B.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/Servo_B.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/Servo_B.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/Servo_B.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/Servo_B.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/Servo_B.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/Servo_B.c **** *
  15:.\Generated_Source\PSoC5/Servo_B.c **** * Note:
  16:.\Generated_Source\PSoC5/Servo_B.c **** *
  17:.\Generated_Source\PSoC5/Servo_B.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/Servo_B.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Servo_B.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Servo_B.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Servo_B.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Servo_B.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Servo_B.c **** 
  24:.\Generated_Source\PSoC5/Servo_B.c **** #include "Servo_B.h"
  25:.\Generated_Source\PSoC5/Servo_B.c **** 
  26:.\Generated_Source\PSoC5/Servo_B.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/Servo_B.c **** #ifdef Servo_B_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/Servo_B.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/Servo_B.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* Servo_B_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/Servo_B.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 2


  32:.\Generated_Source\PSoC5/Servo_B.c **** uint8 Servo_B_initVar = 0u;
  33:.\Generated_Source\PSoC5/Servo_B.c **** 
  34:.\Generated_Source\PSoC5/Servo_B.c **** 
  35:.\Generated_Source\PSoC5/Servo_B.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/Servo_B.c **** * Function Name: Servo_B_Start
  37:.\Generated_Source\PSoC5/Servo_B.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/Servo_B.c **** *
  39:.\Generated_Source\PSoC5/Servo_B.c **** * Summary:
  40:.\Generated_Source\PSoC5/Servo_B.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/Servo_B.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/Servo_B.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/Servo_B.c **** *
  44:.\Generated_Source\PSoC5/Servo_B.c **** * Parameters:
  45:.\Generated_Source\PSoC5/Servo_B.c **** *  None
  46:.\Generated_Source\PSoC5/Servo_B.c **** *
  47:.\Generated_Source\PSoC5/Servo_B.c **** * Return:
  48:.\Generated_Source\PSoC5/Servo_B.c **** *  None
  49:.\Generated_Source\PSoC5/Servo_B.c **** *
  50:.\Generated_Source\PSoC5/Servo_B.c **** * Global variables:
  51:.\Generated_Source\PSoC5/Servo_B.c **** *  Servo_B_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/Servo_B.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/Servo_B.c **** *
  54:.\Generated_Source\PSoC5/Servo_B.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/Servo_B.c **** void Servo_B_Start(void) 
  56:.\Generated_Source\PSoC5/Servo_B.c **** {
  57:.\Generated_Source\PSoC5/Servo_B.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/Servo_B.c ****     if(Servo_B_initVar == 0u)
  59:.\Generated_Source\PSoC5/Servo_B.c ****     {
  60:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_Init();
  61:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_initVar = 1u;
  62:.\Generated_Source\PSoC5/Servo_B.c ****     }
  63:.\Generated_Source\PSoC5/Servo_B.c ****     Servo_B_Enable();
  64:.\Generated_Source\PSoC5/Servo_B.c **** 
  65:.\Generated_Source\PSoC5/Servo_B.c **** }
  66:.\Generated_Source\PSoC5/Servo_B.c **** 
  67:.\Generated_Source\PSoC5/Servo_B.c **** 
  68:.\Generated_Source\PSoC5/Servo_B.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/Servo_B.c **** * Function Name: Servo_B_Init
  70:.\Generated_Source\PSoC5/Servo_B.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/Servo_B.c **** *
  72:.\Generated_Source\PSoC5/Servo_B.c **** * Summary:
  73:.\Generated_Source\PSoC5/Servo_B.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/Servo_B.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/Servo_B.c **** *  Servo_B_Start().
  76:.\Generated_Source\PSoC5/Servo_B.c **** *
  77:.\Generated_Source\PSoC5/Servo_B.c **** * Parameters:
  78:.\Generated_Source\PSoC5/Servo_B.c **** *  None
  79:.\Generated_Source\PSoC5/Servo_B.c **** *
  80:.\Generated_Source\PSoC5/Servo_B.c **** * Return:
  81:.\Generated_Source\PSoC5/Servo_B.c **** *  None
  82:.\Generated_Source\PSoC5/Servo_B.c **** *
  83:.\Generated_Source\PSoC5/Servo_B.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/Servo_B.c **** void Servo_B_Init(void) 
  85:.\Generated_Source\PSoC5/Servo_B.c **** {
  86:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UsingFixedFunction || Servo_B_UseControl)
  87:.\Generated_Source\PSoC5/Servo_B.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UsingFixedFunction || Servo_B_UseControl) */
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 3


  89:.\Generated_Source\PSoC5/Servo_B.c **** 
  90:.\Generated_Source\PSoC5/Servo_B.c ****     #if(!Servo_B_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/Servo_B.c ****         #if(Servo_B_UseStatus)
  92:.\Generated_Source\PSoC5/Servo_B.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/Servo_B.c ****             uint8 Servo_B_interruptState;
  94:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UseStatus) */
  95:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (!Servo_B_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/Servo_B.c **** 
  97:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/Servo_B.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_CONTROL |= Servo_B_CFG0_MODE;
 100:.\Generated_Source\PSoC5/Servo_B.c ****         #if (Servo_B_DeadBand2_4)
 101:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_CONTROL |= Servo_B_CFG0_DB;
 102:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/Servo_B.c **** 
 104:.\Generated_Source\PSoC5/Servo_B.c ****         ctrl = Servo_B_CONTROL3 & ((uint8 )(~Servo_B_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_CONTROL3 = ctrl | Servo_B_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/Servo_B.c **** 
 107:.\Generated_Source\PSoC5/Servo_B.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_RT1 &= ((uint8)(~Servo_B_RT1_MASK));
 109:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_RT1 |= Servo_B_SYNC;
 110:.\Generated_Source\PSoC5/Servo_B.c **** 
 111:.\Generated_Source\PSoC5/Servo_B.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_RT1 &= ((uint8)(~Servo_B_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_RT1 |= Servo_B_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/Servo_B.c **** 
 115:.\Generated_Source\PSoC5/Servo_B.c ****     #elif (Servo_B_UseControl)
 116:.\Generated_Source\PSoC5/Servo_B.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/Servo_B.c ****         ctrl = Servo_B_CONTROL & ((uint8)(~Servo_B_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/Servo_B.c ****                 ((uint8)(~Servo_B_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_CONTROL = ctrl | Servo_B_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/Servo_B.c ****                                    Servo_B_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/Servo_B.c **** 
 123:.\Generated_Source\PSoC5/Servo_B.c ****     #if (!Servo_B_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/Servo_B.c ****         #if (Servo_B_Resolution == 8)
 125:.\Generated_Source\PSoC5/Servo_B.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_AUX_CONTROLDP0 |= (Servo_B_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/Servo_B.c ****         #else /* (Servo_B_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/Servo_B.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_AUX_CONTROLDP0 |= (Servo_B_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_AUX_CONTROLDP1 |= (Servo_B_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_Resolution == 8) */
 132:.\Generated_Source\PSoC5/Servo_B.c **** 
 133:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_WriteCounter(Servo_B_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (!Servo_B_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/Servo_B.c **** 
 136:.\Generated_Source\PSoC5/Servo_B.c ****     Servo_B_WritePeriod(Servo_B_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/Servo_B.c **** 
 138:.\Generated_Source\PSoC5/Servo_B.c ****         #if (Servo_B_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_WriteCompare(Servo_B_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 141:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_WriteCompare1(Servo_B_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_WriteCompare2(Servo_B_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/Servo_B.c **** 
 145:.\Generated_Source\PSoC5/Servo_B.c ****         #if (Servo_B_KillModeMinTime)
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 4


 146:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_WriteKillTime(Servo_B_MinimumKillTime);
 147:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/Servo_B.c **** 
 149:.\Generated_Source\PSoC5/Servo_B.c ****         #if (Servo_B_DeadBandUsed)
 150:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_WriteDeadTime(Servo_B_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/Servo_B.c **** 
 153:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UseStatus || Servo_B_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_SetInterruptMode(Servo_B_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UseStatus || Servo_B_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/Servo_B.c **** 
 157:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/Servo_B.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_GLOBAL_ENABLE |= Servo_B_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/Servo_B.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_CONTROL2 |= Servo_B_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/Servo_B.c ****     #else
 163:.\Generated_Source\PSoC5/Servo_B.c ****         #if(Servo_B_UseStatus)
 164:.\Generated_Source\PSoC5/Servo_B.c **** 
 165:.\Generated_Source\PSoC5/Servo_B.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/Servo_B.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/Servo_B.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_STATUS_AUX_CTRL |= Servo_B_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/Servo_B.c **** 
 171:.\Generated_Source\PSoC5/Servo_B.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/Servo_B.c ****             CyExitCriticalSection(Servo_B_interruptState);
 173:.\Generated_Source\PSoC5/Servo_B.c **** 
 174:.\Generated_Source\PSoC5/Servo_B.c ****             /* Clear the FIFO to enable the Servo_B_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/Servo_B.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_ClearFIFO();
 177:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UseStatus) */
 178:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/Servo_B.c **** }
 180:.\Generated_Source\PSoC5/Servo_B.c **** 
 181:.\Generated_Source\PSoC5/Servo_B.c **** 
 182:.\Generated_Source\PSoC5/Servo_B.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/Servo_B.c **** * Function Name: Servo_B_Enable
 184:.\Generated_Source\PSoC5/Servo_B.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/Servo_B.c **** *
 186:.\Generated_Source\PSoC5/Servo_B.c **** * Summary:
 187:.\Generated_Source\PSoC5/Servo_B.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/Servo_B.c **** *
 189:.\Generated_Source\PSoC5/Servo_B.c **** * Parameters:
 190:.\Generated_Source\PSoC5/Servo_B.c **** *  None
 191:.\Generated_Source\PSoC5/Servo_B.c **** *
 192:.\Generated_Source\PSoC5/Servo_B.c **** * Return:
 193:.\Generated_Source\PSoC5/Servo_B.c **** *  None
 194:.\Generated_Source\PSoC5/Servo_B.c **** *
 195:.\Generated_Source\PSoC5/Servo_B.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/Servo_B.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/Servo_B.c **** *
 198:.\Generated_Source\PSoC5/Servo_B.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/Servo_B.c **** void Servo_B_Enable(void) 
 200:.\Generated_Source\PSoC5/Servo_B.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/Servo_B.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_GLOBAL_ENABLE |= Servo_B_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_GLOBAL_STBY_ENABLE |= Servo_B_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/Servo_B.c **** 
 207:.\Generated_Source\PSoC5/Servo_B.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UseControl || Servo_B_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_CONTROL |= Servo_B_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F08002 		orr	r2, r2, #128
  36 0008 1A70     		strb	r2, [r3]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 75640040 		.word	1073767541
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	Servo_B_Enable, .-Servo_B_Enable
  45              		.section	.text.Servo_B_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	Servo_B_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	Servo_B_Stop, %function
  51              	Servo_B_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UseControl || Servo_B_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/Servo_B.c **** }
 212:.\Generated_Source\PSoC5/Servo_B.c **** 
 213:.\Generated_Source\PSoC5/Servo_B.c **** 
 214:.\Generated_Source\PSoC5/Servo_B.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/Servo_B.c **** * Function Name: Servo_B_Stop
 216:.\Generated_Source\PSoC5/Servo_B.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/Servo_B.c **** *
 218:.\Generated_Source\PSoC5/Servo_B.c **** * Summary:
 219:.\Generated_Source\PSoC5/Servo_B.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/Servo_B.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/Servo_B.c **** *
 222:.\Generated_Source\PSoC5/Servo_B.c **** * Parameters:
 223:.\Generated_Source\PSoC5/Servo_B.c **** *  None
 224:.\Generated_Source\PSoC5/Servo_B.c **** *
 225:.\Generated_Source\PSoC5/Servo_B.c **** * Return:
 226:.\Generated_Source\PSoC5/Servo_B.c **** *  None
 227:.\Generated_Source\PSoC5/Servo_B.c **** *
 228:.\Generated_Source\PSoC5/Servo_B.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/Servo_B.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/Servo_B.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/Servo_B.c **** *
 232:.\Generated_Source\PSoC5/Servo_B.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/Servo_B.c **** void Servo_B_Stop(void) 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 6


 234:.\Generated_Source\PSoC5/Servo_B.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UseControl || Servo_B_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_CONTROL &= ((uint8)(~Servo_B_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024B     		ldr	r3, .L5
  60 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  61 0004 02F07F02 		and	r2, r2, #127
  62 0008 1A70     		strb	r2, [r3]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 75640040 		.word	1073767541
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	Servo_B_Stop, .-Servo_B_Stop
  71              		.section	.text.Servo_B_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	Servo_B_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	Servo_B_WriteCounter, %function
  77              	Servo_B_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UseControl || Servo_B_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/Servo_B.c **** 
 239:.\Generated_Source\PSoC5/Servo_B.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_GLOBAL_ENABLE &= ((uint8)(~Servo_B_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_GLOBAL_STBY_ENABLE &= ((uint8)(~Servo_B_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/Servo_B.c **** }
 245:.\Generated_Source\PSoC5/Servo_B.c **** 
 246:.\Generated_Source\PSoC5/Servo_B.c **** #if (Servo_B_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_CompareMode1SW)
 248:.\Generated_Source\PSoC5/Servo_B.c **** 
 249:.\Generated_Source\PSoC5/Servo_B.c **** 
 250:.\Generated_Source\PSoC5/Servo_B.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/Servo_B.c ****         * Function Name: Servo_B_SetCompareMode
 252:.\Generated_Source\PSoC5/Servo_B.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/Servo_B.c ****         *
 254:.\Generated_Source\PSoC5/Servo_B.c ****         * Summary:
 255:.\Generated_Source\PSoC5/Servo_B.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/Servo_B.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/Servo_B.c ****         *
 258:.\Generated_Source\PSoC5/Servo_B.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/Servo_B.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/Servo_B.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/Servo_B.c ****         *
 262:.\Generated_Source\PSoC5/Servo_B.c ****         * Return:
 263:.\Generated_Source\PSoC5/Servo_B.c ****         *  None
 264:.\Generated_Source\PSoC5/Servo_B.c ****         *
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 7


 265:.\Generated_Source\PSoC5/Servo_B.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/Servo_B.c ****         void Servo_B_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/Servo_B.c ****         {
 268:.\Generated_Source\PSoC5/Servo_B.c ****             #if(Servo_B_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/Servo_B.c **** 
 270:.\Generated_Source\PSoC5/Servo_B.c ****                 #if(0 != Servo_B_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/Servo_B.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Servo_B_CTRL_CMPMODE1_
 272:.\Generated_Source\PSoC5/Servo_B.c ****                 #else
 273:.\Generated_Source\PSoC5/Servo_B.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/Servo_B.c ****                 #endif /* (0 != Servo_B_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/Servo_B.c **** 
 276:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_CONTROL3 &= ((uint8)(~Servo_B_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/Servo_B.c **** 
 279:.\Generated_Source\PSoC5/Servo_B.c ****             #elif (Servo_B_UseControl)
 280:.\Generated_Source\PSoC5/Servo_B.c **** 
 281:.\Generated_Source\PSoC5/Servo_B.c ****                 #if(0 != Servo_B_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/Servo_B.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Servo_B_CTRL_CMPMODE1
 283:.\Generated_Source\PSoC5/Servo_B.c ****                                                 Servo_B_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/Servo_B.c ****                 #else
 285:.\Generated_Source\PSoC5/Servo_B.c ****                     uint8 comparemode1masked = comparemode & Servo_B_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/Servo_B.c ****                 #endif /* (0 != Servo_B_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/Servo_B.c **** 
 288:.\Generated_Source\PSoC5/Servo_B.c ****                 #if(0 != Servo_B_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/Servo_B.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Servo_B_CTRL_CMPMODE2
 290:.\Generated_Source\PSoC5/Servo_B.c ****                                                Servo_B_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/Servo_B.c ****                 #else
 292:.\Generated_Source\PSoC5/Servo_B.c ****                     uint8 comparemode2masked = comparemode & Servo_B_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/Servo_B.c ****                 #endif /* (0 != Servo_B_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/Servo_B.c **** 
 295:.\Generated_Source\PSoC5/Servo_B.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_CONTROL &= ((uint8)(~(Servo_B_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/Servo_B.c ****                                             Servo_B_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/Servo_B.c **** 
 300:.\Generated_Source\PSoC5/Servo_B.c ****             #else
 301:.\Generated_Source\PSoC5/Servo_B.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/Servo_B.c ****             #endif /* (Servo_B_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/Servo_B.c ****         }
 304:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* Servo_B_CompareMode1SW */
 305:.\Generated_Source\PSoC5/Servo_B.c **** 
 306:.\Generated_Source\PSoC5/Servo_B.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/Servo_B.c **** 
 308:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_CompareMode1SW)
 309:.\Generated_Source\PSoC5/Servo_B.c **** 
 310:.\Generated_Source\PSoC5/Servo_B.c **** 
 311:.\Generated_Source\PSoC5/Servo_B.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/Servo_B.c ****         * Function Name: Servo_B_SetCompareMode1
 313:.\Generated_Source\PSoC5/Servo_B.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/Servo_B.c ****         *
 315:.\Generated_Source\PSoC5/Servo_B.c ****         * Summary:
 316:.\Generated_Source\PSoC5/Servo_B.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/Servo_B.c ****         *
 318:.\Generated_Source\PSoC5/Servo_B.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/Servo_B.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/Servo_B.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/Servo_B.c ****         *
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 8


 322:.\Generated_Source\PSoC5/Servo_B.c ****         * Return:
 323:.\Generated_Source\PSoC5/Servo_B.c ****         *  None
 324:.\Generated_Source\PSoC5/Servo_B.c ****         *
 325:.\Generated_Source\PSoC5/Servo_B.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/Servo_B.c ****         void Servo_B_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/Servo_B.c ****         {
 328:.\Generated_Source\PSoC5/Servo_B.c ****             #if(0 != Servo_B_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/Servo_B.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Servo_B_CTRL_CMPMODE1_SHIF
 330:.\Generated_Source\PSoC5/Servo_B.c ****                                            Servo_B_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/Servo_B.c ****             #else
 332:.\Generated_Source\PSoC5/Servo_B.c ****                 uint8 comparemodemasked = comparemode & Servo_B_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/Servo_B.c ****             #endif /* (0 != Servo_B_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/Servo_B.c **** 
 335:.\Generated_Source\PSoC5/Servo_B.c ****             #if (Servo_B_UseControl)
 336:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_CONTROL &= ((uint8)(~Servo_B_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/Servo_B.c ****             #endif /* (Servo_B_UseControl) */
 339:.\Generated_Source\PSoC5/Servo_B.c ****         }
 340:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* Servo_B_CompareMode1SW */
 341:.\Generated_Source\PSoC5/Servo_B.c **** 
 342:.\Generated_Source\PSoC5/Servo_B.c **** #if (Servo_B_CompareMode2SW)
 343:.\Generated_Source\PSoC5/Servo_B.c **** 
 344:.\Generated_Source\PSoC5/Servo_B.c **** 
 345:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_SetCompareMode2
 347:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/Servo_B.c ****     *
 349:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 350:.\Generated_Source\PSoC5/Servo_B.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/Servo_B.c ****     *
 352:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/Servo_B.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/Servo_B.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/Servo_B.c ****     *
 356:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 357:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 358:.\Generated_Source\PSoC5/Servo_B.c ****     *
 359:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/Servo_B.c ****     {
 362:.\Generated_Source\PSoC5/Servo_B.c **** 
 363:.\Generated_Source\PSoC5/Servo_B.c ****         #if(0 != Servo_B_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/Servo_B.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Servo_B_CTRL_CMPMODE2_SHIFT)) 
 365:.\Generated_Source\PSoC5/Servo_B.c ****                                                  Servo_B_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 367:.\Generated_Source\PSoC5/Servo_B.c ****             uint8 comparemodemasked = comparemode & Servo_B_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (0 != Servo_B_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/Servo_B.c **** 
 370:.\Generated_Source\PSoC5/Servo_B.c ****         #if (Servo_B_UseControl)
 371:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_CONTROL &= ((uint8)(~Servo_B_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UseControl) */
 374:.\Generated_Source\PSoC5/Servo_B.c ****     }
 375:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /*Servo_B_CompareMode2SW */
 376:.\Generated_Source\PSoC5/Servo_B.c **** 
 377:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/Servo_B.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 9


 379:.\Generated_Source\PSoC5/Servo_B.c **** 
 380:.\Generated_Source\PSoC5/Servo_B.c **** #if (!Servo_B_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/Servo_B.c **** 
 382:.\Generated_Source\PSoC5/Servo_B.c **** 
 383:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_WriteCounter
 385:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/Servo_B.c ****     *
 387:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 388:.\Generated_Source\PSoC5/Servo_B.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/Servo_B.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/Servo_B.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/Servo_B.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/Servo_B.c ****     *
 393:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/Servo_B.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/Servo_B.c ****     *
 396:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 397:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 398:.\Generated_Source\PSoC5/Servo_B.c ****     *
 399:.\Generated_Source\PSoC5/Servo_B.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/Servo_B.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/Servo_B.c ****     *
 402:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/Servo_B.c ****                                        
 405:.\Generated_Source\PSoC5/Servo_B.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/Servo_B.c ****         CY_SET_REG16(Servo_B_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1880     		strh	r0, [r3]	@ movhi
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 08680040 		.word	1073768456
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	Servo_B_WriteCounter, .-Servo_B_WriteCounter
  96              		.section	.text.Servo_B_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	Servo_B_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	Servo_B_ReadCounter, %function
 102              	Servo_B_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/Servo_B.c ****     }
 408:.\Generated_Source\PSoC5/Servo_B.c **** 
 409:.\Generated_Source\PSoC5/Servo_B.c **** 
 410:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 10


 411:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadCounter
 412:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/Servo_B.c ****     *
 414:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 415:.\Generated_Source\PSoC5/Servo_B.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/Servo_B.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/Servo_B.c ****     *
 418:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 420:.\Generated_Source\PSoC5/Servo_B.c ****     *
 421:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 422:.\Generated_Source\PSoC5/Servo_B.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/Servo_B.c ****     *
 424:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/Servo_B.c ****     uint16 Servo_B_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/Servo_B.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/Servo_B.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/Servo_B.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/Servo_B.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/Servo_B.c ****           (void)CY_GET_REG8(Servo_B_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/Servo_B.c **** 
 432:.\Generated_Source\PSoC5/Servo_B.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/Servo_B.c ****         return (CY_GET_REG16(Servo_B_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/Servo_B.c ****     }
 115              		.loc 1 434 0
 116 0008 80B2     		uxth	r0, r0
 117 000a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 000c 14640040 		.word	1073767444
 122 0010 A8680040 		.word	1073768616
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	Servo_B_ReadCounter, .-Servo_B_ReadCounter
 126              		.section	.text.Servo_B_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	Servo_B_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	Servo_B_WritePeriod, %function
 132              	Servo_B_WritePeriod:
 133              	.LFB6:
 435:.\Generated_Source\PSoC5/Servo_B.c **** 
 436:.\Generated_Source\PSoC5/Servo_B.c ****     #if (Servo_B_UseStatus)
 437:.\Generated_Source\PSoC5/Servo_B.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 11


 438:.\Generated_Source\PSoC5/Servo_B.c **** 
 439:.\Generated_Source\PSoC5/Servo_B.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/Servo_B.c ****         * Function Name: Servo_B_ClearFIFO
 441:.\Generated_Source\PSoC5/Servo_B.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/Servo_B.c ****         *
 443:.\Generated_Source\PSoC5/Servo_B.c ****         * Summary:
 444:.\Generated_Source\PSoC5/Servo_B.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/Servo_B.c ****         *
 446:.\Generated_Source\PSoC5/Servo_B.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/Servo_B.c ****         *  None
 448:.\Generated_Source\PSoC5/Servo_B.c ****         *
 449:.\Generated_Source\PSoC5/Servo_B.c ****         * Return:
 450:.\Generated_Source\PSoC5/Servo_B.c ****         *  None
 451:.\Generated_Source\PSoC5/Servo_B.c ****         *
 452:.\Generated_Source\PSoC5/Servo_B.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/Servo_B.c ****         void Servo_B_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/Servo_B.c ****         {
 455:.\Generated_Source\PSoC5/Servo_B.c ****             while(0u != (Servo_B_ReadStatusRegister() & Servo_B_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/Servo_B.c ****             {
 457:.\Generated_Source\PSoC5/Servo_B.c ****                 (void)Servo_B_ReadCapture();
 458:.\Generated_Source\PSoC5/Servo_B.c ****             }
 459:.\Generated_Source\PSoC5/Servo_B.c ****         }
 460:.\Generated_Source\PSoC5/Servo_B.c **** 
 461:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* Servo_B_UseStatus */
 462:.\Generated_Source\PSoC5/Servo_B.c **** 
 463:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* !Servo_B_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/Servo_B.c **** 
 465:.\Generated_Source\PSoC5/Servo_B.c **** 
 466:.\Generated_Source\PSoC5/Servo_B.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Servo_B.c **** * Function Name: Servo_B_WritePeriod
 468:.\Generated_Source\PSoC5/Servo_B.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Servo_B.c **** *
 470:.\Generated_Source\PSoC5/Servo_B.c **** * Summary:
 471:.\Generated_Source\PSoC5/Servo_B.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/Servo_B.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/Servo_B.c **** *
 474:.\Generated_Source\PSoC5/Servo_B.c **** * Parameters:
 475:.\Generated_Source\PSoC5/Servo_B.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/Servo_B.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/Servo_B.c **** *
 478:.\Generated_Source\PSoC5/Servo_B.c **** * Return:
 479:.\Generated_Source\PSoC5/Servo_B.c **** *  None
 480:.\Generated_Source\PSoC5/Servo_B.c **** *
 481:.\Generated_Source\PSoC5/Servo_B.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/Servo_B.c **** void Servo_B_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/Servo_B.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:.\Generated_Source\PSoC5/Servo_B.c ****     #if(Servo_B_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/Servo_B.c ****         CY_SET_REG16(Servo_B_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/Servo_B.c ****     #else
 487:.\Generated_Source\PSoC5/Servo_B.c ****         CY_SET_REG16(Servo_B_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1880     		strh	r0, [r3]	@ movhi
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 88680040 		.word	1073768584
 148              		.cfi_endproc
 149              	.LFE6:
 150              		.size	Servo_B_WritePeriod, .-Servo_B_WritePeriod
 151              		.section	.text.Servo_B_WriteCompare1,"ax",%progbits
 152              		.align	2
 153              		.global	Servo_B_WriteCompare1
 154              		.thumb
 155              		.thumb_func
 156              		.type	Servo_B_WriteCompare1, %function
 157              	Servo_B_WriteCompare1:
 158              	.LFB7:
 488:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/Servo_B.c **** }
 490:.\Generated_Source\PSoC5/Servo_B.c **** 
 491:.\Generated_Source\PSoC5/Servo_B.c **** #if (Servo_B_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/Servo_B.c **** 
 493:.\Generated_Source\PSoC5/Servo_B.c **** 
 494:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_WriteCompare
 496:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/Servo_B.c ****     *
 498:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 499:.\Generated_Source\PSoC5/Servo_B.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/Servo_B.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/Servo_B.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/Servo_B.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/Servo_B.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/Servo_B.c ****     *
 505:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/Servo_B.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/Servo_B.c ****     *
 508:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 509:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 510:.\Generated_Source\PSoC5/Servo_B.c ****     *
 511:.\Generated_Source\PSoC5/Servo_B.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/Servo_B.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/Servo_B.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/Servo_B.c ****     *
 515:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/Servo_B.c ****                                        
 518:.\Generated_Source\PSoC5/Servo_B.c ****     {
 519:.\Generated_Source\PSoC5/Servo_B.c ****         #if(Servo_B_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/Servo_B.c ****             CY_SET_REG16(Servo_B_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 522:.\Generated_Source\PSoC5/Servo_B.c ****             CY_SET_REG16(Servo_B_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/Servo_B.c **** 
 525:.\Generated_Source\PSoC5/Servo_B.c ****         #if (Servo_B_PWMMode == Servo_B__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/Servo_B.c ****             #if(Servo_B_UsingFixedFunction)
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 13


 527:.\Generated_Source\PSoC5/Servo_B.c ****                 CY_SET_REG16(Servo_B_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/Servo_B.c ****             #else
 529:.\Generated_Source\PSoC5/Servo_B.c ****                 CY_SET_REG16(Servo_B_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/Servo_B.c ****             #endif /* (Servo_B_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_PWMMode == Servo_B__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/Servo_B.c ****     }
 533:.\Generated_Source\PSoC5/Servo_B.c **** 
 534:.\Generated_Source\PSoC5/Servo_B.c **** 
 535:.\Generated_Source\PSoC5/Servo_B.c **** #else
 536:.\Generated_Source\PSoC5/Servo_B.c **** 
 537:.\Generated_Source\PSoC5/Servo_B.c **** 
 538:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_WriteCompare1
 540:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/Servo_B.c ****     *
 542:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 543:.\Generated_Source\PSoC5/Servo_B.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/Servo_B.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/Servo_B.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/Servo_B.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/Servo_B.c ****     *
 548:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/Servo_B.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/Servo_B.c ****     *
 551:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 552:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 553:.\Generated_Source\PSoC5/Servo_B.c ****     *
 554:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/Servo_B.c ****                                         
 557:.\Generated_Source\PSoC5/Servo_B.c ****     {
 159              		.loc 1 557 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 558:.\Generated_Source\PSoC5/Servo_B.c ****         #if(Servo_B_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/Servo_B.c ****             CY_SET_REG16(Servo_B_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 561:.\Generated_Source\PSoC5/Servo_B.c ****             CY_SET_REG16(Servo_B_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 561 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1880     		strh	r0, [r3]	@ movhi
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 48680040 		.word	1073768520
 173              		.cfi_endproc
 174              	.LFE7:
 175              		.size	Servo_B_WriteCompare1, .-Servo_B_WriteCompare1
 176              		.section	.text.Servo_B_WriteCompare2,"ax",%progbits
 177              		.align	2
 178              		.global	Servo_B_WriteCompare2
 179              		.thumb
 180              		.thumb_func
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 14


 181              		.type	Servo_B_WriteCompare2, %function
 182              	Servo_B_WriteCompare2:
 183              	.LFB8:
 562:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/Servo_B.c ****     }
 564:.\Generated_Source\PSoC5/Servo_B.c **** 
 565:.\Generated_Source\PSoC5/Servo_B.c **** 
 566:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_WriteCompare2
 568:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/Servo_B.c ****     *
 570:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 571:.\Generated_Source\PSoC5/Servo_B.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/Servo_B.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/Servo_B.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/Servo_B.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/Servo_B.c ****     *  mode.
 576:.\Generated_Source\PSoC5/Servo_B.c ****     *
 577:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/Servo_B.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/Servo_B.c ****     *
 580:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 581:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 582:.\Generated_Source\PSoC5/Servo_B.c ****     *
 583:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/Servo_B.c ****                                         
 586:.\Generated_Source\PSoC5/Servo_B.c ****     {
 184              		.loc 1 586 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 587:.\Generated_Source\PSoC5/Servo_B.c ****         #if(Servo_B_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/Servo_B.c ****             CY_SET_REG16(Servo_B_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 590:.\Generated_Source\PSoC5/Servo_B.c ****             CY_SET_REG16(Servo_B_COMPARE2_LSB_PTR, compare);
 190              		.loc 1 590 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1880     		strh	r0, [r3]	@ movhi
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 68680040 		.word	1073768552
 198              		.cfi_endproc
 199              	.LFE8:
 200              		.size	Servo_B_WriteCompare2, .-Servo_B_WriteCompare2
 201              		.section	.text.Servo_B_Init,"ax",%progbits
 202              		.align	2
 203              		.global	Servo_B_Init
 204              		.thumb
 205              		.thumb_func
 206              		.type	Servo_B_Init, %function
 207              	Servo_B_Init:
 208              	.LFB1:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 15


  85:.\Generated_Source\PSoC5/Servo_B.c **** {
 209              		.loc 1 85 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/Servo_B.c ****         ctrl = Servo_B_CONTROL & ((uint8)(~Servo_B_CTRL_CMPMODE2_MASK)) &
 217              		.loc 1 117 0
 218 0002 114B     		ldr	r3, .L23
 219 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 220 0006 02F0C002 		and	r2, r2, #192
 221              	.LVL4:
 119:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_CONTROL = ctrl | Servo_B_DEFAULT_COMPARE2_MODE |
 222              		.loc 1 119 0
 223 000a 42F00902 		orr	r2, r2, #9
 224              	.LVL5:
 225 000e 1A70     		strb	r2, [r3]
 129:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_AUX_CONTROLDP0 |= (Servo_B_AUX_CTRL_FIFO0_CLR);
 226              		.loc 1 129 0
 227 0010 1F33     		adds	r3, r3, #31
 228 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 229 0014 42F00102 		orr	r2, r2, #1
 230 0018 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_AUX_CONTROLDP1 |= (Servo_B_AUX_CTRL_FIFO0_CLR);
 231              		.loc 1 130 0
 232 001a 0133     		adds	r3, r3, #1
 233 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 234 001e 42F00102 		orr	r2, r2, #1
 235 0022 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_WriteCounter(Servo_B_INIT_PERIOD_VALUE);
 236              		.loc 1 133 0
 237 0024 4EF66020 		movw	r0, #60000
 238 0028 FFF7FEFF 		bl	Servo_B_WriteCounter
 239              	.LVL6:
 136:.\Generated_Source\PSoC5/Servo_B.c ****     Servo_B_WritePeriod(Servo_B_INIT_PERIOD_VALUE);
 240              		.loc 1 136 0
 241 002c 4EF66020 		movw	r0, #60000
 242 0030 FFF7FEFF 		bl	Servo_B_WritePeriod
 243              	.LVL7:
 141:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_WriteCompare1(Servo_B_INIT_COMPARE_VALUE1);
 244              		.loc 1 141 0
 245 0034 47F23050 		movw	r0, #30000
 246 0038 FFF7FEFF 		bl	Servo_B_WriteCompare1
 247              	.LVL8:
 142:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_WriteCompare2(Servo_B_INIT_COMPARE_VALUE2);
 248              		.loc 1 142 0
 249 003c 47F23050 		movw	r0, #30000
 250 0040 FFF7FEFF 		bl	Servo_B_WriteCompare2
 251              	.LVL9:
 252 0044 08BD     		pop	{r3, pc}
 253              	.L24:
 254 0046 00BF     		.align	2
 255              	.L23:
 256 0048 75640040 		.word	1073767541
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 16


 257              		.cfi_endproc
 258              	.LFE1:
 259              		.size	Servo_B_Init, .-Servo_B_Init
 260              		.section	.text.Servo_B_Start,"ax",%progbits
 261              		.align	2
 262              		.global	Servo_B_Start
 263              		.thumb
 264              		.thumb_func
 265              		.type	Servo_B_Start, %function
 266              	Servo_B_Start:
 267              	.LFB0:
  56:.\Generated_Source\PSoC5/Servo_B.c **** {
 268              		.loc 1 56 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 08B5     		push	{r3, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/Servo_B.c ****     if(Servo_B_initVar == 0u)
 276              		.loc 1 58 0
 277 0002 054B     		ldr	r3, .L27
 278 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279 0006 23B9     		cbnz	r3, .L26
  60:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_Init();
 280              		.loc 1 60 0
 281 0008 FFF7FEFF 		bl	Servo_B_Init
 282              	.LVL10:
  61:.\Generated_Source\PSoC5/Servo_B.c ****         Servo_B_initVar = 1u;
 283              		.loc 1 61 0
 284 000c 0122     		movs	r2, #1
 285 000e 024B     		ldr	r3, .L27
 286 0010 1A70     		strb	r2, [r3]
 287              	.L26:
  63:.\Generated_Source\PSoC5/Servo_B.c ****     Servo_B_Enable();
 288              		.loc 1 63 0
 289 0012 FFF7FEFF 		bl	Servo_B_Enable
 290              	.LVL11:
 291 0016 08BD     		pop	{r3, pc}
 292              	.L28:
 293              		.align	2
 294              	.L27:
 295 0018 00000000 		.word	.LANCHOR0
 296              		.cfi_endproc
 297              	.LFE0:
 298              		.size	Servo_B_Start, .-Servo_B_Start
 299              		.section	.text.Servo_B_ReadControlRegister,"ax",%progbits
 300              		.align	2
 301              		.global	Servo_B_ReadControlRegister
 302              		.thumb
 303              		.thumb_func
 304              		.type	Servo_B_ReadControlRegister, %function
 305              	Servo_B_ReadControlRegister:
 306              	.LFB9:
 591:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/Servo_B.c ****     }
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 17


 593:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/Servo_B.c **** 
 595:.\Generated_Source\PSoC5/Servo_B.c **** #if (Servo_B_DeadBandUsed)
 596:.\Generated_Source\PSoC5/Servo_B.c **** 
 597:.\Generated_Source\PSoC5/Servo_B.c **** 
 598:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_WriteDeadTime
 600:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/Servo_B.c ****     *
 602:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 603:.\Generated_Source\PSoC5/Servo_B.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/Servo_B.c ****     *
 605:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/Servo_B.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/Servo_B.c ****     *
 608:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 609:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 610:.\Generated_Source\PSoC5/Servo_B.c ****     *
 611:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/Servo_B.c ****     {
 614:.\Generated_Source\PSoC5/Servo_B.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/Servo_B.c ****         #if(!Servo_B_DeadBand2_4)
 616:.\Generated_Source\PSoC5/Servo_B.c ****             CY_SET_REG8(Servo_B_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 618:.\Generated_Source\PSoC5/Servo_B.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/Servo_B.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/Servo_B.c ****             Servo_B_DEADBAND_COUNT &= ((uint8)(~Servo_B_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/Servo_B.c **** 
 622:.\Generated_Source\PSoC5/Servo_B.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/Servo_B.c ****             #if(Servo_B_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Servo_B_DEADBAND_COUNT_SHIFT)
 625:.\Generated_Source\PSoC5/Servo_B.c ****                                                     Servo_B_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/Servo_B.c ****             #else
 627:.\Generated_Source\PSoC5/Servo_B.c ****                 Servo_B_DEADBAND_COUNT |= deadtime & Servo_B_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/Servo_B.c ****             #endif /* (Servo_B_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/Servo_B.c **** 
 630:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (!Servo_B_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/Servo_B.c ****     }
 632:.\Generated_Source\PSoC5/Servo_B.c **** 
 633:.\Generated_Source\PSoC5/Servo_B.c **** 
 634:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadDeadTime
 636:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/Servo_B.c ****     *
 638:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 639:.\Generated_Source\PSoC5/Servo_B.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/Servo_B.c ****     *
 641:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 643:.\Generated_Source\PSoC5/Servo_B.c ****     *
 644:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 645:.\Generated_Source\PSoC5/Servo_B.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/Servo_B.c ****     *
 647:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/Servo_B.c ****     uint8 Servo_B_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/Servo_B.c ****     {
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 18


 650:.\Generated_Source\PSoC5/Servo_B.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/Servo_B.c ****         #if(!Servo_B_DeadBand2_4)
 652:.\Generated_Source\PSoC5/Servo_B.c ****             return (CY_GET_REG8(Servo_B_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 654:.\Generated_Source\PSoC5/Servo_B.c **** 
 655:.\Generated_Source\PSoC5/Servo_B.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/Servo_B.c ****             #if(Servo_B_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/Servo_B.c ****                 return ((uint8)(((uint8)(Servo_B_DEADBAND_COUNT & Servo_B_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/Servo_B.c ****                                                                            Servo_B_DEADBAND_COUNT_S
 659:.\Generated_Source\PSoC5/Servo_B.c ****             #else
 660:.\Generated_Source\PSoC5/Servo_B.c ****                 return (Servo_B_DEADBAND_COUNT & Servo_B_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/Servo_B.c ****             #endif /* (Servo_B_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (!Servo_B_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/Servo_B.c ****     }
 664:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/Servo_B.c **** 
 666:.\Generated_Source\PSoC5/Servo_B.c **** #if (Servo_B_UseStatus || Servo_B_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/Servo_B.c **** 
 668:.\Generated_Source\PSoC5/Servo_B.c **** 
 669:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_SetInterruptMode
 671:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/Servo_B.c ****     *
 673:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 674:.\Generated_Source\PSoC5/Servo_B.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/Servo_B.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/Servo_B.c ****     *
 677:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/Servo_B.c ****     *
 680:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 681:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 682:.\Generated_Source\PSoC5/Servo_B.c ****     *
 683:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/Servo_B.c ****     {
 686:.\Generated_Source\PSoC5/Servo_B.c ****         CY_SET_REG8(Servo_B_STATUS_MASK_PTR, interruptMode);
 687:.\Generated_Source\PSoC5/Servo_B.c ****     }
 688:.\Generated_Source\PSoC5/Servo_B.c **** 
 689:.\Generated_Source\PSoC5/Servo_B.c **** 
 690:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadStatusRegister
 692:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/Servo_B.c ****     *
 694:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 695:.\Generated_Source\PSoC5/Servo_B.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/Servo_B.c ****     *
 697:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 699:.\Generated_Source\PSoC5/Servo_B.c ****     *
 700:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 701:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/Servo_B.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/Servo_B.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/Servo_B.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/Servo_B.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/Servo_B.c ****     *  [2]   : Terminal count
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 19


 707:.\Generated_Source\PSoC5/Servo_B.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/Servo_B.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/Servo_B.c ****     *
 710:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/Servo_B.c ****     uint8 Servo_B_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/Servo_B.c ****     {
 713:.\Generated_Source\PSoC5/Servo_B.c ****         return (CY_GET_REG8(Servo_B_STATUS_PTR));
 714:.\Generated_Source\PSoC5/Servo_B.c ****     }
 715:.\Generated_Source\PSoC5/Servo_B.c **** 
 716:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* (Servo_B_UseStatus || Servo_B_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/Servo_B.c **** 
 718:.\Generated_Source\PSoC5/Servo_B.c **** 
 719:.\Generated_Source\PSoC5/Servo_B.c **** #if (Servo_B_UseControl)
 720:.\Generated_Source\PSoC5/Servo_B.c **** 
 721:.\Generated_Source\PSoC5/Servo_B.c **** 
 722:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadControlRegister
 724:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/Servo_B.c ****     *
 726:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 727:.\Generated_Source\PSoC5/Servo_B.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/Servo_B.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/Servo_B.c ****     *
 730:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 732:.\Generated_Source\PSoC5/Servo_B.c ****     *
 733:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 734:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/Servo_B.c ****     *
 736:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/Servo_B.c ****     uint8 Servo_B_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/Servo_B.c ****     {
 307              		.loc 1 738 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/Servo_B.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/Servo_B.c **** 
 741:.\Generated_Source\PSoC5/Servo_B.c ****         result = CY_GET_REG8(Servo_B_CONTROL_PTR);
 312              		.loc 1 741 0
 313 0000 014B     		ldr	r3, .L30
 314 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 315              	.LVL12:
 742:.\Generated_Source\PSoC5/Servo_B.c ****         return (result);
 743:.\Generated_Source\PSoC5/Servo_B.c ****     }
 316              		.loc 1 743 0
 317 0004 7047     		bx	lr
 318              	.L31:
 319 0006 00BF     		.align	2
 320              	.L30:
 321 0008 75640040 		.word	1073767541
 322              		.cfi_endproc
 323              	.LFE9:
 324              		.size	Servo_B_ReadControlRegister, .-Servo_B_ReadControlRegister
 325              		.section	.text.Servo_B_WriteControlRegister,"ax",%progbits
 326              		.align	2
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 20


 327              		.global	Servo_B_WriteControlRegister
 328              		.thumb
 329              		.thumb_func
 330              		.type	Servo_B_WriteControlRegister, %function
 331              	Servo_B_WriteControlRegister:
 332              	.LFB10:
 744:.\Generated_Source\PSoC5/Servo_B.c **** 
 745:.\Generated_Source\PSoC5/Servo_B.c **** 
 746:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_WriteControlRegister
 748:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/Servo_B.c ****     *
 750:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 751:.\Generated_Source\PSoC5/Servo_B.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/Servo_B.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/Servo_B.c ****     *
 754:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/Servo_B.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/Servo_B.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/Servo_B.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/Servo_B.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/Servo_B.c ****     *
 761:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 762:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 763:.\Generated_Source\PSoC5/Servo_B.c ****     *
 764:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/Servo_B.c ****     void Servo_B_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/Servo_B.c ****     {
 333              		.loc 1 766 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338              	.LVL13:
 767:.\Generated_Source\PSoC5/Servo_B.c ****         CY_SET_REG8(Servo_B_CONTROL_PTR, control);
 339              		.loc 1 767 0
 340 0000 014B     		ldr	r3, .L33
 341 0002 1870     		strb	r0, [r3]
 342 0004 7047     		bx	lr
 343              	.L34:
 344 0006 00BF     		.align	2
 345              	.L33:
 346 0008 75640040 		.word	1073767541
 347              		.cfi_endproc
 348              	.LFE10:
 349              		.size	Servo_B_WriteControlRegister, .-Servo_B_WriteControlRegister
 350              		.section	.text.Servo_B_ReadCapture,"ax",%progbits
 351              		.align	2
 352              		.global	Servo_B_ReadCapture
 353              		.thumb
 354              		.thumb_func
 355              		.type	Servo_B_ReadCapture, %function
 356              	Servo_B_ReadCapture:
 357              	.LFB11:
 768:.\Generated_Source\PSoC5/Servo_B.c ****     }
 769:.\Generated_Source\PSoC5/Servo_B.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 21


 770:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* (Servo_B_UseControl) */
 771:.\Generated_Source\PSoC5/Servo_B.c **** 
 772:.\Generated_Source\PSoC5/Servo_B.c **** 
 773:.\Generated_Source\PSoC5/Servo_B.c **** #if (!Servo_B_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/Servo_B.c **** 
 775:.\Generated_Source\PSoC5/Servo_B.c **** 
 776:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadCapture
 778:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/Servo_B.c ****     *
 780:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 781:.\Generated_Source\PSoC5/Servo_B.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/Servo_B.c ****     *
 783:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 785:.\Generated_Source\PSoC5/Servo_B.c ****     *
 786:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 787:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/Servo_B.c ****     *
 789:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/Servo_B.c ****     uint16 Servo_B_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/Servo_B.c ****     {
 358              		.loc 1 791 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/Servo_B.c ****         return (CY_GET_REG16(Servo_B_CAPTURE_LSB_PTR));
 363              		.loc 1 792 0
 364 0000 014B     		ldr	r3, .L36
 365 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/Servo_B.c ****     }
 366              		.loc 1 793 0
 367 0004 80B2     		uxth	r0, r0
 368 0006 7047     		bx	lr
 369              	.L37:
 370              		.align	2
 371              	.L36:
 372 0008 A8680040 		.word	1073768616
 373              		.cfi_endproc
 374              	.LFE11:
 375              		.size	Servo_B_ReadCapture, .-Servo_B_ReadCapture
 376              		.section	.text.Servo_B_ReadCompare1,"ax",%progbits
 377              		.align	2
 378              		.global	Servo_B_ReadCompare1
 379              		.thumb
 380              		.thumb_func
 381              		.type	Servo_B_ReadCompare1, %function
 382              	Servo_B_ReadCompare1:
 383              	.LFB12:
 794:.\Generated_Source\PSoC5/Servo_B.c **** 
 795:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* (!Servo_B_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/Servo_B.c **** 
 797:.\Generated_Source\PSoC5/Servo_B.c **** 
 798:.\Generated_Source\PSoC5/Servo_B.c **** #if (Servo_B_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/Servo_B.c **** 
 800:.\Generated_Source\PSoC5/Servo_B.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 22


 801:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadCompare
 803:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/Servo_B.c ****     *
 805:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 806:.\Generated_Source\PSoC5/Servo_B.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/Servo_B.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/Servo_B.c ****     *
 809:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 811:.\Generated_Source\PSoC5/Servo_B.c ****     *
 812:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 813:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/Servo_B.c ****     *
 815:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/Servo_B.c ****     uint16 Servo_B_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/Servo_B.c ****     {
 818:.\Generated_Source\PSoC5/Servo_B.c ****         #if(Servo_B_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/Servo_B.c ****             return ((uint16)CY_GET_REG16(Servo_B_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/Servo_B.c ****         #else
 821:.\Generated_Source\PSoC5/Servo_B.c ****             return (CY_GET_REG16(Servo_B_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/Servo_B.c ****         #endif /* (Servo_B_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/Servo_B.c ****     }
 824:.\Generated_Source\PSoC5/Servo_B.c **** 
 825:.\Generated_Source\PSoC5/Servo_B.c **** #else
 826:.\Generated_Source\PSoC5/Servo_B.c **** 
 827:.\Generated_Source\PSoC5/Servo_B.c **** 
 828:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadCompare1
 830:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/Servo_B.c ****     *
 832:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 833:.\Generated_Source\PSoC5/Servo_B.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/Servo_B.c ****     *
 835:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 837:.\Generated_Source\PSoC5/Servo_B.c ****     *
 838:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 839:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/Servo_B.c ****     *
 841:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/Servo_B.c ****     uint16 Servo_B_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/Servo_B.c ****     {
 384              		.loc 1 843 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 844:.\Generated_Source\PSoC5/Servo_B.c ****         return (CY_GET_REG16(Servo_B_COMPARE1_LSB_PTR));
 389              		.loc 1 844 0
 390 0000 014B     		ldr	r3, .L39
 391 0002 1888     		ldrh	r0, [r3]
 845:.\Generated_Source\PSoC5/Servo_B.c ****     }
 392              		.loc 1 845 0
 393 0004 80B2     		uxth	r0, r0
 394 0006 7047     		bx	lr
 395              	.L40:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 23


 396              		.align	2
 397              	.L39:
 398 0008 48680040 		.word	1073768520
 399              		.cfi_endproc
 400              	.LFE12:
 401              		.size	Servo_B_ReadCompare1, .-Servo_B_ReadCompare1
 402              		.section	.text.Servo_B_ReadCompare2,"ax",%progbits
 403              		.align	2
 404              		.global	Servo_B_ReadCompare2
 405              		.thumb
 406              		.thumb_func
 407              		.type	Servo_B_ReadCompare2, %function
 408              	Servo_B_ReadCompare2:
 409              	.LFB13:
 846:.\Generated_Source\PSoC5/Servo_B.c **** 
 847:.\Generated_Source\PSoC5/Servo_B.c **** 
 848:.\Generated_Source\PSoC5/Servo_B.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/Servo_B.c ****     * Function Name: Servo_B_ReadCompare2
 850:.\Generated_Source\PSoC5/Servo_B.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/Servo_B.c ****     *
 852:.\Generated_Source\PSoC5/Servo_B.c ****     * Summary:
 853:.\Generated_Source\PSoC5/Servo_B.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/Servo_B.c ****     *
 855:.\Generated_Source\PSoC5/Servo_B.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/Servo_B.c ****     *  None
 857:.\Generated_Source\PSoC5/Servo_B.c ****     *
 858:.\Generated_Source\PSoC5/Servo_B.c ****     * Return:
 859:.\Generated_Source\PSoC5/Servo_B.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/Servo_B.c ****     *
 861:.\Generated_Source\PSoC5/Servo_B.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/Servo_B.c ****     uint16 Servo_B_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/Servo_B.c ****     {
 410              		.loc 1 863 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 864:.\Generated_Source\PSoC5/Servo_B.c ****         return (CY_GET_REG16(Servo_B_COMPARE2_LSB_PTR));
 415              		.loc 1 864 0
 416 0000 014B     		ldr	r3, .L42
 417 0002 1888     		ldrh	r0, [r3]
 865:.\Generated_Source\PSoC5/Servo_B.c ****     }
 418              		.loc 1 865 0
 419 0004 80B2     		uxth	r0, r0
 420 0006 7047     		bx	lr
 421              	.L43:
 422              		.align	2
 423              	.L42:
 424 0008 68680040 		.word	1073768552
 425              		.cfi_endproc
 426              	.LFE13:
 427              		.size	Servo_B_ReadCompare2, .-Servo_B_ReadCompare2
 428              		.section	.text.Servo_B_ReadPeriod,"ax",%progbits
 429              		.align	2
 430              		.global	Servo_B_ReadPeriod
 431              		.thumb
 432              		.thumb_func
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 24


 433              		.type	Servo_B_ReadPeriod, %function
 434              	Servo_B_ReadPeriod:
 435              	.LFB14:
 866:.\Generated_Source\PSoC5/Servo_B.c **** 
 867:.\Generated_Source\PSoC5/Servo_B.c **** #endif /* (Servo_B_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/Servo_B.c **** 
 869:.\Generated_Source\PSoC5/Servo_B.c **** 
 870:.\Generated_Source\PSoC5/Servo_B.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/Servo_B.c **** * Function Name: Servo_B_ReadPeriod
 872:.\Generated_Source\PSoC5/Servo_B.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/Servo_B.c **** *
 874:.\Generated_Source\PSoC5/Servo_B.c **** * Summary:
 875:.\Generated_Source\PSoC5/Servo_B.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/Servo_B.c **** *
 877:.\Generated_Source\PSoC5/Servo_B.c **** * Parameters:
 878:.\Generated_Source\PSoC5/Servo_B.c **** *  None
 879:.\Generated_Source\PSoC5/Servo_B.c **** *
 880:.\Generated_Source\PSoC5/Servo_B.c **** * Return:
 881:.\Generated_Source\PSoC5/Servo_B.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/Servo_B.c **** *
 883:.\Generated_Source\PSoC5/Servo_B.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/Servo_B.c **** uint16 Servo_B_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/Servo_B.c **** {
 436              		.loc 1 885 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/Servo_B.c ****     #if(Servo_B_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/Servo_B.c ****         return ((uint16)CY_GET_REG16(Servo_B_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/Servo_B.c ****     #else
 889:.\Generated_Source\PSoC5/Servo_B.c ****         return (CY_GET_REG16(Servo_B_PERIOD_LSB_PTR));
 441              		.loc 1 889 0
 442 0000 014B     		ldr	r3, .L45
 443 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/Servo_B.c ****     #endif /* (Servo_B_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/Servo_B.c **** }
 444              		.loc 1 891 0
 445 0004 80B2     		uxth	r0, r0
 446 0006 7047     		bx	lr
 447              	.L46:
 448              		.align	2
 449              	.L45:
 450 0008 88680040 		.word	1073768584
 451              		.cfi_endproc
 452              	.LFE14:
 453              		.size	Servo_B_ReadPeriod, .-Servo_B_ReadPeriod
 454              		.global	Servo_B_initVar
 455              		.bss
 456              		.set	.LANCHOR0,. + 0
 457              		.type	Servo_B_initVar, %object
 458              		.size	Servo_B_initVar, 1
 459              	Servo_B_initVar:
 460 0000 00       		.space	1
 461              		.text
 462              	.Letext0:
 463              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 25


 464              		.section	.debug_info,"",%progbits
 465              	.Ldebug_info0:
 466 0000 DC020000 		.4byte	0x2dc
 467 0004 0400     		.2byte	0x4
 468 0006 00000000 		.4byte	.Ldebug_abbrev0
 469 000a 04       		.byte	0x4
 470 000b 01       		.uleb128 0x1
 471 000c CA010000 		.4byte	.LASF37
 472 0010 01       		.byte	0x1
 473 0011 26010000 		.4byte	.LASF38
 474 0015 8E010000 		.4byte	.LASF39
 475 0019 00000000 		.4byte	.Ldebug_ranges0+0
 476 001d 00000000 		.4byte	0
 477 0021 00000000 		.4byte	.Ldebug_line0
 478 0025 02       		.uleb128 0x2
 479 0026 01       		.byte	0x1
 480 0027 06       		.byte	0x6
 481 0028 CA020000 		.4byte	.LASF0
 482 002c 02       		.uleb128 0x2
 483 002d 01       		.byte	0x1
 484 002e 08       		.byte	0x8
 485 002f 9F000000 		.4byte	.LASF1
 486 0033 02       		.uleb128 0x2
 487 0034 02       		.byte	0x2
 488 0035 05       		.byte	0x5
 489 0036 8D020000 		.4byte	.LASF2
 490 003a 02       		.uleb128 0x2
 491 003b 02       		.byte	0x2
 492 003c 07       		.byte	0x7
 493 003d 46000000 		.4byte	.LASF3
 494 0041 02       		.uleb128 0x2
 495 0042 04       		.byte	0x4
 496 0043 05       		.byte	0x5
 497 0044 C1020000 		.4byte	.LASF4
 498 0048 02       		.uleb128 0x2
 499 0049 04       		.byte	0x4
 500 004a 07       		.byte	0x7
 501 004b B2000000 		.4byte	.LASF5
 502 004f 02       		.uleb128 0x2
 503 0050 08       		.byte	0x8
 504 0051 05       		.byte	0x5
 505 0052 4F020000 		.4byte	.LASF6
 506 0056 02       		.uleb128 0x2
 507 0057 08       		.byte	0x8
 508 0058 07       		.byte	0x7
 509 0059 88000000 		.4byte	.LASF7
 510 005d 03       		.uleb128 0x3
 511 005e 04       		.byte	0x4
 512 005f 05       		.byte	0x5
 513 0060 696E7400 		.ascii	"int\000"
 514 0064 02       		.uleb128 0x2
 515 0065 04       		.byte	0x4
 516 0066 07       		.byte	0x7
 517 0067 59000000 		.4byte	.LASF8
 518 006b 04       		.uleb128 0x4
 519 006c C4000000 		.4byte	.LASF9
 520 0070 02       		.byte	0x2
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 26


 521 0071 B3       		.byte	0xb3
 522 0072 2C000000 		.4byte	0x2c
 523 0076 04       		.uleb128 0x4
 524 0077 09010000 		.4byte	.LASF10
 525 007b 02       		.byte	0x2
 526 007c B4       		.byte	0xb4
 527 007d 3A000000 		.4byte	0x3a
 528 0081 02       		.uleb128 0x2
 529 0082 04       		.byte	0x4
 530 0083 04       		.byte	0x4
 531 0084 7A000000 		.4byte	.LASF11
 532 0088 02       		.uleb128 0x2
 533 0089 08       		.byte	0x8
 534 008a 04       		.byte	0x4
 535 008b EE000000 		.4byte	.LASF12
 536 008f 02       		.uleb128 0x2
 537 0090 01       		.byte	0x1
 538 0091 08       		.byte	0x8
 539 0092 73020000 		.4byte	.LASF13
 540 0096 05       		.uleb128 0x5
 541 0097 AD000000 		.4byte	.LASF14
 542 009b 02       		.byte	0x2
 543 009c 5D01     		.2byte	0x15d
 544 009e A2000000 		.4byte	0xa2
 545 00a2 06       		.uleb128 0x6
 546 00a3 6B000000 		.4byte	0x6b
 547 00a7 05       		.uleb128 0x5
 548 00a8 00000000 		.4byte	.LASF15
 549 00ac 02       		.byte	0x2
 550 00ad 5E01     		.2byte	0x15e
 551 00af B3000000 		.4byte	0xb3
 552 00b3 06       		.uleb128 0x6
 553 00b4 76000000 		.4byte	0x76
 554 00b8 02       		.uleb128 0x2
 555 00b9 04       		.byte	0x4
 556 00ba 07       		.byte	0x7
 557 00bb 46020000 		.4byte	.LASF16
 558 00bf 07       		.uleb128 0x7
 559 00c0 DF000000 		.4byte	.LASF17
 560 00c4 01       		.byte	0x1
 561 00c5 C7       		.byte	0xc7
 562 00c6 00000000 		.4byte	.LFB2
 563 00ca 10000000 		.4byte	.LFE2-.LFB2
 564 00ce 01       		.uleb128 0x1
 565 00cf 9C       		.byte	0x9c
 566 00d0 07       		.uleb128 0x7
 567 00d1 D2000000 		.4byte	.LASF18
 568 00d5 01       		.byte	0x1
 569 00d6 E9       		.byte	0xe9
 570 00d7 00000000 		.4byte	.LFB3
 571 00db 10000000 		.4byte	.LFE3-.LFB3
 572 00df 01       		.uleb128 0x1
 573 00e0 9C       		.byte	0x9c
 574 00e1 08       		.uleb128 0x8
 575 00e2 78020000 		.4byte	.LASF19
 576 00e6 01       		.byte	0x1
 577 00e7 9301     		.2byte	0x193
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 27


 578 00e9 00000000 		.4byte	.LFB4
 579 00ed 0C000000 		.4byte	.LFE4-.LFB4
 580 00f1 01       		.uleb128 0x1
 581 00f2 9C       		.byte	0x9c
 582 00f3 06010000 		.4byte	0x106
 583 00f7 09       		.uleb128 0x9
 584 00f8 80000000 		.4byte	.LASF21
 585 00fc 01       		.byte	0x1
 586 00fd 9301     		.2byte	0x193
 587 00ff 76000000 		.4byte	0x76
 588 0103 01       		.uleb128 0x1
 589 0104 50       		.byte	0x50
 590 0105 00       		.byte	0
 591 0106 0A       		.uleb128 0xa
 592 0107 66000000 		.4byte	.LASF32
 593 010b 01       		.byte	0x1
 594 010c A901     		.2byte	0x1a9
 595 010e 76000000 		.4byte	0x76
 596 0112 00000000 		.4byte	.LFB5
 597 0116 14000000 		.4byte	.LFE5-.LFB5
 598 011a 01       		.uleb128 0x1
 599 011b 9C       		.byte	0x9c
 600 011c 08       		.uleb128 0x8
 601 011d F5000000 		.4byte	.LASF20
 602 0121 01       		.byte	0x1
 603 0122 E201     		.2byte	0x1e2
 604 0124 00000000 		.4byte	.LFB6
 605 0128 0C000000 		.4byte	.LFE6-.LFB6
 606 012c 01       		.uleb128 0x1
 607 012d 9C       		.byte	0x9c
 608 012e 41010000 		.4byte	0x141
 609 0132 09       		.uleb128 0x9
 610 0133 23000000 		.4byte	.LASF22
 611 0137 01       		.byte	0x1
 612 0138 E201     		.2byte	0x1e2
 613 013a 76000000 		.4byte	0x76
 614 013e 01       		.uleb128 0x1
 615 013f 50       		.byte	0x50
 616 0140 00       		.byte	0
 617 0141 08       		.uleb128 0x8
 618 0142 5D020000 		.4byte	.LASF23
 619 0146 01       		.byte	0x1
 620 0147 2B02     		.2byte	0x22b
 621 0149 00000000 		.4byte	.LFB7
 622 014d 0C000000 		.4byte	.LFE7-.LFB7
 623 0151 01       		.uleb128 0x1
 624 0152 9C       		.byte	0x9c
 625 0153 66010000 		.4byte	0x166
 626 0157 09       		.uleb128 0x9
 627 0158 D6020000 		.4byte	.LASF24
 628 015c 01       		.byte	0x1
 629 015d 2B02     		.2byte	0x22b
 630 015f 76000000 		.4byte	0x76
 631 0163 01       		.uleb128 0x1
 632 0164 50       		.byte	0x50
 633 0165 00       		.byte	0
 634 0166 08       		.uleb128 0x8
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 28


 635 0167 10010000 		.4byte	.LASF25
 636 016b 01       		.byte	0x1
 637 016c 4802     		.2byte	0x248
 638 016e 00000000 		.4byte	.LFB8
 639 0172 0C000000 		.4byte	.LFE8-.LFB8
 640 0176 01       		.uleb128 0x1
 641 0177 9C       		.byte	0x9c
 642 0178 8B010000 		.4byte	0x18b
 643 017c 09       		.uleb128 0x9
 644 017d D6020000 		.4byte	.LASF24
 645 0181 01       		.byte	0x1
 646 0182 4802     		.2byte	0x248
 647 0184 76000000 		.4byte	0x76
 648 0188 01       		.uleb128 0x1
 649 0189 50       		.byte	0x50
 650 018a 00       		.byte	0
 651 018b 0B       		.uleb128 0xb
 652 018c 16000000 		.4byte	.LASF26
 653 0190 01       		.byte	0x1
 654 0191 54       		.byte	0x54
 655 0192 00000000 		.4byte	.LFB1
 656 0196 4C000000 		.4byte	.LFE1-.LFB1
 657 019a 01       		.uleb128 0x1
 658 019b 9C       		.byte	0x9c
 659 019c 00020000 		.4byte	0x200
 660 01a0 0C       		.uleb128 0xc
 661 01a1 C5010000 		.4byte	.LASF28
 662 01a5 01       		.byte	0x1
 663 01a6 57       		.byte	0x57
 664 01a7 6B000000 		.4byte	0x6b
 665 01ab 00000000 		.4byte	.LLST0
 666 01af 0D       		.uleb128 0xd
 667 01b0 2C000000 		.4byte	.LVL6
 668 01b4 E1000000 		.4byte	0xe1
 669 01b8 C4010000 		.4byte	0x1c4
 670 01bc 0E       		.uleb128 0xe
 671 01bd 01       		.uleb128 0x1
 672 01be 50       		.byte	0x50
 673 01bf 03       		.uleb128 0x3
 674 01c0 0B       		.byte	0xb
 675 01c1 60EA     		.2byte	0xea60
 676 01c3 00       		.byte	0
 677 01c4 0D       		.uleb128 0xd
 678 01c5 34000000 		.4byte	.LVL7
 679 01c9 1C010000 		.4byte	0x11c
 680 01cd D9010000 		.4byte	0x1d9
 681 01d1 0E       		.uleb128 0xe
 682 01d2 01       		.uleb128 0x1
 683 01d3 50       		.byte	0x50
 684 01d4 03       		.uleb128 0x3
 685 01d5 0B       		.byte	0xb
 686 01d6 60EA     		.2byte	0xea60
 687 01d8 00       		.byte	0
 688 01d9 0D       		.uleb128 0xd
 689 01da 3C000000 		.4byte	.LVL8
 690 01de 41010000 		.4byte	0x141
 691 01e2 EE010000 		.4byte	0x1ee
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 29


 692 01e6 0E       		.uleb128 0xe
 693 01e7 01       		.uleb128 0x1
 694 01e8 50       		.byte	0x50
 695 01e9 03       		.uleb128 0x3
 696 01ea 0A       		.byte	0xa
 697 01eb 3075     		.2byte	0x7530
 698 01ed 00       		.byte	0
 699 01ee 0F       		.uleb128 0xf
 700 01ef 44000000 		.4byte	.LVL9
 701 01f3 66010000 		.4byte	0x166
 702 01f7 0E       		.uleb128 0xe
 703 01f8 01       		.uleb128 0x1
 704 01f9 50       		.byte	0x50
 705 01fa 03       		.uleb128 0x3
 706 01fb 0A       		.byte	0xa
 707 01fc 3075     		.2byte	0x7530
 708 01fe 00       		.byte	0
 709 01ff 00       		.byte	0
 710 0200 0B       		.uleb128 0xb
 711 0201 79010000 		.4byte	.LASF27
 712 0205 01       		.byte	0x1
 713 0206 37       		.byte	0x37
 714 0207 00000000 		.4byte	.LFB0
 715 020b 1C000000 		.4byte	.LFE0-.LFB0
 716 020f 01       		.uleb128 0x1
 717 0210 9C       		.byte	0x9c
 718 0211 28020000 		.4byte	0x228
 719 0215 10       		.uleb128 0x10
 720 0216 0C000000 		.4byte	.LVL10
 721 021a 8B010000 		.4byte	0x18b
 722 021e 10       		.uleb128 0x10
 723 021f 16000000 		.4byte	.LVL11
 724 0223 BF000000 		.4byte	0xbf
 725 0227 00       		.byte	0
 726 0228 11       		.uleb128 0x11
 727 0229 2A000000 		.4byte	.LASF40
 728 022d 01       		.byte	0x1
 729 022e E102     		.2byte	0x2e1
 730 0230 6B000000 		.4byte	0x6b
 731 0234 00000000 		.4byte	.LFB9
 732 0238 0C000000 		.4byte	.LFE9-.LFB9
 733 023c 01       		.uleb128 0x1
 734 023d 9C       		.byte	0x9c
 735 023e 51020000 		.4byte	0x251
 736 0242 12       		.uleb128 0x12
 737 0243 87010000 		.4byte	.LASF29
 738 0247 01       		.byte	0x1
 739 0248 E302     		.2byte	0x2e3
 740 024a 6B000000 		.4byte	0x6b
 741 024e 01       		.uleb128 0x1
 742 024f 50       		.byte	0x50
 743 0250 00       		.byte	0
 744 0251 08       		.uleb128 0x8
 745 0252 5C010000 		.4byte	.LASF30
 746 0256 01       		.byte	0x1
 747 0257 FD02     		.2byte	0x2fd
 748 0259 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 30


 749 025d 0C000000 		.4byte	.LFE10-.LFB10
 750 0261 01       		.uleb128 0x1
 751 0262 9C       		.byte	0x9c
 752 0263 76020000 		.4byte	0x276
 753 0267 09       		.uleb128 0x9
 754 0268 CA000000 		.4byte	.LASF31
 755 026c 01       		.byte	0x1
 756 026d FD02     		.2byte	0x2fd
 757 026f 6B000000 		.4byte	0x6b
 758 0273 01       		.uleb128 0x1
 759 0274 50       		.byte	0x50
 760 0275 00       		.byte	0
 761 0276 0A       		.uleb128 0xa
 762 0277 DE020000 		.4byte	.LASF33
 763 027b 01       		.byte	0x1
 764 027c 1603     		.2byte	0x316
 765 027e 76000000 		.4byte	0x76
 766 0282 00000000 		.4byte	.LFB11
 767 0286 0C000000 		.4byte	.LFE11-.LFB11
 768 028a 01       		.uleb128 0x1
 769 028b 9C       		.byte	0x9c
 770 028c 0A       		.uleb128 0xa
 771 028d 97020000 		.4byte	.LASF34
 772 0291 01       		.byte	0x1
 773 0292 4A03     		.2byte	0x34a
 774 0294 76000000 		.4byte	0x76
 775 0298 00000000 		.4byte	.LFB12
 776 029c 0C000000 		.4byte	.LFE12-.LFB12
 777 02a0 01       		.uleb128 0x1
 778 02a1 9C       		.byte	0x9c
 779 02a2 0A       		.uleb128 0xa
 780 02a3 AC020000 		.4byte	.LASF35
 781 02a7 01       		.byte	0x1
 782 02a8 5E03     		.2byte	0x35e
 783 02aa 76000000 		.4byte	0x76
 784 02ae 00000000 		.4byte	.LFB13
 785 02b2 0C000000 		.4byte	.LFE13-.LFB13
 786 02b6 01       		.uleb128 0x1
 787 02b7 9C       		.byte	0x9c
 788 02b8 0A       		.uleb128 0xa
 789 02b9 49010000 		.4byte	.LASF36
 790 02bd 01       		.byte	0x1
 791 02be 7403     		.2byte	0x374
 792 02c0 76000000 		.4byte	0x76
 793 02c4 00000000 		.4byte	.LFB14
 794 02c8 0C000000 		.4byte	.LFE14-.LFB14
 795 02cc 01       		.uleb128 0x1
 796 02cd 9C       		.byte	0x9c
 797 02ce 13       		.uleb128 0x13
 798 02cf 06000000 		.4byte	.LASF41
 799 02d3 01       		.byte	0x1
 800 02d4 20       		.byte	0x20
 801 02d5 6B000000 		.4byte	0x6b
 802 02d9 05       		.uleb128 0x5
 803 02da 03       		.byte	0x3
 804 02db 00000000 		.4byte	Servo_B_initVar
 805 02df 00       		.byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 31


 806              		.section	.debug_abbrev,"",%progbits
 807              	.Ldebug_abbrev0:
 808 0000 01       		.uleb128 0x1
 809 0001 11       		.uleb128 0x11
 810 0002 01       		.byte	0x1
 811 0003 25       		.uleb128 0x25
 812 0004 0E       		.uleb128 0xe
 813 0005 13       		.uleb128 0x13
 814 0006 0B       		.uleb128 0xb
 815 0007 03       		.uleb128 0x3
 816 0008 0E       		.uleb128 0xe
 817 0009 1B       		.uleb128 0x1b
 818 000a 0E       		.uleb128 0xe
 819 000b 55       		.uleb128 0x55
 820 000c 17       		.uleb128 0x17
 821 000d 11       		.uleb128 0x11
 822 000e 01       		.uleb128 0x1
 823 000f 10       		.uleb128 0x10
 824 0010 17       		.uleb128 0x17
 825 0011 00       		.byte	0
 826 0012 00       		.byte	0
 827 0013 02       		.uleb128 0x2
 828 0014 24       		.uleb128 0x24
 829 0015 00       		.byte	0
 830 0016 0B       		.uleb128 0xb
 831 0017 0B       		.uleb128 0xb
 832 0018 3E       		.uleb128 0x3e
 833 0019 0B       		.uleb128 0xb
 834 001a 03       		.uleb128 0x3
 835 001b 0E       		.uleb128 0xe
 836 001c 00       		.byte	0
 837 001d 00       		.byte	0
 838 001e 03       		.uleb128 0x3
 839 001f 24       		.uleb128 0x24
 840 0020 00       		.byte	0
 841 0021 0B       		.uleb128 0xb
 842 0022 0B       		.uleb128 0xb
 843 0023 3E       		.uleb128 0x3e
 844 0024 0B       		.uleb128 0xb
 845 0025 03       		.uleb128 0x3
 846 0026 08       		.uleb128 0x8
 847 0027 00       		.byte	0
 848 0028 00       		.byte	0
 849 0029 04       		.uleb128 0x4
 850 002a 16       		.uleb128 0x16
 851 002b 00       		.byte	0
 852 002c 03       		.uleb128 0x3
 853 002d 0E       		.uleb128 0xe
 854 002e 3A       		.uleb128 0x3a
 855 002f 0B       		.uleb128 0xb
 856 0030 3B       		.uleb128 0x3b
 857 0031 0B       		.uleb128 0xb
 858 0032 49       		.uleb128 0x49
 859 0033 13       		.uleb128 0x13
 860 0034 00       		.byte	0
 861 0035 00       		.byte	0
 862 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 32


 863 0037 16       		.uleb128 0x16
 864 0038 00       		.byte	0
 865 0039 03       		.uleb128 0x3
 866 003a 0E       		.uleb128 0xe
 867 003b 3A       		.uleb128 0x3a
 868 003c 0B       		.uleb128 0xb
 869 003d 3B       		.uleb128 0x3b
 870 003e 05       		.uleb128 0x5
 871 003f 49       		.uleb128 0x49
 872 0040 13       		.uleb128 0x13
 873 0041 00       		.byte	0
 874 0042 00       		.byte	0
 875 0043 06       		.uleb128 0x6
 876 0044 35       		.uleb128 0x35
 877 0045 00       		.byte	0
 878 0046 49       		.uleb128 0x49
 879 0047 13       		.uleb128 0x13
 880 0048 00       		.byte	0
 881 0049 00       		.byte	0
 882 004a 07       		.uleb128 0x7
 883 004b 2E       		.uleb128 0x2e
 884 004c 00       		.byte	0
 885 004d 3F       		.uleb128 0x3f
 886 004e 19       		.uleb128 0x19
 887 004f 03       		.uleb128 0x3
 888 0050 0E       		.uleb128 0xe
 889 0051 3A       		.uleb128 0x3a
 890 0052 0B       		.uleb128 0xb
 891 0053 3B       		.uleb128 0x3b
 892 0054 0B       		.uleb128 0xb
 893 0055 27       		.uleb128 0x27
 894 0056 19       		.uleb128 0x19
 895 0057 11       		.uleb128 0x11
 896 0058 01       		.uleb128 0x1
 897 0059 12       		.uleb128 0x12
 898 005a 06       		.uleb128 0x6
 899 005b 40       		.uleb128 0x40
 900 005c 18       		.uleb128 0x18
 901 005d 9742     		.uleb128 0x2117
 902 005f 19       		.uleb128 0x19
 903 0060 00       		.byte	0
 904 0061 00       		.byte	0
 905 0062 08       		.uleb128 0x8
 906 0063 2E       		.uleb128 0x2e
 907 0064 01       		.byte	0x1
 908 0065 3F       		.uleb128 0x3f
 909 0066 19       		.uleb128 0x19
 910 0067 03       		.uleb128 0x3
 911 0068 0E       		.uleb128 0xe
 912 0069 3A       		.uleb128 0x3a
 913 006a 0B       		.uleb128 0xb
 914 006b 3B       		.uleb128 0x3b
 915 006c 05       		.uleb128 0x5
 916 006d 27       		.uleb128 0x27
 917 006e 19       		.uleb128 0x19
 918 006f 11       		.uleb128 0x11
 919 0070 01       		.uleb128 0x1
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 33


 920 0071 12       		.uleb128 0x12
 921 0072 06       		.uleb128 0x6
 922 0073 40       		.uleb128 0x40
 923 0074 18       		.uleb128 0x18
 924 0075 9742     		.uleb128 0x2117
 925 0077 19       		.uleb128 0x19
 926 0078 01       		.uleb128 0x1
 927 0079 13       		.uleb128 0x13
 928 007a 00       		.byte	0
 929 007b 00       		.byte	0
 930 007c 09       		.uleb128 0x9
 931 007d 05       		.uleb128 0x5
 932 007e 00       		.byte	0
 933 007f 03       		.uleb128 0x3
 934 0080 0E       		.uleb128 0xe
 935 0081 3A       		.uleb128 0x3a
 936 0082 0B       		.uleb128 0xb
 937 0083 3B       		.uleb128 0x3b
 938 0084 05       		.uleb128 0x5
 939 0085 49       		.uleb128 0x49
 940 0086 13       		.uleb128 0x13
 941 0087 02       		.uleb128 0x2
 942 0088 18       		.uleb128 0x18
 943 0089 00       		.byte	0
 944 008a 00       		.byte	0
 945 008b 0A       		.uleb128 0xa
 946 008c 2E       		.uleb128 0x2e
 947 008d 00       		.byte	0
 948 008e 3F       		.uleb128 0x3f
 949 008f 19       		.uleb128 0x19
 950 0090 03       		.uleb128 0x3
 951 0091 0E       		.uleb128 0xe
 952 0092 3A       		.uleb128 0x3a
 953 0093 0B       		.uleb128 0xb
 954 0094 3B       		.uleb128 0x3b
 955 0095 05       		.uleb128 0x5
 956 0096 27       		.uleb128 0x27
 957 0097 19       		.uleb128 0x19
 958 0098 49       		.uleb128 0x49
 959 0099 13       		.uleb128 0x13
 960 009a 11       		.uleb128 0x11
 961 009b 01       		.uleb128 0x1
 962 009c 12       		.uleb128 0x12
 963 009d 06       		.uleb128 0x6
 964 009e 40       		.uleb128 0x40
 965 009f 18       		.uleb128 0x18
 966 00a0 9742     		.uleb128 0x2117
 967 00a2 19       		.uleb128 0x19
 968 00a3 00       		.byte	0
 969 00a4 00       		.byte	0
 970 00a5 0B       		.uleb128 0xb
 971 00a6 2E       		.uleb128 0x2e
 972 00a7 01       		.byte	0x1
 973 00a8 3F       		.uleb128 0x3f
 974 00a9 19       		.uleb128 0x19
 975 00aa 03       		.uleb128 0x3
 976 00ab 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 34


 977 00ac 3A       		.uleb128 0x3a
 978 00ad 0B       		.uleb128 0xb
 979 00ae 3B       		.uleb128 0x3b
 980 00af 0B       		.uleb128 0xb
 981 00b0 27       		.uleb128 0x27
 982 00b1 19       		.uleb128 0x19
 983 00b2 11       		.uleb128 0x11
 984 00b3 01       		.uleb128 0x1
 985 00b4 12       		.uleb128 0x12
 986 00b5 06       		.uleb128 0x6
 987 00b6 40       		.uleb128 0x40
 988 00b7 18       		.uleb128 0x18
 989 00b8 9742     		.uleb128 0x2117
 990 00ba 19       		.uleb128 0x19
 991 00bb 01       		.uleb128 0x1
 992 00bc 13       		.uleb128 0x13
 993 00bd 00       		.byte	0
 994 00be 00       		.byte	0
 995 00bf 0C       		.uleb128 0xc
 996 00c0 34       		.uleb128 0x34
 997 00c1 00       		.byte	0
 998 00c2 03       		.uleb128 0x3
 999 00c3 0E       		.uleb128 0xe
 1000 00c4 3A       		.uleb128 0x3a
 1001 00c5 0B       		.uleb128 0xb
 1002 00c6 3B       		.uleb128 0x3b
 1003 00c7 0B       		.uleb128 0xb
 1004 00c8 49       		.uleb128 0x49
 1005 00c9 13       		.uleb128 0x13
 1006 00ca 02       		.uleb128 0x2
 1007 00cb 17       		.uleb128 0x17
 1008 00cc 00       		.byte	0
 1009 00cd 00       		.byte	0
 1010 00ce 0D       		.uleb128 0xd
 1011 00cf 898201   		.uleb128 0x4109
 1012 00d2 01       		.byte	0x1
 1013 00d3 11       		.uleb128 0x11
 1014 00d4 01       		.uleb128 0x1
 1015 00d5 31       		.uleb128 0x31
 1016 00d6 13       		.uleb128 0x13
 1017 00d7 01       		.uleb128 0x1
 1018 00d8 13       		.uleb128 0x13
 1019 00d9 00       		.byte	0
 1020 00da 00       		.byte	0
 1021 00db 0E       		.uleb128 0xe
 1022 00dc 8A8201   		.uleb128 0x410a
 1023 00df 00       		.byte	0
 1024 00e0 02       		.uleb128 0x2
 1025 00e1 18       		.uleb128 0x18
 1026 00e2 9142     		.uleb128 0x2111
 1027 00e4 18       		.uleb128 0x18
 1028 00e5 00       		.byte	0
 1029 00e6 00       		.byte	0
 1030 00e7 0F       		.uleb128 0xf
 1031 00e8 898201   		.uleb128 0x4109
 1032 00eb 01       		.byte	0x1
 1033 00ec 11       		.uleb128 0x11
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 35


 1034 00ed 01       		.uleb128 0x1
 1035 00ee 31       		.uleb128 0x31
 1036 00ef 13       		.uleb128 0x13
 1037 00f0 00       		.byte	0
 1038 00f1 00       		.byte	0
 1039 00f2 10       		.uleb128 0x10
 1040 00f3 898201   		.uleb128 0x4109
 1041 00f6 00       		.byte	0
 1042 00f7 11       		.uleb128 0x11
 1043 00f8 01       		.uleb128 0x1
 1044 00f9 31       		.uleb128 0x31
 1045 00fa 13       		.uleb128 0x13
 1046 00fb 00       		.byte	0
 1047 00fc 00       		.byte	0
 1048 00fd 11       		.uleb128 0x11
 1049 00fe 2E       		.uleb128 0x2e
 1050 00ff 01       		.byte	0x1
 1051 0100 3F       		.uleb128 0x3f
 1052 0101 19       		.uleb128 0x19
 1053 0102 03       		.uleb128 0x3
 1054 0103 0E       		.uleb128 0xe
 1055 0104 3A       		.uleb128 0x3a
 1056 0105 0B       		.uleb128 0xb
 1057 0106 3B       		.uleb128 0x3b
 1058 0107 05       		.uleb128 0x5
 1059 0108 27       		.uleb128 0x27
 1060 0109 19       		.uleb128 0x19
 1061 010a 49       		.uleb128 0x49
 1062 010b 13       		.uleb128 0x13
 1063 010c 11       		.uleb128 0x11
 1064 010d 01       		.uleb128 0x1
 1065 010e 12       		.uleb128 0x12
 1066 010f 06       		.uleb128 0x6
 1067 0110 40       		.uleb128 0x40
 1068 0111 18       		.uleb128 0x18
 1069 0112 9742     		.uleb128 0x2117
 1070 0114 19       		.uleb128 0x19
 1071 0115 01       		.uleb128 0x1
 1072 0116 13       		.uleb128 0x13
 1073 0117 00       		.byte	0
 1074 0118 00       		.byte	0
 1075 0119 12       		.uleb128 0x12
 1076 011a 34       		.uleb128 0x34
 1077 011b 00       		.byte	0
 1078 011c 03       		.uleb128 0x3
 1079 011d 0E       		.uleb128 0xe
 1080 011e 3A       		.uleb128 0x3a
 1081 011f 0B       		.uleb128 0xb
 1082 0120 3B       		.uleb128 0x3b
 1083 0121 05       		.uleb128 0x5
 1084 0122 49       		.uleb128 0x49
 1085 0123 13       		.uleb128 0x13
 1086 0124 02       		.uleb128 0x2
 1087 0125 18       		.uleb128 0x18
 1088 0126 00       		.byte	0
 1089 0127 00       		.byte	0
 1090 0128 13       		.uleb128 0x13
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 36


 1091 0129 34       		.uleb128 0x34
 1092 012a 00       		.byte	0
 1093 012b 03       		.uleb128 0x3
 1094 012c 0E       		.uleb128 0xe
 1095 012d 3A       		.uleb128 0x3a
 1096 012e 0B       		.uleb128 0xb
 1097 012f 3B       		.uleb128 0x3b
 1098 0130 0B       		.uleb128 0xb
 1099 0131 49       		.uleb128 0x49
 1100 0132 13       		.uleb128 0x13
 1101 0133 3F       		.uleb128 0x3f
 1102 0134 19       		.uleb128 0x19
 1103 0135 02       		.uleb128 0x2
 1104 0136 18       		.uleb128 0x18
 1105 0137 00       		.byte	0
 1106 0138 00       		.byte	0
 1107 0139 00       		.byte	0
 1108              		.section	.debug_loc,"",%progbits
 1109              	.Ldebug_loc0:
 1110              	.LLST0:
 1111 0000 0A000000 		.4byte	.LVL4
 1112 0004 0E000000 		.4byte	.LVL5
 1113 0008 0100     		.2byte	0x1
 1114 000a 52       		.byte	0x52
 1115 000b 00000000 		.4byte	0
 1116 000f 00000000 		.4byte	0
 1117              		.section	.debug_aranges,"",%progbits
 1118 0000 8C000000 		.4byte	0x8c
 1119 0004 0200     		.2byte	0x2
 1120 0006 00000000 		.4byte	.Ldebug_info0
 1121 000a 04       		.byte	0x4
 1122 000b 00       		.byte	0
 1123 000c 0000     		.2byte	0
 1124 000e 0000     		.2byte	0
 1125 0010 00000000 		.4byte	.LFB2
 1126 0014 10000000 		.4byte	.LFE2-.LFB2
 1127 0018 00000000 		.4byte	.LFB3
 1128 001c 10000000 		.4byte	.LFE3-.LFB3
 1129 0020 00000000 		.4byte	.LFB4
 1130 0024 0C000000 		.4byte	.LFE4-.LFB4
 1131 0028 00000000 		.4byte	.LFB5
 1132 002c 14000000 		.4byte	.LFE5-.LFB5
 1133 0030 00000000 		.4byte	.LFB6
 1134 0034 0C000000 		.4byte	.LFE6-.LFB6
 1135 0038 00000000 		.4byte	.LFB7
 1136 003c 0C000000 		.4byte	.LFE7-.LFB7
 1137 0040 00000000 		.4byte	.LFB8
 1138 0044 0C000000 		.4byte	.LFE8-.LFB8
 1139 0048 00000000 		.4byte	.LFB1
 1140 004c 4C000000 		.4byte	.LFE1-.LFB1
 1141 0050 00000000 		.4byte	.LFB0
 1142 0054 1C000000 		.4byte	.LFE0-.LFB0
 1143 0058 00000000 		.4byte	.LFB9
 1144 005c 0C000000 		.4byte	.LFE9-.LFB9
 1145 0060 00000000 		.4byte	.LFB10
 1146 0064 0C000000 		.4byte	.LFE10-.LFB10
 1147 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 37


 1148 006c 0C000000 		.4byte	.LFE11-.LFB11
 1149 0070 00000000 		.4byte	.LFB12
 1150 0074 0C000000 		.4byte	.LFE12-.LFB12
 1151 0078 00000000 		.4byte	.LFB13
 1152 007c 0C000000 		.4byte	.LFE13-.LFB13
 1153 0080 00000000 		.4byte	.LFB14
 1154 0084 0C000000 		.4byte	.LFE14-.LFB14
 1155 0088 00000000 		.4byte	0
 1156 008c 00000000 		.4byte	0
 1157              		.section	.debug_ranges,"",%progbits
 1158              	.Ldebug_ranges0:
 1159 0000 00000000 		.4byte	.LFB2
 1160 0004 10000000 		.4byte	.LFE2
 1161 0008 00000000 		.4byte	.LFB3
 1162 000c 10000000 		.4byte	.LFE3
 1163 0010 00000000 		.4byte	.LFB4
 1164 0014 0C000000 		.4byte	.LFE4
 1165 0018 00000000 		.4byte	.LFB5
 1166 001c 14000000 		.4byte	.LFE5
 1167 0020 00000000 		.4byte	.LFB6
 1168 0024 0C000000 		.4byte	.LFE6
 1169 0028 00000000 		.4byte	.LFB7
 1170 002c 0C000000 		.4byte	.LFE7
 1171 0030 00000000 		.4byte	.LFB8
 1172 0034 0C000000 		.4byte	.LFE8
 1173 0038 00000000 		.4byte	.LFB1
 1174 003c 4C000000 		.4byte	.LFE1
 1175 0040 00000000 		.4byte	.LFB0
 1176 0044 1C000000 		.4byte	.LFE0
 1177 0048 00000000 		.4byte	.LFB9
 1178 004c 0C000000 		.4byte	.LFE9
 1179 0050 00000000 		.4byte	.LFB10
 1180 0054 0C000000 		.4byte	.LFE10
 1181 0058 00000000 		.4byte	.LFB11
 1182 005c 0C000000 		.4byte	.LFE11
 1183 0060 00000000 		.4byte	.LFB12
 1184 0064 0C000000 		.4byte	.LFE12
 1185 0068 00000000 		.4byte	.LFB13
 1186 006c 0C000000 		.4byte	.LFE13
 1187 0070 00000000 		.4byte	.LFB14
 1188 0074 0C000000 		.4byte	.LFE14
 1189 0078 00000000 		.4byte	0
 1190 007c 00000000 		.4byte	0
 1191              		.section	.debug_line,"",%progbits
 1192              	.Ldebug_line0:
 1193 0000 61010000 		.section	.debug_str,"MS",%progbits,1
 1193      02004600 
 1193      00000201 
 1193      FB0E0D00 
 1193      01010101 
 1194              	.LASF15:
 1195 0000 72656731 		.ascii	"reg16\000"
 1195      3600
 1196              	.LASF41:
 1197 0006 53657276 		.ascii	"Servo_B_initVar\000"
 1197      6F5F425F 
 1197      696E6974 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 38


 1197      56617200 
 1198              	.LASF26:
 1199 0016 53657276 		.ascii	"Servo_B_Init\000"
 1199      6F5F425F 
 1199      496E6974 
 1199      00
 1200              	.LASF22:
 1201 0023 70657269 		.ascii	"period\000"
 1201      6F6400
 1202              	.LASF40:
 1203 002a 53657276 		.ascii	"Servo_B_ReadControlRegister\000"
 1203      6F5F425F 
 1203      52656164 
 1203      436F6E74 
 1203      726F6C52 
 1204              	.LASF3:
 1205 0046 73686F72 		.ascii	"short unsigned int\000"
 1205      7420756E 
 1205      7369676E 
 1205      65642069 
 1205      6E7400
 1206              	.LASF8:
 1207 0059 756E7369 		.ascii	"unsigned int\000"
 1207      676E6564 
 1207      20696E74 
 1207      00
 1208              	.LASF32:
 1209 0066 53657276 		.ascii	"Servo_B_ReadCounter\000"
 1209      6F5F425F 
 1209      52656164 
 1209      436F756E 
 1209      74657200 
 1210              	.LASF11:
 1211 007a 666C6F61 		.ascii	"float\000"
 1211      7400
 1212              	.LASF21:
 1213 0080 636F756E 		.ascii	"counter\000"
 1213      74657200 
 1214              	.LASF7:
 1215 0088 6C6F6E67 		.ascii	"long long unsigned int\000"
 1215      206C6F6E 
 1215      6720756E 
 1215      7369676E 
 1215      65642069 
 1216              	.LASF1:
 1217 009f 756E7369 		.ascii	"unsigned char\000"
 1217      676E6564 
 1217      20636861 
 1217      7200
 1218              	.LASF14:
 1219 00ad 72656738 		.ascii	"reg8\000"
 1219      00
 1220              	.LASF5:
 1221 00b2 6C6F6E67 		.ascii	"long unsigned int\000"
 1221      20756E73 
 1221      69676E65 
 1221      6420696E 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 39


 1221      7400
 1222              	.LASF9:
 1223 00c4 75696E74 		.ascii	"uint8\000"
 1223      3800
 1224              	.LASF31:
 1225 00ca 636F6E74 		.ascii	"control\000"
 1225      726F6C00 
 1226              	.LASF18:
 1227 00d2 53657276 		.ascii	"Servo_B_Stop\000"
 1227      6F5F425F 
 1227      53746F70 
 1227      00
 1228              	.LASF17:
 1229 00df 53657276 		.ascii	"Servo_B_Enable\000"
 1229      6F5F425F 
 1229      456E6162 
 1229      6C6500
 1230              	.LASF12:
 1231 00ee 646F7562 		.ascii	"double\000"
 1231      6C6500
 1232              	.LASF20:
 1233 00f5 53657276 		.ascii	"Servo_B_WritePeriod\000"
 1233      6F5F425F 
 1233      57726974 
 1233      65506572 
 1233      696F6400 
 1234              	.LASF10:
 1235 0109 75696E74 		.ascii	"uint16\000"
 1235      313600
 1236              	.LASF25:
 1237 0110 53657276 		.ascii	"Servo_B_WriteCompare2\000"
 1237      6F5F425F 
 1237      57726974 
 1237      65436F6D 
 1237      70617265 
 1238              	.LASF38:
 1239 0126 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Servo_B.c\000"
 1239      6E657261 
 1239      7465645F 
 1239      536F7572 
 1239      63655C50 
 1240              	.LASF36:
 1241 0149 53657276 		.ascii	"Servo_B_ReadPeriod\000"
 1241      6F5F425F 
 1241      52656164 
 1241      50657269 
 1241      6F6400
 1242              	.LASF30:
 1243 015c 53657276 		.ascii	"Servo_B_WriteControlRegister\000"
 1243      6F5F425F 
 1243      57726974 
 1243      65436F6E 
 1243      74726F6C 
 1244              	.LASF27:
 1245 0179 53657276 		.ascii	"Servo_B_Start\000"
 1245      6F5F425F 
 1245      53746172 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 40


 1245      7400
 1246              	.LASF29:
 1247 0187 72657375 		.ascii	"result\000"
 1247      6C7400
 1248              	.LASF39:
 1249 018e 433A5C55 		.ascii	"C:\\Users\\Jorden\\Documents\\PSoC Creator\\Test\\T"
 1249      73657273 
 1249      5C4A6F72 
 1249      64656E5C 
 1249      446F6375 
 1250 01bb 6573742E 		.ascii	"est.cydsn\000"
 1250      63796473 
 1250      6E00
 1251              	.LASF28:
 1252 01c5 6374726C 		.ascii	"ctrl\000"
 1252      00
 1253              	.LASF37:
 1254 01ca 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1254      4320342E 
 1254      382E3420 
 1254      32303134 
 1254      30353236 
 1255 01fd 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1255      20726576 
 1255      6973696F 
 1255      6E203231 
 1255      31333538 
 1256 0230 67202D66 		.ascii	"g -ffunction-sections\000"
 1256      66756E63 
 1256      74696F6E 
 1256      2D736563 
 1256      74696F6E 
 1257              	.LASF16:
 1258 0246 73697A65 		.ascii	"sizetype\000"
 1258      74797065 
 1258      00
 1259              	.LASF6:
 1260 024f 6C6F6E67 		.ascii	"long long int\000"
 1260      206C6F6E 
 1260      6720696E 
 1260      7400
 1261              	.LASF23:
 1262 025d 53657276 		.ascii	"Servo_B_WriteCompare1\000"
 1262      6F5F425F 
 1262      57726974 
 1262      65436F6D 
 1262      70617265 
 1263              	.LASF13:
 1264 0273 63686172 		.ascii	"char\000"
 1264      00
 1265              	.LASF19:
 1266 0278 53657276 		.ascii	"Servo_B_WriteCounter\000"
 1266      6F5F425F 
 1266      57726974 
 1266      65436F75 
 1266      6E746572 
 1267              	.LASF2:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\ccjmkfgd.s 			page 41


 1268 028d 73686F72 		.ascii	"short int\000"
 1268      7420696E 
 1268      7400
 1269              	.LASF34:
 1270 0297 53657276 		.ascii	"Servo_B_ReadCompare1\000"
 1270      6F5F425F 
 1270      52656164 
 1270      436F6D70 
 1270      61726531 
 1271              	.LASF35:
 1272 02ac 53657276 		.ascii	"Servo_B_ReadCompare2\000"
 1272      6F5F425F 
 1272      52656164 
 1272      436F6D70 
 1272      61726532 
 1273              	.LASF4:
 1274 02c1 6C6F6E67 		.ascii	"long int\000"
 1274      20696E74 
 1274      00
 1275              	.LASF0:
 1276 02ca 7369676E 		.ascii	"signed char\000"
 1276      65642063 
 1276      68617200 
 1277              	.LASF24:
 1278 02d6 636F6D70 		.ascii	"compare\000"
 1278      61726500 
 1279              	.LASF33:
 1280 02de 53657276 		.ascii	"Servo_B_ReadCapture\000"
 1280      6F5F425F 
 1280      52656164 
 1280      43617074 
 1280      75726500 
 1281              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
