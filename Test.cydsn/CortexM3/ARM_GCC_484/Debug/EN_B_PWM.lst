ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"EN_B_PWM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.EN_B_PWM_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	EN_B_PWM_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	EN_B_PWM_Enable, %function
  24              	EN_B_PWM_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\EN_B_PWM.c"
   1:.\Generated_Source\PSoC5/EN_B_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/EN_B_PWM.c **** * File Name: EN_B_PWM.c
   3:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
   5:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Description:
   6:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  15:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Note:
  16:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  17:.\Generated_Source\PSoC5/EN_B_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/EN_B_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/EN_B_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/EN_B_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/EN_B_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  24:.\Generated_Source\PSoC5/EN_B_PWM.c **** #include "EN_B_PWM.h"
  25:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  26:.\Generated_Source\PSoC5/EN_B_PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/EN_B_PWM.c **** #ifdef EN_B_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/EN_B_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* EN_B_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 2


  32:.\Generated_Source\PSoC5/EN_B_PWM.c **** uint8 EN_B_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  34:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  35:.\Generated_Source\PSoC5/EN_B_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Function Name: EN_B_PWM_Start
  37:.\Generated_Source\PSoC5/EN_B_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  39:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  44:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
  46:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  47:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Return:
  48:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
  49:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  50:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  EN_B_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/EN_B_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  54:.\Generated_Source\PSoC5/EN_B_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/EN_B_PWM.c **** void EN_B_PWM_Start(void) 
  56:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
  57:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/EN_B_PWM.c ****     if(EN_B_PWM_initVar == 0u)
  59:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
  60:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_Init();
  61:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_initVar = 1u;
  62:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
  63:.\Generated_Source\PSoC5/EN_B_PWM.c ****     EN_B_PWM_Enable();
  64:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  65:.\Generated_Source\PSoC5/EN_B_PWM.c **** }
  66:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  67:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  68:.\Generated_Source\PSoC5/EN_B_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Function Name: EN_B_PWM_Init
  70:.\Generated_Source\PSoC5/EN_B_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  72:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  EN_B_PWM_Start().
  76:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  77:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
  79:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  80:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Return:
  81:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
  82:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
  83:.\Generated_Source\PSoC5/EN_B_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/EN_B_PWM.c **** void EN_B_PWM_Init(void) 
  85:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
  86:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UsingFixedFunction || EN_B_PWM_UseControl)
  87:.\Generated_Source\PSoC5/EN_B_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UsingFixedFunction || EN_B_PWM_UseControl) */
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 3


  89:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  90:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if(!EN_B_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(EN_B_PWM_UseStatus)
  92:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/EN_B_PWM.c ****             uint8 EN_B_PWM_interruptState;
  94:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UseStatus) */
  95:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (!EN_B_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
  97:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_CONTROL |= EN_B_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if (EN_B_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_CONTROL |= EN_B_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 104:.\Generated_Source\PSoC5/EN_B_PWM.c ****         ctrl = EN_B_PWM_CONTROL3 & ((uint8 )(~EN_B_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_CONTROL3 = ctrl | EN_B_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 107:.\Generated_Source\PSoC5/EN_B_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_RT1 &= ((uint8)(~EN_B_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_RT1 |= EN_B_PWM_SYNC;
 110:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 111:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_RT1 &= ((uint8)(~EN_B_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_RT1 |= EN_B_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 115:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #elif (EN_B_PWM_UseControl)
 116:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/EN_B_PWM.c ****         ctrl = EN_B_PWM_CONTROL & ((uint8)(~EN_B_PWM_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 ((uint8)(~EN_B_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_CONTROL = ctrl | EN_B_PWM_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                    EN_B_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 123:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (!EN_B_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if (EN_B_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_AUX_CONTROLDP0 |= (EN_B_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else /* (EN_B_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_AUX_CONTROLDP0 |= (EN_B_PWM_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_AUX_CONTROLDP1 |= (EN_B_PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 133:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_WriteCounter(EN_B_PWM_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (!EN_B_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 136:.\Generated_Source\PSoC5/EN_B_PWM.c ****     EN_B_PWM_WritePeriod(EN_B_PWM_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 138:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if (EN_B_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_WriteCompare(EN_B_PWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 141:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_WriteCompare1(EN_B_PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_WriteCompare2(EN_B_PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 145:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if (EN_B_PWM_KillModeMinTime)
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 4


 146:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_WriteKillTime(EN_B_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 149:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if (EN_B_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_WriteDeadTime(EN_B_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 153:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UseStatus || EN_B_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_SetInterruptMode(EN_B_PWM_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UseStatus || EN_B_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 157:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_GLOBAL_ENABLE |= EN_B_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_CONTROL2 |= EN_B_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #else
 163:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(EN_B_PWM_UseStatus)
 164:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 165:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_STATUS_AUX_CTRL |= EN_B_PWM_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 171:.\Generated_Source\PSoC5/EN_B_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CyExitCriticalSection(EN_B_PWM_interruptState);
 173:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 174:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Clear the FIFO to enable the EN_B_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/EN_B_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_ClearFIFO();
 177:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UseStatus) */
 178:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/EN_B_PWM.c **** }
 180:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 181:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 182:.\Generated_Source\PSoC5/EN_B_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Function Name: EN_B_PWM_Enable
 184:.\Generated_Source\PSoC5/EN_B_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 186:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 189:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
 191:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 192:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Return:
 193:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
 194:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 195:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 198:.\Generated_Source\PSoC5/EN_B_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/EN_B_PWM.c **** void EN_B_PWM_Enable(void) 
 200:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE2:
  35              		.size	EN_B_PWM_Enable, .-EN_B_PWM_Enable
  36 0002 00BF     		.section	.text.EN_B_PWM_Stop,"ax",%progbits
  37              		.align	2
  38              		.global	EN_B_PWM_Stop
  39              		.thumb
  40              		.thumb_func
  41              		.type	EN_B_PWM_Stop, %function
  42              	EN_B_PWM_Stop:
  43              	.LFB3:
 201:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_GLOBAL_ENABLE |= EN_B_PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_GLOBAL_STBY_ENABLE |= EN_B_PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 207:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UseControl || EN_B_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_CONTROL |= EN_B_PWM_CTRL_ENABLE;
 210:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UseControl || EN_B_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/EN_B_PWM.c **** }
 212:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 213:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 214:.\Generated_Source\PSoC5/EN_B_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Function Name: EN_B_PWM_Stop
 216:.\Generated_Source\PSoC5/EN_B_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 218:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 222:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
 224:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 225:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Return:
 226:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
 227:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 228:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 232:.\Generated_Source\PSoC5/EN_B_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/EN_B_PWM.c **** void EN_B_PWM_Stop(void) 
 234:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
  44              		.loc 1 234 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE3:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 6


  52              		.size	EN_B_PWM_Stop, .-EN_B_PWM_Stop
  53 0002 00BF     		.section	.text.EN_B_PWM_WriteCounter,"ax",%progbits
  54              		.align	2
  55              		.global	EN_B_PWM_WriteCounter
  56              		.thumb
  57              		.thumb_func
  58              		.type	EN_B_PWM_WriteCounter, %function
  59              	EN_B_PWM_WriteCounter:
  60              	.LFB4:
 235:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UseControl || EN_B_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_CONTROL &= ((uint8)(~EN_B_PWM_CTRL_ENABLE));
 237:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UseControl || EN_B_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 239:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_GLOBAL_ENABLE &= ((uint8)(~EN_B_PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~EN_B_PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/EN_B_PWM.c **** }
 245:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 246:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (EN_B_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 249:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 250:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Function Name: EN_B_PWM_SetCompareMode
 252:.\Generated_Source\PSoC5/EN_B_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 254:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 258:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 262:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Return:
 263:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  None
 264:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 265:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/EN_B_PWM.c ****         void EN_B_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/EN_B_PWM.c ****         {
 268:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #if(EN_B_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 270:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #if(0 != EN_B_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/EN_B_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << EN_B_PWM_CTRL_CMPMODE1
 272:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #else
 273:.\Generated_Source\PSoC5/EN_B_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #endif /* (0 != EN_B_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 276:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_CONTROL3 &= ((uint8)(~EN_B_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 279:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #elif (EN_B_PWM_UseControl)
 280:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 281:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #if(0 != EN_B_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/EN_B_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << EN_B_PWM_CTRL_CMPMODE
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 7


 283:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                                 EN_B_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #else
 285:.\Generated_Source\PSoC5/EN_B_PWM.c ****                     uint8 comparemode1masked = comparemode & EN_B_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #endif /* (0 != EN_B_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 288:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #if(0 != EN_B_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/EN_B_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << EN_B_PWM_CTRL_CMPMODE
 290:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                                EN_B_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #else
 292:.\Generated_Source\PSoC5/EN_B_PWM.c ****                     uint8 comparemode2masked = comparemode & EN_B_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 #endif /* (0 != EN_B_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 295:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_CONTROL &= ((uint8)(~(EN_B_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                             EN_B_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 300:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #else
 301:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #endif /* (EN_B_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/EN_B_PWM.c ****         }
 304:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* EN_B_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 306:.\Generated_Source\PSoC5/EN_B_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 308:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 310:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 311:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Function Name: EN_B_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC5/EN_B_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 315:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 318:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 322:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  None
 324:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 325:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/EN_B_PWM.c ****         void EN_B_PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/EN_B_PWM.c ****         {
 328:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #if(0 != EN_B_PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << EN_B_PWM_CTRL_CMPMODE1_SHI
 330:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                            EN_B_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #else
 332:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 uint8 comparemodemasked = comparemode & EN_B_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #endif /* (0 != EN_B_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 335:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #if (EN_B_PWM_UseControl)
 336:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_CONTROL &= ((uint8)(~EN_B_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #endif /* (EN_B_PWM_UseControl) */
 339:.\Generated_Source\PSoC5/EN_B_PWM.c ****         }
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 8


 340:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* EN_B_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 342:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (EN_B_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 344:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 345:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 349:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 352:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 356:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 358:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 359:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 362:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 363:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(0 != EN_B_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/EN_B_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << EN_B_PWM_CTRL_CMPMODE2_SHIFT))
 365:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                                  EN_B_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 367:.\Generated_Source\PSoC5/EN_B_PWM.c ****             uint8 comparemodemasked = comparemode & EN_B_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (0 != EN_B_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 370:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if (EN_B_PWM_UseControl)
 371:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_CONTROL &= ((uint8)(~EN_B_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UseControl) */
 374:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 375:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /*EN_B_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 377:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 379:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 380:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (!EN_B_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 382:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 383:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_WriteCounter
 385:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 387:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 393:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 396:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 9


 397:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 398:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 399:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 402:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                        
 405:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
  61              		.loc 1 405 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL0:
 406:.\Generated_Source\PSoC5/EN_B_PWM.c ****         CY_SET_REG16(EN_B_PWM_COUNTER_LSB_PTR, counter);
  67              		.loc 1 406 0
  68 0000 014B     		ldr	r3, .L4
  69 0002 1880     		strh	r0, [r3]	@ movhi
  70 0004 7047     		bx	lr
  71              	.L5:
  72 0006 00BF     		.align	2
  73              	.L4:
  74 0008 18680040 		.word	1073768472
  75              		.cfi_endproc
  76              	.LFE4:
  77              		.size	EN_B_PWM_WriteCounter, .-EN_B_PWM_WriteCounter
  78              		.section	.text.EN_B_PWM_ReadCounter,"ax",%progbits
  79              		.align	2
  80              		.global	EN_B_PWM_ReadCounter
  81              		.thumb
  82              		.thumb_func
  83              		.type	EN_B_PWM_ReadCounter, %function
  84              	EN_B_PWM_ReadCounter:
  85              	.LFB5:
 407:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 408:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 409:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 410:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadCounter
 412:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 414:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 418:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 420:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 421:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 424:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint16 EN_B_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
  86              		.loc 1 426 0
  87              		.cfi_startproc
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 10


  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/EN_B_PWM.c ****           (void)CY_GET_REG8(EN_B_PWM_COUNTERCAP_LSB_PTR_8BIT);
  91              		.loc 1 430 0
  92 0000 024B     		ldr	r3, .L7
  93 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 432:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return (CY_GET_REG16(EN_B_PWM_CAPTURE_LSB_PTR));
  94              		.loc 1 433 0
  95 0004 024B     		ldr	r3, .L7+4
  96 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
  97              		.loc 1 434 0
  98 0008 80B2     		uxth	r0, r0
  99 000a 7047     		bx	lr
 100              	.L8:
 101              		.align	2
 102              	.L7:
 103 000c 1C640040 		.word	1073767452
 104 0010 B8680040 		.word	1073768632
 105              		.cfi_endproc
 106              	.LFE5:
 107              		.size	EN_B_PWM_ReadCounter, .-EN_B_PWM_ReadCounter
 108              		.section	.text.EN_B_PWM_WritePeriod,"ax",%progbits
 109              		.align	2
 110              		.global	EN_B_PWM_WritePeriod
 111              		.thumb
 112              		.thumb_func
 113              		.type	EN_B_PWM_WritePeriod, %function
 114              	EN_B_PWM_WritePeriod:
 115              	.LFB7:
 435:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 436:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if (EN_B_PWM_UseStatus)
 437:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 438:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 439:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Function Name: EN_B_PWM_ClearFIFO
 441:.\Generated_Source\PSoC5/EN_B_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 443:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 446:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  None
 448:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 449:.\Generated_Source\PSoC5/EN_B_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *  None
 451:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *
 452:.\Generated_Source\PSoC5/EN_B_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/EN_B_PWM.c ****         void EN_B_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/EN_B_PWM.c ****         {
 455:.\Generated_Source\PSoC5/EN_B_PWM.c ****             while(0u != (EN_B_PWM_ReadStatusRegister() & EN_B_PWM_STATUS_FIFONEMPTY))
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 11


 456:.\Generated_Source\PSoC5/EN_B_PWM.c ****             {
 457:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 (void)EN_B_PWM_ReadCapture();
 458:.\Generated_Source\PSoC5/EN_B_PWM.c ****             }
 459:.\Generated_Source\PSoC5/EN_B_PWM.c ****         }
 460:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 461:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* EN_B_PWM_UseStatus */
 462:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 463:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* !EN_B_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 465:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 466:.\Generated_Source\PSoC5/EN_B_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Function Name: EN_B_PWM_WritePeriod
 468:.\Generated_Source\PSoC5/EN_B_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 470:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 474:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/EN_B_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 478:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Return:
 479:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
 480:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 481:.\Generated_Source\PSoC5/EN_B_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/EN_B_PWM.c **** void EN_B_PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
 116              		.loc 1 483 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL1:
 484:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if(EN_B_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/EN_B_PWM.c ****         CY_SET_REG16(EN_B_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #else
 487:.\Generated_Source\PSoC5/EN_B_PWM.c ****         CY_SET_REG16(EN_B_PWM_PERIOD_LSB_PTR, period);
 122              		.loc 1 487 0
 123 0000 014B     		ldr	r3, .L10
 124 0002 1880     		strh	r0, [r3]	@ movhi
 125 0004 7047     		bx	lr
 126              	.L11:
 127 0006 00BF     		.align	2
 128              	.L10:
 129 0008 98680040 		.word	1073768600
 130              		.cfi_endproc
 131              	.LFE7:
 132              		.size	EN_B_PWM_WritePeriod, .-EN_B_PWM_WritePeriod
 133              		.section	.text.EN_B_PWM_WriteCompare,"ax",%progbits
 134              		.align	2
 135              		.global	EN_B_PWM_WriteCompare
 136              		.thumb
 137              		.thumb_func
 138              		.type	EN_B_PWM_WriteCompare, %function
 139              	EN_B_PWM_WriteCompare:
 140              	.LFB8:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 12


 488:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/EN_B_PWM.c **** }
 490:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 491:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (EN_B_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 493:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 494:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_WriteCompare
 496:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 498:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 505:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 508:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 510:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 511:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 515:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                        
 518:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 141              		.loc 1 518 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL2:
 519:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(EN_B_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CY_SET_REG16(EN_B_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 522:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CY_SET_REG16(EN_B_PWM_COMPARE1_LSB_PTR, compare);
 147              		.loc 1 522 0
 148 0000 014B     		ldr	r3, .L13
 149 0002 1880     		strh	r0, [r3]	@ movhi
 150 0004 7047     		bx	lr
 151              	.L14:
 152 0006 00BF     		.align	2
 153              	.L13:
 154 0008 58680040 		.word	1073768536
 155              		.cfi_endproc
 156              	.LFE8:
 157              		.size	EN_B_PWM_WriteCompare, .-EN_B_PWM_WriteCompare
 158              		.section	.text.EN_B_PWM_SetInterruptMode,"ax",%progbits
 159              		.align	2
 160              		.global	EN_B_PWM_SetInterruptMode
 161              		.thumb
 162              		.thumb_func
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 13


 163              		.type	EN_B_PWM_SetInterruptMode, %function
 164              	EN_B_PWM_SetInterruptMode:
 165              	.LFB9:
 523:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 525:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if (EN_B_PWM_PWMMode == EN_B_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #if(EN_B_PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 CY_SET_REG16(EN_B_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #else
 529:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 CY_SET_REG16(EN_B_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #endif /* (EN_B_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_PWMMode == EN_B_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 533:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 534:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 535:.\Generated_Source\PSoC5/EN_B_PWM.c **** #else
 536:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 537:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 538:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_WriteCompare1
 540:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 542:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 548:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 551:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 553:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 554:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                         
 557:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 558:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(EN_B_PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CY_SET_REG16(EN_B_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 561:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CY_SET_REG16(EN_B_PWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 564:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 565:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 566:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_WriteCompare2
 568:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 570:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 14


 577:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 580:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 582:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 583:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                         
 586:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 587:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(EN_B_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CY_SET_REG16(EN_B_PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 590:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CY_SET_REG16(EN_B_PWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 593:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 595:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (EN_B_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 597:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 598:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 602:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 605:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 608:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 609:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 610:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 611:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 614:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(!EN_B_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CY_SET_REG8(EN_B_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 618:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_DEADBAND_COUNT &= ((uint8)(~EN_B_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 622:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #if(EN_B_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << EN_B_PWM_DEADBAND_COUNT_SHIF
 625:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                                     EN_B_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #else
 627:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 EN_B_PWM_DEADBAND_COUNT |= deadtime & EN_B_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #endif /* (EN_B_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 630:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (!EN_B_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 632:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 633:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 15


 634:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 638:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 641:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 643:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 644:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 647:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint8 EN_B_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 650:.\Generated_Source\PSoC5/EN_B_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(!EN_B_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC5/EN_B_PWM.c ****             return (CY_GET_REG8(EN_B_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 654:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 655:.\Generated_Source\PSoC5/EN_B_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #if(EN_B_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 return ((uint8)(((uint8)(EN_B_PWM_DEADBAND_COUNT & EN_B_PWM_DEADBAND_COUNT_MASK)) >
 658:.\Generated_Source\PSoC5/EN_B_PWM.c ****                                                                            EN_B_PWM_DEADBAND_COUNT_
 659:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #else
 660:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 return (EN_B_PWM_DEADBAND_COUNT & EN_B_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/EN_B_PWM.c ****             #endif /* (EN_B_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (!EN_B_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 664:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 666:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (EN_B_PWM_UseStatus || EN_B_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 668:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 669:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 673:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 677:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 680:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 682:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 683:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 166              		.loc 1 685 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 16


 171              	.LVL3:
 686:.\Generated_Source\PSoC5/EN_B_PWM.c ****         CY_SET_REG8(EN_B_PWM_STATUS_MASK_PTR, interruptMode);
 172              		.loc 1 686 0
 173 0000 014B     		ldr	r3, .L16
 174 0002 1870     		strb	r0, [r3]
 175 0004 7047     		bx	lr
 176              	.L17:
 177 0006 00BF     		.align	2
 178              	.L16:
 179 0008 8E640040 		.word	1073767566
 180              		.cfi_endproc
 181              	.LFE9:
 182              		.size	EN_B_PWM_SetInterruptMode, .-EN_B_PWM_SetInterruptMode
 183              		.section	.text.EN_B_PWM_ReadStatusRegister,"ax",%progbits
 184              		.align	2
 185              		.global	EN_B_PWM_ReadStatusRegister
 186              		.thumb
 187              		.thumb_func
 188              		.type	EN_B_PWM_ReadStatusRegister, %function
 189              	EN_B_PWM_ReadStatusRegister:
 190              	.LFB10:
 687:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 688:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 689:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 690:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 694:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 697:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 699:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 700:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 710:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint8 EN_B_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 191              		.loc 1 712 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return (CY_GET_REG8(EN_B_PWM_STATUS_PTR));
 196              		.loc 1 713 0
 197 0000 014B     		ldr	r3, .L19
 198 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 17


 199              		.loc 1 714 0
 200 0004 7047     		bx	lr
 201              	.L20:
 202 0006 00BF     		.align	2
 203              	.L19:
 204 0008 6E640040 		.word	1073767534
 205              		.cfi_endproc
 206              	.LFE10:
 207              		.size	EN_B_PWM_ReadStatusRegister, .-EN_B_PWM_ReadStatusRegister
 208              		.section	.text.EN_B_PWM_ReadCapture,"ax",%progbits
 209              		.align	2
 210              		.global	EN_B_PWM_ReadCapture
 211              		.thumb
 212              		.thumb_func
 213              		.type	EN_B_PWM_ReadCapture, %function
 214              	EN_B_PWM_ReadCapture:
 215              	.LFB11:
 715:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 716:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* (EN_B_PWM_UseStatus || EN_B_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 718:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 719:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (EN_B_PWM_UseControl)
 720:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 721:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 722:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 726:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 730:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 732:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 733:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 736:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint8 EN_B_PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 739:.\Generated_Source\PSoC5/EN_B_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 741:.\Generated_Source\PSoC5/EN_B_PWM.c ****         result = CY_GET_REG8(EN_B_PWM_CONTROL_PTR);
 742:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return (result);
 743:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 744:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 745:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 746:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 750:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 754:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 18


 755:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 761:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 763:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 764:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/EN_B_PWM.c ****     void EN_B_PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 767:.\Generated_Source\PSoC5/EN_B_PWM.c ****         CY_SET_REG8(EN_B_PWM_CONTROL_PTR, control);
 768:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 769:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 770:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* (EN_B_PWM_UseControl) */
 771:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 772:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 773:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (!EN_B_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 775:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 776:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadCapture
 778:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 780:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 783:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 785:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 786:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 789:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint16 EN_B_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 216              		.loc 1 791 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return (CY_GET_REG16(EN_B_PWM_CAPTURE_LSB_PTR));
 221              		.loc 1 792 0
 222 0000 014B     		ldr	r3, .L22
 223 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 224              		.loc 1 793 0
 225 0004 80B2     		uxth	r0, r0
 226 0006 7047     		bx	lr
 227              	.L23:
 228              		.align	2
 229              	.L22:
 230 0008 B8680040 		.word	1073768632
 231              		.cfi_endproc
 232              	.LFE11:
 233              		.size	EN_B_PWM_ReadCapture, .-EN_B_PWM_ReadCapture
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 19


 234              		.section	.text.EN_B_PWM_ClearFIFO,"ax",%progbits
 235              		.align	2
 236              		.global	EN_B_PWM_ClearFIFO
 237              		.thumb
 238              		.thumb_func
 239              		.type	EN_B_PWM_ClearFIFO, %function
 240              	EN_B_PWM_ClearFIFO:
 241              	.LFB6:
 454:.\Generated_Source\PSoC5/EN_B_PWM.c ****         {
 242              		.loc 1 454 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 08B5     		push	{r3, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 3, -8
 249              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/EN_B_PWM.c ****             while(0u != (EN_B_PWM_ReadStatusRegister() & EN_B_PWM_STATUS_FIFONEMPTY))
 250              		.loc 1 455 0
 251 0002 01E0     		b	.L25
 252              	.L26:
 457:.\Generated_Source\PSoC5/EN_B_PWM.c ****                 (void)EN_B_PWM_ReadCapture();
 253              		.loc 1 457 0
 254 0004 FFF7FEFF 		bl	EN_B_PWM_ReadCapture
 255              	.LVL4:
 256              	.L25:
 455:.\Generated_Source\PSoC5/EN_B_PWM.c ****             while(0u != (EN_B_PWM_ReadStatusRegister() & EN_B_PWM_STATUS_FIFONEMPTY))
 257              		.loc 1 455 0 discriminator 1
 258 0008 FFF7FEFF 		bl	EN_B_PWM_ReadStatusRegister
 259              	.LVL5:
 260 000c 10F0100F 		tst	r0, #16
 261 0010 F8D1     		bne	.L26
 459:.\Generated_Source\PSoC5/EN_B_PWM.c ****         }
 262              		.loc 1 459 0
 263 0012 08BD     		pop	{r3, pc}
 264              		.cfi_endproc
 265              	.LFE6:
 266              		.size	EN_B_PWM_ClearFIFO, .-EN_B_PWM_ClearFIFO
 267              		.section	.text.EN_B_PWM_Init,"ax",%progbits
 268              		.align	2
 269              		.global	EN_B_PWM_Init
 270              		.thumb
 271              		.thumb_func
 272              		.type	EN_B_PWM_Init, %function
 273              	EN_B_PWM_Init:
 274              	.LFB1:
  85:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
 275              		.loc 1 85 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 08B5     		push	{r3, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
 129:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_AUX_CONTROLDP0 |= (EN_B_PWM_AUX_CTRL_FIFO0_CLR);
 283              		.loc 1 129 0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 20


 284 0002 124B     		ldr	r3, .L28
 285 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 286 0006 42F00102 		orr	r2, r2, #1
 287 000a 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_AUX_CONTROLDP1 |= (EN_B_PWM_AUX_CTRL_FIFO0_CLR);
 288              		.loc 1 130 0
 289 000c 0133     		adds	r3, r3, #1
 290 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 291 0010 42F00102 		orr	r2, r2, #1
 292 0014 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_WriteCounter(EN_B_PWM_INIT_PERIOD_VALUE);
 293              		.loc 1 133 0
 294 0016 4EF66020 		movw	r0, #60000
 295 001a FFF7FEFF 		bl	EN_B_PWM_WriteCounter
 296              	.LVL6:
 136:.\Generated_Source\PSoC5/EN_B_PWM.c ****     EN_B_PWM_WritePeriod(EN_B_PWM_INIT_PERIOD_VALUE);
 297              		.loc 1 136 0
 298 001e 4EF66020 		movw	r0, #60000
 299 0022 FFF7FEFF 		bl	EN_B_PWM_WritePeriod
 300              	.LVL7:
 139:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_WriteCompare(EN_B_PWM_INIT_COMPARE_VALUE1);
 301              		.loc 1 139 0
 302 0026 47F23050 		movw	r0, #30000
 303 002a FFF7FEFF 		bl	EN_B_PWM_WriteCompare
 304              	.LVL8:
 154:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_SetInterruptMode(EN_B_PWM_INIT_INTERRUPTS_MODE);
 305              		.loc 1 154 0
 306 002e 0020     		movs	r0, #0
 307 0030 FFF7FEFF 		bl	EN_B_PWM_SetInterruptMode
 308              	.LVL9:
 167:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_interruptState = CyEnterCriticalSection();
 309              		.loc 1 167 0
 310 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 311              	.LVL10:
 169:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_STATUS_AUX_CTRL |= EN_B_PWM_STATUS_ACTL_INT_EN_MASK;
 312              		.loc 1 169 0
 313 0038 054B     		ldr	r3, .L28+4
 314 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 315 003c 42F01002 		orr	r2, r2, #16
 316 0040 1A70     		strb	r2, [r3]
 172:.\Generated_Source\PSoC5/EN_B_PWM.c ****             CyExitCriticalSection(EN_B_PWM_interruptState);
 317              		.loc 1 172 0
 318 0042 FFF7FEFF 		bl	CyExitCriticalSection
 319              	.LVL11:
 176:.\Generated_Source\PSoC5/EN_B_PWM.c ****             EN_B_PWM_ClearFIFO();
 320              		.loc 1 176 0
 321 0046 FFF7FEFF 		bl	EN_B_PWM_ClearFIFO
 322              	.LVL12:
 323 004a 08BD     		pop	{r3, pc}
 324              	.L29:
 325              		.align	2
 326              	.L28:
 327 004c 9C640040 		.word	1073767580
 328 0050 9E640040 		.word	1073767582
 329              		.cfi_endproc
 330              	.LFE1:
 331              		.size	EN_B_PWM_Init, .-EN_B_PWM_Init
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 21


 332              		.section	.text.EN_B_PWM_Start,"ax",%progbits
 333              		.align	2
 334              		.global	EN_B_PWM_Start
 335              		.thumb
 336              		.thumb_func
 337              		.type	EN_B_PWM_Start, %function
 338              	EN_B_PWM_Start:
 339              	.LFB0:
  56:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
 340              		.loc 1 56 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/EN_B_PWM.c ****     if(EN_B_PWM_initVar == 0u)
 348              		.loc 1 58 0
 349 0002 044B     		ldr	r3, .L32
 350 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351 0006 23B9     		cbnz	r3, .L30
  60:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_Init();
 352              		.loc 1 60 0
 353 0008 FFF7FEFF 		bl	EN_B_PWM_Init
 354              	.LVL13:
  61:.\Generated_Source\PSoC5/EN_B_PWM.c ****         EN_B_PWM_initVar = 1u;
 355              		.loc 1 61 0
 356 000c 0122     		movs	r2, #1
 357 000e 014B     		ldr	r3, .L32
 358 0010 1A70     		strb	r2, [r3]
 359              	.L30:
 360 0012 08BD     		pop	{r3, pc}
 361              	.L33:
 362              		.align	2
 363              	.L32:
 364 0014 00000000 		.word	.LANCHOR0
 365              		.cfi_endproc
 366              	.LFE0:
 367              		.size	EN_B_PWM_Start, .-EN_B_PWM_Start
 368              		.section	.text.EN_B_PWM_ReadCompare,"ax",%progbits
 369              		.align	2
 370              		.global	EN_B_PWM_ReadCompare
 371              		.thumb
 372              		.thumb_func
 373              		.type	EN_B_PWM_ReadCompare, %function
 374              	EN_B_PWM_ReadCompare:
 375              	.LFB12:
 794:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 795:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* (!EN_B_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 797:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 798:.\Generated_Source\PSoC5/EN_B_PWM.c **** #if (EN_B_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 800:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 801:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadCompare
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 22


 803:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 805:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 809:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 811:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 812:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 815:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint16 EN_B_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 376              		.loc 1 817 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #if(EN_B_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/EN_B_PWM.c ****             return ((uint16)CY_GET_REG16(EN_B_PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #else
 821:.\Generated_Source\PSoC5/EN_B_PWM.c ****             return (CY_GET_REG16(EN_B_PWM_COMPARE1_LSB_PTR));
 381              		.loc 1 821 0
 382 0000 014B     		ldr	r3, .L35
 383 0002 1888     		ldrh	r0, [r3]
 822:.\Generated_Source\PSoC5/EN_B_PWM.c ****         #endif /* (EN_B_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 384              		.loc 1 823 0
 385 0004 80B2     		uxth	r0, r0
 386 0006 7047     		bx	lr
 387              	.L36:
 388              		.align	2
 389              	.L35:
 390 0008 58680040 		.word	1073768536
 391              		.cfi_endproc
 392              	.LFE12:
 393              		.size	EN_B_PWM_ReadCompare, .-EN_B_PWM_ReadCompare
 394              		.section	.text.EN_B_PWM_ReadPeriod,"ax",%progbits
 395              		.align	2
 396              		.global	EN_B_PWM_ReadPeriod
 397              		.thumb
 398              		.thumb_func
 399              		.type	EN_B_PWM_ReadPeriod, %function
 400              	EN_B_PWM_ReadPeriod:
 401              	.LFB13:
 824:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 825:.\Generated_Source\PSoC5/EN_B_PWM.c **** #else
 826:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 827:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 828:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadCompare1
 830:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 832:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Reads the compare value for the compare1 output.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 23


 834:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 835:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 837:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 838:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 841:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint16 EN_B_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 844:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return (CY_GET_REG16(EN_B_PWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 846:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 847:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 848:.\Generated_Source\PSoC5/EN_B_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Function Name: EN_B_PWM_ReadCompare2
 850:.\Generated_Source\PSoC5/EN_B_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 852:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 855:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  None
 857:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 858:.\Generated_Source\PSoC5/EN_B_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *
 861:.\Generated_Source\PSoC5/EN_B_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/EN_B_PWM.c ****     uint16 EN_B_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/EN_B_PWM.c ****     {
 864:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return (CY_GET_REG16(EN_B_PWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/EN_B_PWM.c ****     }
 866:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 867:.\Generated_Source\PSoC5/EN_B_PWM.c **** #endif /* (EN_B_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 869:.\Generated_Source\PSoC5/EN_B_PWM.c **** 
 870:.\Generated_Source\PSoC5/EN_B_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Function Name: EN_B_PWM_ReadPeriod
 872:.\Generated_Source\PSoC5/EN_B_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 874:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 877:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  None
 879:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 880:.\Generated_Source\PSoC5/EN_B_PWM.c **** * Return:
 881:.\Generated_Source\PSoC5/EN_B_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/EN_B_PWM.c **** *
 883:.\Generated_Source\PSoC5/EN_B_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/EN_B_PWM.c **** uint16 EN_B_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/EN_B_PWM.c **** {
 402              		.loc 1 885 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 24


 886:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #if(EN_B_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return ((uint16)CY_GET_REG16(EN_B_PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #else
 889:.\Generated_Source\PSoC5/EN_B_PWM.c ****         return (CY_GET_REG16(EN_B_PWM_PERIOD_LSB_PTR));
 407              		.loc 1 889 0
 408 0000 014B     		ldr	r3, .L38
 409 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/EN_B_PWM.c ****     #endif /* (EN_B_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/EN_B_PWM.c **** }
 410              		.loc 1 891 0
 411 0004 80B2     		uxth	r0, r0
 412 0006 7047     		bx	lr
 413              	.L39:
 414              		.align	2
 415              	.L38:
 416 0008 98680040 		.word	1073768600
 417              		.cfi_endproc
 418              	.LFE13:
 419              		.size	EN_B_PWM_ReadPeriod, .-EN_B_PWM_ReadPeriod
 420              		.global	EN_B_PWM_initVar
 421              		.bss
 422              		.set	.LANCHOR0,. + 0
 423              		.type	EN_B_PWM_initVar, %object
 424              		.size	EN_B_PWM_initVar, 1
 425              	EN_B_PWM_initVar:
 426 0000 00       		.space	1
 427              		.text
 428              	.Letext0:
 429              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 430              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 431              		.section	.debug_info,"",%progbits
 432              	.Ldebug_info0:
 433 0000 E3020000 		.4byte	0x2e3
 434 0004 0400     		.2byte	0x4
 435 0006 00000000 		.4byte	.Ldebug_abbrev0
 436 000a 04       		.byte	0x4
 437 000b 01       		.uleb128 0x1
 438 000c 8F010000 		.4byte	.LASF35
 439 0010 01       		.byte	0x1
 440 0011 D5020000 		.4byte	.LASF36
 441 0015 8A020000 		.4byte	.LASF37
 442 0019 00000000 		.4byte	.Ldebug_ranges0+0
 443 001d 00000000 		.4byte	0
 444 0021 00000000 		.4byte	.Ldebug_line0
 445 0025 02       		.uleb128 0x2
 446 0026 01       		.byte	0x1
 447 0027 06       		.byte	0x6
 448 0028 C1020000 		.4byte	.LASF0
 449 002c 02       		.uleb128 0x2
 450 002d 01       		.byte	0x1
 451 002e 08       		.byte	0x8
 452 002f 99000000 		.4byte	.LASF1
 453 0033 02       		.uleb128 0x2
 454 0034 02       		.byte	0x2
 455 0035 05       		.byte	0x5
 456 0036 6C020000 		.4byte	.LASF2
 457 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 25


 458 003b 02       		.byte	0x2
 459 003c 07       		.byte	0x7
 460 003d 3D000000 		.4byte	.LASF3
 461 0041 02       		.uleb128 0x2
 462 0042 04       		.byte	0x4
 463 0043 05       		.byte	0x5
 464 0044 7C020000 		.4byte	.LASF4
 465 0048 02       		.uleb128 0x2
 466 0049 04       		.byte	0x4
 467 004a 07       		.byte	0x7
 468 004b BA000000 		.4byte	.LASF5
 469 004f 02       		.uleb128 0x2
 470 0050 08       		.byte	0x8
 471 0051 05       		.byte	0x5
 472 0052 3F020000 		.4byte	.LASF6
 473 0056 02       		.uleb128 0x2
 474 0057 08       		.byte	0x8
 475 0058 07       		.byte	0x7
 476 0059 82000000 		.4byte	.LASF7
 477 005d 03       		.uleb128 0x3
 478 005e 04       		.byte	0x4
 479 005f 05       		.byte	0x5
 480 0060 696E7400 		.ascii	"int\000"
 481 0064 02       		.uleb128 0x2
 482 0065 04       		.byte	0x4
 483 0066 07       		.byte	0x7
 484 0067 31010000 		.4byte	.LASF8
 485 006b 04       		.uleb128 0x4
 486 006c 76020000 		.4byte	.LASF9
 487 0070 02       		.byte	0x2
 488 0071 B3       		.byte	0xb3
 489 0072 2C000000 		.4byte	0x2c
 490 0076 04       		.uleb128 0x4
 491 0077 13010000 		.4byte	.LASF10
 492 007b 02       		.byte	0x2
 493 007c B4       		.byte	0xb4
 494 007d 3A000000 		.4byte	0x3a
 495 0081 02       		.uleb128 0x2
 496 0082 04       		.byte	0x4
 497 0083 04       		.byte	0x4
 498 0084 74000000 		.4byte	.LASF11
 499 0088 02       		.uleb128 0x2
 500 0089 08       		.byte	0x8
 501 008a 04       		.byte	0x4
 502 008b 0C010000 		.4byte	.LASF12
 503 008f 02       		.uleb128 0x2
 504 0090 01       		.byte	0x1
 505 0091 08       		.byte	0x8
 506 0092 85020000 		.4byte	.LASF13
 507 0096 05       		.uleb128 0x5
 508 0097 B5000000 		.4byte	.LASF14
 509 009b 02       		.byte	0x2
 510 009c 5D01     		.2byte	0x15d
 511 009e A2000000 		.4byte	0xa2
 512 00a2 06       		.uleb128 0x6
 513 00a3 6B000000 		.4byte	0x6b
 514 00a7 05       		.uleb128 0x5
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 26


 515 00a8 00000000 		.4byte	.LASF15
 516 00ac 02       		.byte	0x2
 517 00ad 5E01     		.2byte	0x15e
 518 00af B3000000 		.4byte	0xb3
 519 00b3 06       		.uleb128 0x6
 520 00b4 76000000 		.4byte	0x76
 521 00b8 02       		.uleb128 0x2
 522 00b9 04       		.byte	0x4
 523 00ba 07       		.byte	0x7
 524 00bb 0B020000 		.4byte	.LASF16
 525 00bf 07       		.uleb128 0x7
 526 00c0 E0000000 		.4byte	.LASF17
 527 00c4 01       		.byte	0x1
 528 00c5 C7       		.byte	0xc7
 529 00c6 00000000 		.4byte	.LFB2
 530 00ca 02000000 		.4byte	.LFE2-.LFB2
 531 00ce 01       		.uleb128 0x1
 532 00cf 9C       		.byte	0x9c
 533 00d0 07       		.uleb128 0x7
 534 00d1 81010000 		.4byte	.LASF18
 535 00d5 01       		.byte	0x1
 536 00d6 E9       		.byte	0xe9
 537 00d7 00000000 		.4byte	.LFB3
 538 00db 02000000 		.4byte	.LFE3-.LFB3
 539 00df 01       		.uleb128 0x1
 540 00e0 9C       		.byte	0x9c
 541 00e1 08       		.uleb128 0x8
 542 00e2 29020000 		.4byte	.LASF19
 543 00e6 01       		.byte	0x1
 544 00e7 9301     		.2byte	0x193
 545 00e9 00000000 		.4byte	.LFB4
 546 00ed 0C000000 		.4byte	.LFE4-.LFB4
 547 00f1 01       		.uleb128 0x1
 548 00f2 9C       		.byte	0x9c
 549 00f3 06010000 		.4byte	0x106
 550 00f7 09       		.uleb128 0x9
 551 00f8 7A000000 		.4byte	.LASF21
 552 00fc 01       		.byte	0x1
 553 00fd 9301     		.2byte	0x193
 554 00ff 76000000 		.4byte	0x76
 555 0103 01       		.uleb128 0x1
 556 0104 50       		.byte	0x50
 557 0105 00       		.byte	0
 558 0106 0A       		.uleb128 0xa
 559 0107 F9020000 		.4byte	.LASF27
 560 010b 01       		.byte	0x1
 561 010c A901     		.2byte	0x1a9
 562 010e 76000000 		.4byte	0x76
 563 0112 00000000 		.4byte	.LFB5
 564 0116 14000000 		.4byte	.LFE5-.LFB5
 565 011a 01       		.uleb128 0x1
 566 011b 9C       		.byte	0x9c
 567 011c 08       		.uleb128 0x8
 568 011d 50000000 		.4byte	.LASF20
 569 0121 01       		.byte	0x1
 570 0122 E201     		.2byte	0x1e2
 571 0124 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 27


 572 0128 0C000000 		.4byte	.LFE7-.LFB7
 573 012c 01       		.uleb128 0x1
 574 012d 9C       		.byte	0x9c
 575 012e 41010000 		.4byte	0x141
 576 0132 09       		.uleb128 0x9
 577 0133 36000000 		.4byte	.LASF22
 578 0137 01       		.byte	0x1
 579 0138 E201     		.2byte	0x1e2
 580 013a 76000000 		.4byte	0x76
 581 013e 01       		.uleb128 0x1
 582 013f 50       		.byte	0x50
 583 0140 00       		.byte	0
 584 0141 08       		.uleb128 0x8
 585 0142 06000000 		.4byte	.LASF23
 586 0146 01       		.byte	0x1
 587 0147 0402     		.2byte	0x204
 588 0149 00000000 		.4byte	.LFB8
 589 014d 0C000000 		.4byte	.LFE8-.LFB8
 590 0151 01       		.uleb128 0x1
 591 0152 9C       		.byte	0x9c
 592 0153 66010000 		.4byte	0x166
 593 0157 09       		.uleb128 0x9
 594 0158 CD020000 		.4byte	.LASF24
 595 015c 01       		.byte	0x1
 596 015d 0402     		.2byte	0x204
 597 015f 76000000 		.4byte	0x76
 598 0163 01       		.uleb128 0x1
 599 0164 50       		.byte	0x50
 600 0165 00       		.byte	0
 601 0166 08       		.uleb128 0x8
 602 0167 1C000000 		.4byte	.LASF25
 603 016b 01       		.byte	0x1
 604 016c AC02     		.2byte	0x2ac
 605 016e 00000000 		.4byte	.LFB9
 606 0172 0C000000 		.4byte	.LFE9-.LFB9
 607 0176 01       		.uleb128 0x1
 608 0177 9C       		.byte	0x9c
 609 0178 8B010000 		.4byte	0x18b
 610 017c 09       		.uleb128 0x9
 611 017d 4D020000 		.4byte	.LASF26
 612 0181 01       		.byte	0x1
 613 0182 AC02     		.2byte	0x2ac
 614 0184 6B000000 		.4byte	0x6b
 615 0188 01       		.uleb128 0x1
 616 0189 50       		.byte	0x50
 617 018a 00       		.byte	0
 618 018b 0A       		.uleb128 0xa
 619 018c F0000000 		.4byte	.LASF28
 620 0190 01       		.byte	0x1
 621 0191 C702     		.2byte	0x2c7
 622 0193 6B000000 		.4byte	0x6b
 623 0197 00000000 		.4byte	.LFB10
 624 019b 0C000000 		.4byte	.LFE10-.LFB10
 625 019f 01       		.uleb128 0x1
 626 01a0 9C       		.byte	0x9c
 627 01a1 0A       		.uleb128 0xa
 628 01a2 14020000 		.4byte	.LASF29
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 28


 629 01a6 01       		.byte	0x1
 630 01a7 1603     		.2byte	0x316
 631 01a9 76000000 		.4byte	0x76
 632 01ad 00000000 		.4byte	.LFB11
 633 01b1 0C000000 		.4byte	.LFE11-.LFB11
 634 01b5 01       		.uleb128 0x1
 635 01b6 9C       		.byte	0x9c
 636 01b7 08       		.uleb128 0x8
 637 01b8 0E030000 		.4byte	.LASF30
 638 01bc 01       		.byte	0x1
 639 01bd C501     		.2byte	0x1c5
 640 01bf 00000000 		.4byte	.LFB6
 641 01c3 14000000 		.4byte	.LFE6-.LFB6
 642 01c7 01       		.uleb128 0x1
 643 01c8 9C       		.byte	0x9c
 644 01c9 E0010000 		.4byte	0x1e0
 645 01cd 0B       		.uleb128 0xb
 646 01ce 08000000 		.4byte	.LVL4
 647 01d2 A1010000 		.4byte	0x1a1
 648 01d6 0B       		.uleb128 0xb
 649 01d7 0C000000 		.4byte	.LVL5
 650 01db 8B010000 		.4byte	0x18b
 651 01df 00       		.byte	0
 652 01e0 0C       		.uleb128 0xc
 653 01e1 A7000000 		.4byte	.LASF31
 654 01e5 01       		.byte	0x1
 655 01e6 54       		.byte	0x54
 656 01e7 00000000 		.4byte	.LFB1
 657 01eb 54000000 		.4byte	.LFE1-.LFB1
 658 01ef 01       		.uleb128 0x1
 659 01f0 9C       		.byte	0x9c
 660 01f1 72020000 		.4byte	0x272
 661 01f5 0D       		.uleb128 0xd
 662 01f6 3E010000 		.4byte	.LASF38
 663 01fa 01       		.byte	0x1
 664 01fb 5D       		.byte	0x5d
 665 01fc 6B000000 		.4byte	0x6b
 666 0200 00000000 		.4byte	.LLST0
 667 0204 0E       		.uleb128 0xe
 668 0205 1E000000 		.4byte	.LVL6
 669 0209 E1000000 		.4byte	0xe1
 670 020d 19020000 		.4byte	0x219
 671 0211 0F       		.uleb128 0xf
 672 0212 01       		.uleb128 0x1
 673 0213 50       		.byte	0x50
 674 0214 03       		.uleb128 0x3
 675 0215 0B       		.byte	0xb
 676 0216 60EA     		.2byte	0xea60
 677 0218 00       		.byte	0
 678 0219 0E       		.uleb128 0xe
 679 021a 26000000 		.4byte	.LVL7
 680 021e 1C010000 		.4byte	0x11c
 681 0222 2E020000 		.4byte	0x22e
 682 0226 0F       		.uleb128 0xf
 683 0227 01       		.uleb128 0x1
 684 0228 50       		.byte	0x50
 685 0229 03       		.uleb128 0x3
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 29


 686 022a 0B       		.byte	0xb
 687 022b 60EA     		.2byte	0xea60
 688 022d 00       		.byte	0
 689 022e 0E       		.uleb128 0xe
 690 022f 2E000000 		.4byte	.LVL8
 691 0233 41010000 		.4byte	0x141
 692 0237 43020000 		.4byte	0x243
 693 023b 0F       		.uleb128 0xf
 694 023c 01       		.uleb128 0x1
 695 023d 50       		.byte	0x50
 696 023e 03       		.uleb128 0x3
 697 023f 0A       		.byte	0xa
 698 0240 3075     		.2byte	0x7530
 699 0242 00       		.byte	0
 700 0243 0E       		.uleb128 0xe
 701 0244 34000000 		.4byte	.LVL9
 702 0248 66010000 		.4byte	0x166
 703 024c 56020000 		.4byte	0x256
 704 0250 0F       		.uleb128 0xf
 705 0251 01       		.uleb128 0x1
 706 0252 50       		.byte	0x50
 707 0253 01       		.uleb128 0x1
 708 0254 30       		.byte	0x30
 709 0255 00       		.byte	0
 710 0256 0B       		.uleb128 0xb
 711 0257 38000000 		.4byte	.LVL10
 712 025b CE020000 		.4byte	0x2ce
 713 025f 0B       		.uleb128 0xb
 714 0260 46000000 		.4byte	.LVL11
 715 0264 D9020000 		.4byte	0x2d9
 716 0268 0B       		.uleb128 0xb
 717 0269 4A000000 		.4byte	.LVL12
 718 026d B7010000 		.4byte	0x1b7
 719 0271 00       		.byte	0
 720 0272 0C       		.uleb128 0xc
 721 0273 65000000 		.4byte	.LASF32
 722 0277 01       		.byte	0x1
 723 0278 37       		.byte	0x37
 724 0279 00000000 		.4byte	.LFB0
 725 027d 18000000 		.4byte	.LFE0-.LFB0
 726 0281 01       		.uleb128 0x1
 727 0282 9C       		.byte	0x9c
 728 0283 91020000 		.4byte	0x291
 729 0287 0B       		.uleb128 0xb
 730 0288 0C000000 		.4byte	.LVL13
 731 028c E0010000 		.4byte	0x1e0
 732 0290 00       		.byte	0
 733 0291 0A       		.uleb128 0xa
 734 0292 6C010000 		.4byte	.LASF33
 735 0296 01       		.byte	0x1
 736 0297 3003     		.2byte	0x330
 737 0299 76000000 		.4byte	0x76
 738 029d 00000000 		.4byte	.LFB12
 739 02a1 0C000000 		.4byte	.LFE12-.LFB12
 740 02a5 01       		.uleb128 0x1
 741 02a6 9C       		.byte	0x9c
 742 02a7 0A       		.uleb128 0xa
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 30


 743 02a8 CC000000 		.4byte	.LASF34
 744 02ac 01       		.byte	0x1
 745 02ad 7403     		.2byte	0x374
 746 02af 76000000 		.4byte	0x76
 747 02b3 00000000 		.4byte	.LFB13
 748 02b7 0C000000 		.4byte	.LFE13-.LFB13
 749 02bb 01       		.uleb128 0x1
 750 02bc 9C       		.byte	0x9c
 751 02bd 10       		.uleb128 0x10
 752 02be 5B020000 		.4byte	.LASF39
 753 02c2 01       		.byte	0x1
 754 02c3 20       		.byte	0x20
 755 02c4 6B000000 		.4byte	0x6b
 756 02c8 05       		.uleb128 0x5
 757 02c9 03       		.byte	0x3
 758 02ca 00000000 		.4byte	EN_B_PWM_initVar
 759 02ce 11       		.uleb128 0x11
 760 02cf 1A010000 		.4byte	.LASF40
 761 02d3 03       		.byte	0x3
 762 02d4 7E       		.byte	0x7e
 763 02d5 6B000000 		.4byte	0x6b
 764 02d9 12       		.uleb128 0x12
 765 02da 56010000 		.4byte	.LASF41
 766 02de 03       		.byte	0x3
 767 02df 7F       		.byte	0x7f
 768 02e0 13       		.uleb128 0x13
 769 02e1 6B000000 		.4byte	0x6b
 770 02e5 00       		.byte	0
 771 02e6 00       		.byte	0
 772              		.section	.debug_abbrev,"",%progbits
 773              	.Ldebug_abbrev0:
 774 0000 01       		.uleb128 0x1
 775 0001 11       		.uleb128 0x11
 776 0002 01       		.byte	0x1
 777 0003 25       		.uleb128 0x25
 778 0004 0E       		.uleb128 0xe
 779 0005 13       		.uleb128 0x13
 780 0006 0B       		.uleb128 0xb
 781 0007 03       		.uleb128 0x3
 782 0008 0E       		.uleb128 0xe
 783 0009 1B       		.uleb128 0x1b
 784 000a 0E       		.uleb128 0xe
 785 000b 55       		.uleb128 0x55
 786 000c 17       		.uleb128 0x17
 787 000d 11       		.uleb128 0x11
 788 000e 01       		.uleb128 0x1
 789 000f 10       		.uleb128 0x10
 790 0010 17       		.uleb128 0x17
 791 0011 00       		.byte	0
 792 0012 00       		.byte	0
 793 0013 02       		.uleb128 0x2
 794 0014 24       		.uleb128 0x24
 795 0015 00       		.byte	0
 796 0016 0B       		.uleb128 0xb
 797 0017 0B       		.uleb128 0xb
 798 0018 3E       		.uleb128 0x3e
 799 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 31


 800 001a 03       		.uleb128 0x3
 801 001b 0E       		.uleb128 0xe
 802 001c 00       		.byte	0
 803 001d 00       		.byte	0
 804 001e 03       		.uleb128 0x3
 805 001f 24       		.uleb128 0x24
 806 0020 00       		.byte	0
 807 0021 0B       		.uleb128 0xb
 808 0022 0B       		.uleb128 0xb
 809 0023 3E       		.uleb128 0x3e
 810 0024 0B       		.uleb128 0xb
 811 0025 03       		.uleb128 0x3
 812 0026 08       		.uleb128 0x8
 813 0027 00       		.byte	0
 814 0028 00       		.byte	0
 815 0029 04       		.uleb128 0x4
 816 002a 16       		.uleb128 0x16
 817 002b 00       		.byte	0
 818 002c 03       		.uleb128 0x3
 819 002d 0E       		.uleb128 0xe
 820 002e 3A       		.uleb128 0x3a
 821 002f 0B       		.uleb128 0xb
 822 0030 3B       		.uleb128 0x3b
 823 0031 0B       		.uleb128 0xb
 824 0032 49       		.uleb128 0x49
 825 0033 13       		.uleb128 0x13
 826 0034 00       		.byte	0
 827 0035 00       		.byte	0
 828 0036 05       		.uleb128 0x5
 829 0037 16       		.uleb128 0x16
 830 0038 00       		.byte	0
 831 0039 03       		.uleb128 0x3
 832 003a 0E       		.uleb128 0xe
 833 003b 3A       		.uleb128 0x3a
 834 003c 0B       		.uleb128 0xb
 835 003d 3B       		.uleb128 0x3b
 836 003e 05       		.uleb128 0x5
 837 003f 49       		.uleb128 0x49
 838 0040 13       		.uleb128 0x13
 839 0041 00       		.byte	0
 840 0042 00       		.byte	0
 841 0043 06       		.uleb128 0x6
 842 0044 35       		.uleb128 0x35
 843 0045 00       		.byte	0
 844 0046 49       		.uleb128 0x49
 845 0047 13       		.uleb128 0x13
 846 0048 00       		.byte	0
 847 0049 00       		.byte	0
 848 004a 07       		.uleb128 0x7
 849 004b 2E       		.uleb128 0x2e
 850 004c 00       		.byte	0
 851 004d 3F       		.uleb128 0x3f
 852 004e 19       		.uleb128 0x19
 853 004f 03       		.uleb128 0x3
 854 0050 0E       		.uleb128 0xe
 855 0051 3A       		.uleb128 0x3a
 856 0052 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 32


 857 0053 3B       		.uleb128 0x3b
 858 0054 0B       		.uleb128 0xb
 859 0055 27       		.uleb128 0x27
 860 0056 19       		.uleb128 0x19
 861 0057 11       		.uleb128 0x11
 862 0058 01       		.uleb128 0x1
 863 0059 12       		.uleb128 0x12
 864 005a 06       		.uleb128 0x6
 865 005b 40       		.uleb128 0x40
 866 005c 18       		.uleb128 0x18
 867 005d 9742     		.uleb128 0x2117
 868 005f 19       		.uleb128 0x19
 869 0060 00       		.byte	0
 870 0061 00       		.byte	0
 871 0062 08       		.uleb128 0x8
 872 0063 2E       		.uleb128 0x2e
 873 0064 01       		.byte	0x1
 874 0065 3F       		.uleb128 0x3f
 875 0066 19       		.uleb128 0x19
 876 0067 03       		.uleb128 0x3
 877 0068 0E       		.uleb128 0xe
 878 0069 3A       		.uleb128 0x3a
 879 006a 0B       		.uleb128 0xb
 880 006b 3B       		.uleb128 0x3b
 881 006c 05       		.uleb128 0x5
 882 006d 27       		.uleb128 0x27
 883 006e 19       		.uleb128 0x19
 884 006f 11       		.uleb128 0x11
 885 0070 01       		.uleb128 0x1
 886 0071 12       		.uleb128 0x12
 887 0072 06       		.uleb128 0x6
 888 0073 40       		.uleb128 0x40
 889 0074 18       		.uleb128 0x18
 890 0075 9742     		.uleb128 0x2117
 891 0077 19       		.uleb128 0x19
 892 0078 01       		.uleb128 0x1
 893 0079 13       		.uleb128 0x13
 894 007a 00       		.byte	0
 895 007b 00       		.byte	0
 896 007c 09       		.uleb128 0x9
 897 007d 05       		.uleb128 0x5
 898 007e 00       		.byte	0
 899 007f 03       		.uleb128 0x3
 900 0080 0E       		.uleb128 0xe
 901 0081 3A       		.uleb128 0x3a
 902 0082 0B       		.uleb128 0xb
 903 0083 3B       		.uleb128 0x3b
 904 0084 05       		.uleb128 0x5
 905 0085 49       		.uleb128 0x49
 906 0086 13       		.uleb128 0x13
 907 0087 02       		.uleb128 0x2
 908 0088 18       		.uleb128 0x18
 909 0089 00       		.byte	0
 910 008a 00       		.byte	0
 911 008b 0A       		.uleb128 0xa
 912 008c 2E       		.uleb128 0x2e
 913 008d 00       		.byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 33


 914 008e 3F       		.uleb128 0x3f
 915 008f 19       		.uleb128 0x19
 916 0090 03       		.uleb128 0x3
 917 0091 0E       		.uleb128 0xe
 918 0092 3A       		.uleb128 0x3a
 919 0093 0B       		.uleb128 0xb
 920 0094 3B       		.uleb128 0x3b
 921 0095 05       		.uleb128 0x5
 922 0096 27       		.uleb128 0x27
 923 0097 19       		.uleb128 0x19
 924 0098 49       		.uleb128 0x49
 925 0099 13       		.uleb128 0x13
 926 009a 11       		.uleb128 0x11
 927 009b 01       		.uleb128 0x1
 928 009c 12       		.uleb128 0x12
 929 009d 06       		.uleb128 0x6
 930 009e 40       		.uleb128 0x40
 931 009f 18       		.uleb128 0x18
 932 00a0 9742     		.uleb128 0x2117
 933 00a2 19       		.uleb128 0x19
 934 00a3 00       		.byte	0
 935 00a4 00       		.byte	0
 936 00a5 0B       		.uleb128 0xb
 937 00a6 898201   		.uleb128 0x4109
 938 00a9 00       		.byte	0
 939 00aa 11       		.uleb128 0x11
 940 00ab 01       		.uleb128 0x1
 941 00ac 31       		.uleb128 0x31
 942 00ad 13       		.uleb128 0x13
 943 00ae 00       		.byte	0
 944 00af 00       		.byte	0
 945 00b0 0C       		.uleb128 0xc
 946 00b1 2E       		.uleb128 0x2e
 947 00b2 01       		.byte	0x1
 948 00b3 3F       		.uleb128 0x3f
 949 00b4 19       		.uleb128 0x19
 950 00b5 03       		.uleb128 0x3
 951 00b6 0E       		.uleb128 0xe
 952 00b7 3A       		.uleb128 0x3a
 953 00b8 0B       		.uleb128 0xb
 954 00b9 3B       		.uleb128 0x3b
 955 00ba 0B       		.uleb128 0xb
 956 00bb 27       		.uleb128 0x27
 957 00bc 19       		.uleb128 0x19
 958 00bd 11       		.uleb128 0x11
 959 00be 01       		.uleb128 0x1
 960 00bf 12       		.uleb128 0x12
 961 00c0 06       		.uleb128 0x6
 962 00c1 40       		.uleb128 0x40
 963 00c2 18       		.uleb128 0x18
 964 00c3 9742     		.uleb128 0x2117
 965 00c5 19       		.uleb128 0x19
 966 00c6 01       		.uleb128 0x1
 967 00c7 13       		.uleb128 0x13
 968 00c8 00       		.byte	0
 969 00c9 00       		.byte	0
 970 00ca 0D       		.uleb128 0xd
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 34


 971 00cb 34       		.uleb128 0x34
 972 00cc 00       		.byte	0
 973 00cd 03       		.uleb128 0x3
 974 00ce 0E       		.uleb128 0xe
 975 00cf 3A       		.uleb128 0x3a
 976 00d0 0B       		.uleb128 0xb
 977 00d1 3B       		.uleb128 0x3b
 978 00d2 0B       		.uleb128 0xb
 979 00d3 49       		.uleb128 0x49
 980 00d4 13       		.uleb128 0x13
 981 00d5 02       		.uleb128 0x2
 982 00d6 17       		.uleb128 0x17
 983 00d7 00       		.byte	0
 984 00d8 00       		.byte	0
 985 00d9 0E       		.uleb128 0xe
 986 00da 898201   		.uleb128 0x4109
 987 00dd 01       		.byte	0x1
 988 00de 11       		.uleb128 0x11
 989 00df 01       		.uleb128 0x1
 990 00e0 31       		.uleb128 0x31
 991 00e1 13       		.uleb128 0x13
 992 00e2 01       		.uleb128 0x1
 993 00e3 13       		.uleb128 0x13
 994 00e4 00       		.byte	0
 995 00e5 00       		.byte	0
 996 00e6 0F       		.uleb128 0xf
 997 00e7 8A8201   		.uleb128 0x410a
 998 00ea 00       		.byte	0
 999 00eb 02       		.uleb128 0x2
 1000 00ec 18       		.uleb128 0x18
 1001 00ed 9142     		.uleb128 0x2111
 1002 00ef 18       		.uleb128 0x18
 1003 00f0 00       		.byte	0
 1004 00f1 00       		.byte	0
 1005 00f2 10       		.uleb128 0x10
 1006 00f3 34       		.uleb128 0x34
 1007 00f4 00       		.byte	0
 1008 00f5 03       		.uleb128 0x3
 1009 00f6 0E       		.uleb128 0xe
 1010 00f7 3A       		.uleb128 0x3a
 1011 00f8 0B       		.uleb128 0xb
 1012 00f9 3B       		.uleb128 0x3b
 1013 00fa 0B       		.uleb128 0xb
 1014 00fb 49       		.uleb128 0x49
 1015 00fc 13       		.uleb128 0x13
 1016 00fd 3F       		.uleb128 0x3f
 1017 00fe 19       		.uleb128 0x19
 1018 00ff 02       		.uleb128 0x2
 1019 0100 18       		.uleb128 0x18
 1020 0101 00       		.byte	0
 1021 0102 00       		.byte	0
 1022 0103 11       		.uleb128 0x11
 1023 0104 2E       		.uleb128 0x2e
 1024 0105 00       		.byte	0
 1025 0106 3F       		.uleb128 0x3f
 1026 0107 19       		.uleb128 0x19
 1027 0108 03       		.uleb128 0x3
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 35


 1028 0109 0E       		.uleb128 0xe
 1029 010a 3A       		.uleb128 0x3a
 1030 010b 0B       		.uleb128 0xb
 1031 010c 3B       		.uleb128 0x3b
 1032 010d 0B       		.uleb128 0xb
 1033 010e 27       		.uleb128 0x27
 1034 010f 19       		.uleb128 0x19
 1035 0110 49       		.uleb128 0x49
 1036 0111 13       		.uleb128 0x13
 1037 0112 3C       		.uleb128 0x3c
 1038 0113 19       		.uleb128 0x19
 1039 0114 00       		.byte	0
 1040 0115 00       		.byte	0
 1041 0116 12       		.uleb128 0x12
 1042 0117 2E       		.uleb128 0x2e
 1043 0118 01       		.byte	0x1
 1044 0119 3F       		.uleb128 0x3f
 1045 011a 19       		.uleb128 0x19
 1046 011b 03       		.uleb128 0x3
 1047 011c 0E       		.uleb128 0xe
 1048 011d 3A       		.uleb128 0x3a
 1049 011e 0B       		.uleb128 0xb
 1050 011f 3B       		.uleb128 0x3b
 1051 0120 0B       		.uleb128 0xb
 1052 0121 27       		.uleb128 0x27
 1053 0122 19       		.uleb128 0x19
 1054 0123 3C       		.uleb128 0x3c
 1055 0124 19       		.uleb128 0x19
 1056 0125 00       		.byte	0
 1057 0126 00       		.byte	0
 1058 0127 13       		.uleb128 0x13
 1059 0128 05       		.uleb128 0x5
 1060 0129 00       		.byte	0
 1061 012a 49       		.uleb128 0x49
 1062 012b 13       		.uleb128 0x13
 1063 012c 00       		.byte	0
 1064 012d 00       		.byte	0
 1065 012e 00       		.byte	0
 1066              		.section	.debug_loc,"",%progbits
 1067              	.Ldebug_loc0:
 1068              	.LLST0:
 1069 0000 38000000 		.4byte	.LVL10
 1070 0004 45000000 		.4byte	.LVL11-1
 1071 0008 0100     		.2byte	0x1
 1072 000a 50       		.byte	0x50
 1073 000b 00000000 		.4byte	0
 1074 000f 00000000 		.4byte	0
 1075              		.section	.debug_aranges,"",%progbits
 1076 0000 84000000 		.4byte	0x84
 1077 0004 0200     		.2byte	0x2
 1078 0006 00000000 		.4byte	.Ldebug_info0
 1079 000a 04       		.byte	0x4
 1080 000b 00       		.byte	0
 1081 000c 0000     		.2byte	0
 1082 000e 0000     		.2byte	0
 1083 0010 00000000 		.4byte	.LFB2
 1084 0014 02000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 36


 1085 0018 00000000 		.4byte	.LFB3
 1086 001c 02000000 		.4byte	.LFE3-.LFB3
 1087 0020 00000000 		.4byte	.LFB4
 1088 0024 0C000000 		.4byte	.LFE4-.LFB4
 1089 0028 00000000 		.4byte	.LFB5
 1090 002c 14000000 		.4byte	.LFE5-.LFB5
 1091 0030 00000000 		.4byte	.LFB7
 1092 0034 0C000000 		.4byte	.LFE7-.LFB7
 1093 0038 00000000 		.4byte	.LFB8
 1094 003c 0C000000 		.4byte	.LFE8-.LFB8
 1095 0040 00000000 		.4byte	.LFB9
 1096 0044 0C000000 		.4byte	.LFE9-.LFB9
 1097 0048 00000000 		.4byte	.LFB10
 1098 004c 0C000000 		.4byte	.LFE10-.LFB10
 1099 0050 00000000 		.4byte	.LFB11
 1100 0054 0C000000 		.4byte	.LFE11-.LFB11
 1101 0058 00000000 		.4byte	.LFB6
 1102 005c 14000000 		.4byte	.LFE6-.LFB6
 1103 0060 00000000 		.4byte	.LFB1
 1104 0064 54000000 		.4byte	.LFE1-.LFB1
 1105 0068 00000000 		.4byte	.LFB0
 1106 006c 18000000 		.4byte	.LFE0-.LFB0
 1107 0070 00000000 		.4byte	.LFB12
 1108 0074 0C000000 		.4byte	.LFE12-.LFB12
 1109 0078 00000000 		.4byte	.LFB13
 1110 007c 0C000000 		.4byte	.LFE13-.LFB13
 1111 0080 00000000 		.4byte	0
 1112 0084 00000000 		.4byte	0
 1113              		.section	.debug_ranges,"",%progbits
 1114              	.Ldebug_ranges0:
 1115 0000 00000000 		.4byte	.LFB2
 1116 0004 02000000 		.4byte	.LFE2
 1117 0008 00000000 		.4byte	.LFB3
 1118 000c 02000000 		.4byte	.LFE3
 1119 0010 00000000 		.4byte	.LFB4
 1120 0014 0C000000 		.4byte	.LFE4
 1121 0018 00000000 		.4byte	.LFB5
 1122 001c 14000000 		.4byte	.LFE5
 1123 0020 00000000 		.4byte	.LFB7
 1124 0024 0C000000 		.4byte	.LFE7
 1125 0028 00000000 		.4byte	.LFB8
 1126 002c 0C000000 		.4byte	.LFE8
 1127 0030 00000000 		.4byte	.LFB9
 1128 0034 0C000000 		.4byte	.LFE9
 1129 0038 00000000 		.4byte	.LFB10
 1130 003c 0C000000 		.4byte	.LFE10
 1131 0040 00000000 		.4byte	.LFB11
 1132 0044 0C000000 		.4byte	.LFE11
 1133 0048 00000000 		.4byte	.LFB6
 1134 004c 14000000 		.4byte	.LFE6
 1135 0050 00000000 		.4byte	.LFB1
 1136 0054 54000000 		.4byte	.LFE1
 1137 0058 00000000 		.4byte	.LFB0
 1138 005c 18000000 		.4byte	.LFE0
 1139 0060 00000000 		.4byte	.LFB12
 1140 0064 0C000000 		.4byte	.LFE12
 1141 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 37


 1142 006c 0C000000 		.4byte	.LFE13
 1143 0070 00000000 		.4byte	0
 1144 0074 00000000 		.4byte	0
 1145              		.section	.debug_line,"",%progbits
 1146              	.Ldebug_line0:
 1147 0000 61010000 		.section	.debug_str,"MS",%progbits,1
 1147      02005200 
 1147      00000201 
 1147      FB0E0D00 
 1147      01010101 
 1148              	.LASF15:
 1149 0000 72656731 		.ascii	"reg16\000"
 1149      3600
 1150              	.LASF23:
 1151 0006 454E5F42 		.ascii	"EN_B_PWM_WriteCompare\000"
 1151      5F50574D 
 1151      5F577269 
 1151      7465436F 
 1151      6D706172 
 1152              	.LASF25:
 1153 001c 454E5F42 		.ascii	"EN_B_PWM_SetInterruptMode\000"
 1153      5F50574D 
 1153      5F536574 
 1153      496E7465 
 1153      72727570 
 1154              	.LASF22:
 1155 0036 70657269 		.ascii	"period\000"
 1155      6F6400
 1156              	.LASF3:
 1157 003d 73686F72 		.ascii	"short unsigned int\000"
 1157      7420756E 
 1157      7369676E 
 1157      65642069 
 1157      6E7400
 1158              	.LASF20:
 1159 0050 454E5F42 		.ascii	"EN_B_PWM_WritePeriod\000"
 1159      5F50574D 
 1159      5F577269 
 1159      74655065 
 1159      72696F64 
 1160              	.LASF32:
 1161 0065 454E5F42 		.ascii	"EN_B_PWM_Start\000"
 1161      5F50574D 
 1161      5F537461 
 1161      727400
 1162              	.LASF11:
 1163 0074 666C6F61 		.ascii	"float\000"
 1163      7400
 1164              	.LASF21:
 1165 007a 636F756E 		.ascii	"counter\000"
 1165      74657200 
 1166              	.LASF7:
 1167 0082 6C6F6E67 		.ascii	"long long unsigned int\000"
 1167      206C6F6E 
 1167      6720756E 
 1167      7369676E 
 1167      65642069 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 38


 1168              	.LASF1:
 1169 0099 756E7369 		.ascii	"unsigned char\000"
 1169      676E6564 
 1169      20636861 
 1169      7200
 1170              	.LASF31:
 1171 00a7 454E5F42 		.ascii	"EN_B_PWM_Init\000"
 1171      5F50574D 
 1171      5F496E69 
 1171      7400
 1172              	.LASF14:
 1173 00b5 72656738 		.ascii	"reg8\000"
 1173      00
 1174              	.LASF5:
 1175 00ba 6C6F6E67 		.ascii	"long unsigned int\000"
 1175      20756E73 
 1175      69676E65 
 1175      6420696E 
 1175      7400
 1176              	.LASF34:
 1177 00cc 454E5F42 		.ascii	"EN_B_PWM_ReadPeriod\000"
 1177      5F50574D 
 1177      5F526561 
 1177      64506572 
 1177      696F6400 
 1178              	.LASF17:
 1179 00e0 454E5F42 		.ascii	"EN_B_PWM_Enable\000"
 1179      5F50574D 
 1179      5F456E61 
 1179      626C6500 
 1180              	.LASF28:
 1181 00f0 454E5F42 		.ascii	"EN_B_PWM_ReadStatusRegister\000"
 1181      5F50574D 
 1181      5F526561 
 1181      64537461 
 1181      74757352 
 1182              	.LASF12:
 1183 010c 646F7562 		.ascii	"double\000"
 1183      6C6500
 1184              	.LASF10:
 1185 0113 75696E74 		.ascii	"uint16\000"
 1185      313600
 1186              	.LASF40:
 1187 011a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1187      74657243 
 1187      72697469 
 1187      63616C53 
 1187      65637469 
 1188              	.LASF8:
 1189 0131 756E7369 		.ascii	"unsigned int\000"
 1189      676E6564 
 1189      20696E74 
 1189      00
 1190              	.LASF38:
 1191 013e 454E5F42 		.ascii	"EN_B_PWM_interruptState\000"
 1191      5F50574D 
 1191      5F696E74 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 39


 1191      65727275 
 1191      70745374 
 1192              	.LASF41:
 1193 0156 43794578 		.ascii	"CyExitCriticalSection\000"
 1193      69744372 
 1193      69746963 
 1193      616C5365 
 1193      6374696F 
 1194              	.LASF33:
 1195 016c 454E5F42 		.ascii	"EN_B_PWM_ReadCompare\000"
 1195      5F50574D 
 1195      5F526561 
 1195      64436F6D 
 1195      70617265 
 1196              	.LASF18:
 1197 0181 454E5F42 		.ascii	"EN_B_PWM_Stop\000"
 1197      5F50574D 
 1197      5F53746F 
 1197      7000
 1198              	.LASF35:
 1199 018f 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1199      4320342E 
 1199      382E3420 
 1199      32303134 
 1199      30353236 
 1200 01c2 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1200      20726576 
 1200      6973696F 
 1200      6E203231 
 1200      31333538 
 1201 01f5 67202D66 		.ascii	"g -ffunction-sections\000"
 1201      66756E63 
 1201      74696F6E 
 1201      2D736563 
 1201      74696F6E 
 1202              	.LASF16:
 1203 020b 73697A65 		.ascii	"sizetype\000"
 1203      74797065 
 1203      00
 1204              	.LASF29:
 1205 0214 454E5F42 		.ascii	"EN_B_PWM_ReadCapture\000"
 1205      5F50574D 
 1205      5F526561 
 1205      64436170 
 1205      74757265 
 1206              	.LASF19:
 1207 0229 454E5F42 		.ascii	"EN_B_PWM_WriteCounter\000"
 1207      5F50574D 
 1207      5F577269 
 1207      7465436F 
 1207      756E7465 
 1208              	.LASF6:
 1209 023f 6C6F6E67 		.ascii	"long long int\000"
 1209      206C6F6E 
 1209      6720696E 
 1209      7400
 1210              	.LASF26:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 40


 1211 024d 696E7465 		.ascii	"interruptMode\000"
 1211      72727570 
 1211      744D6F64 
 1211      6500
 1212              	.LASF39:
 1213 025b 454E5F42 		.ascii	"EN_B_PWM_initVar\000"
 1213      5F50574D 
 1213      5F696E69 
 1213      74566172 
 1213      00
 1214              	.LASF2:
 1215 026c 73686F72 		.ascii	"short int\000"
 1215      7420696E 
 1215      7400
 1216              	.LASF9:
 1217 0276 75696E74 		.ascii	"uint8\000"
 1217      3800
 1218              	.LASF4:
 1219 027c 6C6F6E67 		.ascii	"long int\000"
 1219      20696E74 
 1219      00
 1220              	.LASF13:
 1221 0285 63686172 		.ascii	"char\000"
 1221      00
 1222              	.LASF37:
 1223 028a 433A5C55 		.ascii	"C:\\Users\\Jorden\\Documents\\PSoC Creator\\Test\\T"
 1223      73657273 
 1223      5C4A6F72 
 1223      64656E5C 
 1223      446F6375 
 1224 02b7 6573742E 		.ascii	"est.cydsn\000"
 1224      63796473 
 1224      6E00
 1225              	.LASF0:
 1226 02c1 7369676E 		.ascii	"signed char\000"
 1226      65642063 
 1226      68617200 
 1227              	.LASF24:
 1228 02cd 636F6D70 		.ascii	"compare\000"
 1228      61726500 
 1229              	.LASF36:
 1230 02d5 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\EN_B_PWM.c\000"
 1230      6E657261 
 1230      7465645F 
 1230      536F7572 
 1230      63655C50 
 1231              	.LASF27:
 1232 02f9 454E5F42 		.ascii	"EN_B_PWM_ReadCounter\000"
 1232      5F50574D 
 1232      5F526561 
 1232      64436F75 
 1232      6E746572 
 1233              	.LASF30:
 1234 030e 454E5F42 		.ascii	"EN_B_PWM_ClearFIFO\000"
 1234      5F50574D 
 1234      5F436C65 
 1234      61724649 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cczJojeh.s 			page 41


 1234      464F00
 1235              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
