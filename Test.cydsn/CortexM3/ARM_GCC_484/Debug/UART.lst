ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	UART_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_Init, %function
  24              	UART_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART.c"
   1:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART.c **** *
   5:.\Generated_Source\PSoC5/UART.c **** * Description:
   6:.\Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART.c **** *
   8:.\Generated_Source\PSoC5/UART.c **** * Note:
   9:.\Generated_Source\PSoC5/UART.c **** *
  10:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART.c **** 
  17:.\Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART.c **** 
  22:.\Generated_Source\PSoC5/UART.c **** 
  23:.\Generated_Source\PSoC5/UART.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART.c **** 
  27:.\Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART.c **** 
  29:.\Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 2


  32:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART.c **** 
  35:.\Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART.c **** 
  48:.\Generated_Source\PSoC5/UART.c **** 
  49:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART.c **** *
  53:.\Generated_Source\PSoC5/UART.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:.\Generated_Source\PSoC5/UART.c **** *
  59:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART.c **** *  None.
  61:.\Generated_Source\PSoC5/UART.c **** *
  62:.\Generated_Source\PSoC5/UART.c **** * Return:
  63:.\Generated_Source\PSoC5/UART.c **** *  None.
  64:.\Generated_Source\PSoC5/UART.c **** *
  65:.\Generated_Source\PSoC5/UART.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:.\Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:.\Generated_Source\PSoC5/UART.c **** *
  72:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART.c **** *  No.
  74:.\Generated_Source\PSoC5/UART.c **** *
  75:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:.\Generated_Source\PSoC5/UART.c **** {
  78:.\Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:.\Generated_Source\PSoC5/UART.c ****     {
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:.\Generated_Source\PSoC5/UART.c ****     }
  84:.\Generated_Source\PSoC5/UART.c **** 
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:.\Generated_Source\PSoC5/UART.c **** }
  87:.\Generated_Source\PSoC5/UART.c **** 
  88:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 3


  89:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART.c **** *
  93:.\Generated_Source\PSoC5/UART.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:.\Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART.c **** *
  99:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART.c **** *  None.
 101:.\Generated_Source\PSoC5/UART.c **** *
 102:.\Generated_Source\PSoC5/UART.c **** * Return:
 103:.\Generated_Source\PSoC5/UART.c **** *  None.
 104:.\Generated_Source\PSoC5/UART.c **** *
 105:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:.\Generated_Source\PSoC5/UART.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 108:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART.c **** 
 110:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
  35              		.loc 1 112 0
  36 0002 0120     		movs	r0, #1
  37 0004 0C49     		ldr	r1, .L2
  38 0006 FFF7FEFF 		bl	CyIntSetVector
  39              	.LVL0:
 113:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
  40              		.loc 1 113 0
  41 000a 0120     		movs	r0, #1
  42 000c 0721     		movs	r1, #7
  43 000e FFF7FEFF 		bl	CyIntSetPriority
  44              	.LVL1:
 114:.\Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
  45              		.loc 1 114 0
  46 0012 0023     		movs	r3, #0
  47 0014 094A     		ldr	r2, .L2+4
  48 0016 1370     		strb	r3, [r2]
 115:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART.c **** 
 117:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART.c **** 
 123:.\Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 4


 124:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  49              		.loc 1 124 0
  50 0018 7221     		movs	r1, #114
  51 001a 094A     		ldr	r2, .L2+8
  52 001c 1170     		strb	r1, [r2]
 125:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  53              		.loc 1 126 0
  54 001e 2021     		movs	r1, #32
  55 0020 043A     		subs	r2, r2, #4
  56 0022 1170     		strb	r1, [r2]
 127:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART.c **** 
 129:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART.c **** 
 136:.\Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  57              		.loc 1 138 0
  58 0024 0621     		movs	r1, #6
  59 0026 5E3A     		subs	r2, r2, #94
  60 0028 1170     		strb	r1, [r2]
 139:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  61              		.loc 1 139 0
  62 002a 4721     		movs	r1, #71
  63 002c 1032     		adds	r2, r2, #16
  64 002e 1170     		strb	r1, [r2]
 140:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART.c ****         #else
 142:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART.c **** 
 146:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART.c ****         #else
 150:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  65              		.loc 1 150 0
  66 0030 4D32     		adds	r2, r2, #77
  67 0032 1370     		strb	r3, [r2]
  68 0034 08BD     		pop	{r3, pc}
  69              	.L3:
  70 0036 00BF     		.align	2
  71              	.L2:
  72 0038 00000000 		.word	UART_RXISR
  73 003c 00000000 		.word	.LANCHOR0
  74 0040 8D640040 		.word	1073767565
  75              		.cfi_endproc
  76              	.LFE1:
  77              		.size	UART_Init, .-UART_Init
  78              		.section	.text.UART_Enable,"ax",%progbits
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 5


  79              		.align	2
  80              		.global	UART_Enable
  81              		.thumb
  82              		.thumb_func
  83              		.type	UART_Enable, %function
  84              	UART_Enable:
  85              	.LFB2:
 151:.\Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART.c **** 
 153:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART.c **** 
 155:.\Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART.c **** }
 161:.\Generated_Source\PSoC5/UART.c **** 
 162:.\Generated_Source\PSoC5/UART.c **** 
 163:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART.c **** *
 167:.\Generated_Source\PSoC5/UART.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:.\Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART.c **** 
 173:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART.c **** *  None.
 175:.\Generated_Source\PSoC5/UART.c **** *
 176:.\Generated_Source\PSoC5/UART.c **** * Return:
 177:.\Generated_Source\PSoC5/UART.c **** *  None.
 178:.\Generated_Source\PSoC5/UART.c **** *
 179:.\Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART.c **** *
 182:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:.\Generated_Source\PSoC5/UART.c **** {
  86              		.loc 1 184 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 10B5     		push	{r4, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  94              		.loc 1 186 0
  95 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  96              	.LVL2:
  97 0006 0446     		mov	r4, r0
  98              	.LVL3:
 187:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 6


 188:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  99              		.loc 1 190 0
 100 0008 0B4B     		ldr	r3, .L5
 101 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 000c 42F02002 		orr	r2, r2, #32
 103 0010 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/UART.c **** 
 192:.\Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 104              		.loc 1 193 0
 105 0012 043B     		subs	r3, r3, #4
 106 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 107 0016 42F01002 		orr	r2, r2, #16
 108 001a 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/UART.c **** 
 195:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 109              		.loc 1 196 0
 110 001c 0222     		movs	r2, #2
 111 001e 074B     		ldr	r3, .L5+4
 112 0020 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/UART.c **** 
 198:.\Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART.c **** 
 204:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART.c **** 
 210:.\Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 113              		.loc 1 211 0
 114 0022 074B     		ldr	r3, .L5+8
 115 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 116 0026 42F01002 		orr	r2, r2, #16
 117 002a 1A70     		strb	r2, [r3]
 212:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART.c **** 
 218:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 118              		.loc 1 219 0
 119 002c FFF7FEFF 		bl	UART_IntClock_Start
 120              	.LVL4:
 220:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART.c **** 
 222:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 7


 121              		.loc 1 222 0
 122 0030 2046     		mov	r0, r4
 123 0032 FFF7FEFF 		bl	CyExitCriticalSection
 124              	.LVL5:
 125 0036 10BD     		pop	{r4, pc}
 126              	.LVL6:
 127              	.L6:
 128              		.align	2
 129              	.L5:
 130 0038 9D640040 		.word	1073767581
 131 003c 00E100E0 		.word	-536813312
 132 0040 98640040 		.word	1073767576
 133              		.cfi_endproc
 134              	.LFE2:
 135              		.size	UART_Enable, .-UART_Enable
 136              		.section	.text.UART_Start,"ax",%progbits
 137              		.align	2
 138              		.global	UART_Start
 139              		.thumb
 140              		.thumb_func
 141              		.type	UART_Start, %function
 142              	UART_Start:
 143              	.LFB0:
  77:.\Generated_Source\PSoC5/UART.c **** {
 144              		.loc 1 77 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 08B5     		push	{r3, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
 152              		.loc 1 79 0
 153 0002 054B     		ldr	r3, .L9
 154 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 155 0006 23B9     		cbnz	r3, .L8
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
 156              		.loc 1 81 0
 157 0008 FFF7FEFF 		bl	UART_Init
 158              	.LVL7:
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 159              		.loc 1 82 0
 160 000c 0122     		movs	r2, #1
 161 000e 024B     		ldr	r3, .L9
 162 0010 5A70     		strb	r2, [r3, #1]
 163              	.L8:
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
 164              		.loc 1 85 0
 165 0012 FFF7FEFF 		bl	UART_Enable
 166              	.LVL8:
 167 0016 08BD     		pop	{r3, pc}
 168              	.L10:
 169              		.align	2
 170              	.L9:
 171 0018 00000000 		.word	.LANCHOR0
 172              		.cfi_endproc
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 8


 173              	.LFE0:
 174              		.size	UART_Start, .-UART_Start
 175              		.section	.text.UART_Stop,"ax",%progbits
 176              		.align	2
 177              		.global	UART_Stop
 178              		.thumb
 179              		.thumb_func
 180              		.type	UART_Stop, %function
 181              	UART_Stop:
 182              	.LFB3:
 223:.\Generated_Source\PSoC5/UART.c **** }
 224:.\Generated_Source\PSoC5/UART.c **** 
 225:.\Generated_Source\PSoC5/UART.c **** 
 226:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART.c **** *
 230:.\Generated_Source\PSoC5/UART.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART.c **** *
 233:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART.c **** *  None.
 235:.\Generated_Source\PSoC5/UART.c **** *
 236:.\Generated_Source\PSoC5/UART.c **** * Return:
 237:.\Generated_Source\PSoC5/UART.c **** *  None.
 238:.\Generated_Source\PSoC5/UART.c **** *
 239:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:.\Generated_Source\PSoC5/UART.c **** {
 183              		.loc 1 241 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 10B5     		push	{r4, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 4, -8
 190              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 191              		.loc 1 243 0
 192 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 193              	.LVL9:
 194 0006 0446     		mov	r4, r0
 195              	.LVL10:
 244:.\Generated_Source\PSoC5/UART.c **** 
 245:.\Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 196              		.loc 1 247 0
 197 0008 0B4B     		ldr	r3, .L12
 198 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 199 000c 02F0DF02 		and	r2, r2, #223
 200 0010 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART.c **** 
 250:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 9


 252:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART.c **** 
 256:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 201              		.loc 1 257 0
 202 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 203              	.LVL11:
 258:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART.c **** 
 260:.\Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 204              		.loc 1 262 0
 205 0016 094B     		ldr	r3, .L12+4
 206 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 207 001a 02F0EF02 		and	r2, r2, #239
 208 001e 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/UART.c **** 
 264:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 209              		.loc 1 265 0
 210 0020 0222     		movs	r2, #2
 211 0022 074B     		ldr	r3, .L12+8
 212 0024 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART.c **** 
 269:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 213              		.loc 1 270 0
 214 0026 074B     		ldr	r3, .L12+12
 215 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 216 002a 02F0EF02 		and	r2, r2, #239
 217 002e 1A70     		strb	r2, [r3]
 271:.\Generated_Source\PSoC5/UART.c **** 
 272:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART.c **** 
 277:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 218              		.loc 1 277 0
 219 0030 2046     		mov	r0, r4
 220 0032 FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL12:
 222 0036 10BD     		pop	{r4, pc}
 223              	.LVL13:
 224              	.L13:
 225              		.align	2
 226              	.L12:
 227 0038 9D640040 		.word	1073767581
 228 003c 99640040 		.word	1073767577
 229 0040 80E100E0 		.word	-536813184
 230 0044 98640040 		.word	1073767576
 231              		.cfi_endproc
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 10


 232              	.LFE3:
 233              		.size	UART_Stop, .-UART_Stop
 234              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 235              		.align	2
 236              		.global	UART_ReadControlRegister
 237              		.thumb
 238              		.thumb_func
 239              		.type	UART_ReadControlRegister, %function
 240              	UART_ReadControlRegister:
 241              	.LFB4:
 278:.\Generated_Source\PSoC5/UART.c **** }
 279:.\Generated_Source\PSoC5/UART.c **** 
 280:.\Generated_Source\PSoC5/UART.c **** 
 281:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART.c **** *
 285:.\Generated_Source\PSoC5/UART.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART.c **** *
 288:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART.c **** *  None.
 290:.\Generated_Source\PSoC5/UART.c **** *
 291:.\Generated_Source\PSoC5/UART.c **** * Return:
 292:.\Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART.c **** *
 294:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART.c **** {
 242              		.loc 1 296 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART.c ****     #else
 300:.\Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART.c **** }
 247              		.loc 1 302 0
 248 0000 0020     		movs	r0, #0
 249 0002 7047     		bx	lr
 250              		.cfi_endproc
 251              	.LFE4:
 252              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 253              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 254              		.align	2
 255              		.global	UART_WriteControlRegister
 256              		.thumb
 257              		.thumb_func
 258              		.type	UART_WriteControlRegister, %function
 259              	UART_WriteControlRegister:
 260              	.LFB5:
 303:.\Generated_Source\PSoC5/UART.c **** 
 304:.\Generated_Source\PSoC5/UART.c **** 
 305:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 11


 306:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART.c **** *
 309:.\Generated_Source\PSoC5/UART.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART.c **** *
 312:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART.c **** *
 315:.\Generated_Source\PSoC5/UART.c **** * Return:
 316:.\Generated_Source\PSoC5/UART.c **** *  None.
 317:.\Generated_Source\PSoC5/UART.c **** *
 318:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART.c **** {
 261              		.loc 1 320 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL14:
 267 0000 7047     		bx	lr
 268              		.cfi_endproc
 269              	.LFE5:
 270              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 271 0002 00BF     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 272              		.align	2
 273              		.global	UART_SetRxInterruptMode
 274              		.thumb
 275              		.thumb_func
 276              		.type	UART_SetRxInterruptMode, %function
 277              	UART_SetRxInterruptMode:
 278              	.LFB6:
 321:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART.c ****         {
 324:.\Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART.c ****         }
 326:.\Generated_Source\PSoC5/UART.c ****     #else
 327:.\Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART.c **** }
 330:.\Generated_Source\PSoC5/UART.c **** 
 331:.\Generated_Source\PSoC5/UART.c **** 
 332:.\Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART.c ****     *
 337:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART.c ****     *
 340:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 12


 345:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART.c ****     *
 352:.\Generated_Source\PSoC5/UART.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART.c ****     *
 355:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART.c ****     *
 358:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART.c ****     {
 279              		.loc 1 360 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LVL15:
 361:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 285              		.loc 1 361 0
 286 0000 014B     		ldr	r3, .L17
 287 0002 1870     		strb	r0, [r3]
 288 0004 7047     		bx	lr
 289              	.L18:
 290 0006 00BF     		.align	2
 291              	.L17:
 292 0008 89640040 		.word	1073767561
 293              		.cfi_endproc
 294              	.LFE6:
 295              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 296              		.section	.text.UART_ReadRxData,"ax",%progbits
 297              		.align	2
 298              		.global	UART_ReadRxData
 299              		.thumb
 300              		.thumb_func
 301              		.type	UART_ReadRxData, %function
 302              	UART_ReadRxData:
 303              	.LFB7:
 362:.\Generated_Source\PSoC5/UART.c ****     }
 363:.\Generated_Source\PSoC5/UART.c **** 
 364:.\Generated_Source\PSoC5/UART.c **** 
 365:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART.c ****     *
 369:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART.c ****     *
 373:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART.c ****     *
 376:.\Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 13


 377:.\Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART.c ****     *
 379:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART.c ****     *
 388:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART.c ****     *
 391:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART.c ****     {
 304              		.loc 1 393 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 394:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART.c **** 
 396:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART.c **** 
 398:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART.c **** 
 401:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 309              		.loc 1 402 0
 310 0000 0222     		movs	r2, #2
 311 0002 134B     		ldr	r3, .L25
 312 0004 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/UART.c **** 
 404:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 313              		.loc 1 404 0
 314 0006 134B     		ldr	r3, .L25+4
 315 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 316 000a D2B2     		uxtb	r2, r2
 317              	.LVL16:
 405:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 318              		.loc 1 405 0
 319 000c D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 320 000e C9B2     		uxtb	r1, r1
 321              	.LVL17:
 406:.\Generated_Source\PSoC5/UART.c **** 
 407:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 322              		.loc 1 407 0
 323 0010 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 324 0012 13F0FF0F 		tst	r3, #255
 325 0016 01D1     		bne	.L20
 326              		.loc 1 407 0 is_stmt 0 discriminator 1
 327 0018 8A42     		cmp	r2, r1
 328 001a 11D0     		beq	.L21
 329              	.L20:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 14


 408:.\Generated_Source\PSoC5/UART.c ****         {
 409:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 330              		.loc 1 409 0 is_stmt 1
 331 001c 0E4B     		ldr	r3, .L25+8
 332 001e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 333 0020 C0B2     		uxtb	r0, r0
 334              	.LVL18:
 410:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 335              		.loc 1 410 0
 336 0022 0132     		adds	r2, r2, #1
 337              	.LVL19:
 338 0024 D2B2     		uxtb	r2, r2
 339              	.LVL20:
 411:.\Generated_Source\PSoC5/UART.c **** 
 412:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 340              		.loc 1 412 0
 341 0026 082A     		cmp	r2, #8
 342 0028 00D9     		bls	.L22
 413:.\Generated_Source\PSoC5/UART.c ****             {
 414:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 343              		.loc 1 414 0
 344 002a 0022     		movs	r2, #0
 345              	.LVL21:
 346              	.L22:
 415:.\Generated_Source\PSoC5/UART.c ****             }
 416:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 347              		.loc 1 417 0
 348 002c 094B     		ldr	r3, .L25+4
 349 002e 9A70     		strb	r2, [r3, #2]
 418:.\Generated_Source\PSoC5/UART.c **** 
 419:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 350              		.loc 1 419 0
 351 0030 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 352 0032 13F0FF0F 		tst	r3, #255
 353 0036 06D0     		beq	.L23
 420:.\Generated_Source\PSoC5/UART.c ****             {
 421:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 354              		.loc 1 421 0
 355 0038 0022     		movs	r2, #0
 356              	.LVL22:
 357 003a 064B     		ldr	r3, .L25+4
 358 003c 1A71     		strb	r2, [r3, #4]
 359 003e 02E0     		b	.L23
 360              	.LVL23:
 361              	.L21:
 422:.\Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART.c ****                             */
 430:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART.c ****                         }
 432:.\Generated_Source\PSoC5/UART.c ****                     #else
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 15


 433:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART.c ****             }
 437:.\Generated_Source\PSoC5/UART.c ****         }
 438:.\Generated_Source\PSoC5/UART.c ****         else
 439:.\Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 362              		.loc 1 440 0
 363 0040 064B     		ldr	r3, .L25+12
 364 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 365 0044 C0B2     		uxtb	r0, r0
 366              	.LVL24:
 367              	.L23:
 441:.\Generated_Source\PSoC5/UART.c ****         }
 442:.\Generated_Source\PSoC5/UART.c **** 
 443:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 368              		.loc 1 443 0
 369 0046 0222     		movs	r2, #2
 370 0048 054B     		ldr	r3, .L25+16
 371 004a 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/UART.c **** 
 445:.\Generated_Source\PSoC5/UART.c ****     #else
 446:.\Generated_Source\PSoC5/UART.c **** 
 447:.\Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 449:.\Generated_Source\PSoC5/UART.c **** 
 450:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART.c **** 
 452:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART.c ****     }
 372              		.loc 1 453 0
 373 004c 7047     		bx	lr
 374              	.L26:
 375 004e 00BF     		.align	2
 376              	.L25:
 377 0050 80E100E0 		.word	-536813184
 378 0054 00000000 		.word	.LANCHOR0
 379 0058 00000000 		.word	UART_rxBuffer
 380 005c 49640040 		.word	1073767497
 381 0060 00E100E0 		.word	-536813312
 382              		.cfi_endproc
 383              	.LFE7:
 384              		.size	UART_ReadRxData, .-UART_ReadRxData
 385              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 386              		.align	2
 387              		.global	UART_ReadRxStatus
 388              		.thumb
 389              		.thumb_func
 390              		.type	UART_ReadRxStatus, %function
 391              	UART_ReadRxStatus:
 392              	.LFB8:
 454:.\Generated_Source\PSoC5/UART.c **** 
 455:.\Generated_Source\PSoC5/UART.c **** 
 456:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 16


 459:.\Generated_Source\PSoC5/UART.c ****     *
 460:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART.c ****     *
 464:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART.c ****     *
 467:.\Generated_Source\PSoC5/UART.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART.c ****     *
 470:.\Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART.c ****     *
 476:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART.c ****     *
 484:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART.c ****     {
 393              		.loc 1 486 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 487:.\Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART.c **** 
 489:.\Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 398              		.loc 1 489 0
 399 0000 074B     		ldr	r3, .L29
 400 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 401 0004 00F07F00 		and	r0, r0, #127
 402              	.LVL25:
 490:.\Generated_Source\PSoC5/UART.c **** 
 491:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 403              		.loc 1 492 0
 404 0008 064B     		ldr	r3, .L29+4
 405 000a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 406 000c 13F0FF0F 		tst	r3, #255
 407 0010 04D0     		beq	.L28
 493:.\Generated_Source\PSoC5/UART.c ****         {
 494:.\Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 408              		.loc 1 494 0
 409 0012 40F08000 		orr	r0, r0, #128
 410              	.LVL26:
 495:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 411              		.loc 1 495 0
 412 0016 0022     		movs	r2, #0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 17


 413 0018 024B     		ldr	r3, .L29+4
 414 001a 5A71     		strb	r2, [r3, #5]
 415              	.LVL27:
 416              	.L28:
 496:.\Generated_Source\PSoC5/UART.c ****         }
 497:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART.c **** 
 499:.\Generated_Source\PSoC5/UART.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART.c ****     }
 417              		.loc 1 500 0
 418 001c 7047     		bx	lr
 419              	.L30:
 420 001e 00BF     		.align	2
 421              	.L29:
 422 0020 69640040 		.word	1073767529
 423 0024 00000000 		.word	.LANCHOR0
 424              		.cfi_endproc
 425              	.LFE8:
 426              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 427              		.section	.text.UART_GetChar,"ax",%progbits
 428              		.align	2
 429              		.global	UART_GetChar
 430              		.thumb
 431              		.thumb_func
 432              		.type	UART_GetChar, %function
 433              	UART_GetChar:
 434              	.LFB9:
 501:.\Generated_Source\PSoC5/UART.c **** 
 502:.\Generated_Source\PSoC5/UART.c **** 
 503:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART.c ****     *
 507:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:.\Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART.c ****     *
 512:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART.c ****     *
 515:.\Generated_Source\PSoC5/UART.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART.c ****     *
 519:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART.c ****     *
 528:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 18


 531:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART.c ****     {
 435              		.loc 1 533 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440              	.LVL28:
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART.c **** 
 537:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART.c **** 
 541:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 441              		.loc 1 542 0
 442 0000 0222     		movs	r2, #2
 443 0002 194B     		ldr	r3, .L39
 444 0004 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/UART.c **** 
 544:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 445              		.loc 1 544 0
 446 0006 194B     		ldr	r3, .L39+4
 447 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 448 000a D2B2     		uxtb	r2, r2
 449              	.LVL29:
 545:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 450              		.loc 1 545 0
 451 000c D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 452 000e C9B2     		uxtb	r1, r1
 453              	.LVL30:
 546:.\Generated_Source\PSoC5/UART.c **** 
 547:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 454              		.loc 1 547 0
 455 0010 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 456 0012 13F0FF0F 		tst	r3, #255
 457 0016 01D1     		bne	.L32
 458              		.loc 1 547 0 is_stmt 0 discriminator 1
 459 0018 8A42     		cmp	r2, r1
 460 001a 11D0     		beq	.L33
 461              	.L32:
 548:.\Generated_Source\PSoC5/UART.c ****         {
 549:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 462              		.loc 1 549 0 is_stmt 1
 463 001c 144B     		ldr	r3, .L39+8
 464 001e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 465 0020 C0B2     		uxtb	r0, r0
 466              	.LVL31:
 550:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 467              		.loc 1 550 0
 468 0022 0132     		adds	r2, r2, #1
 469              	.LVL32:
 470 0024 D2B2     		uxtb	r2, r2
 471              	.LVL33:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 19


 551:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 472              		.loc 1 551 0
 473 0026 082A     		cmp	r2, #8
 474 0028 00D9     		bls	.L34
 552:.\Generated_Source\PSoC5/UART.c ****             {
 553:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 475              		.loc 1 553 0
 476 002a 0022     		movs	r2, #0
 477              	.LVL34:
 478              	.L34:
 554:.\Generated_Source\PSoC5/UART.c ****             }
 555:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 479              		.loc 1 556 0
 480 002c 0F4B     		ldr	r3, .L39+4
 481 002e 9A70     		strb	r2, [r3, #2]
 557:.\Generated_Source\PSoC5/UART.c **** 
 558:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 482              		.loc 1 558 0
 483 0030 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 484 0032 13F0FF0F 		tst	r3, #255
 485 0036 13D0     		beq	.L35
 559:.\Generated_Source\PSoC5/UART.c ****             {
 560:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 486              		.loc 1 560 0
 487 0038 0022     		movs	r2, #0
 488              	.LVL35:
 489 003a 0C4B     		ldr	r3, .L39+4
 490 003c 1A71     		strb	r2, [r3, #4]
 491 003e 0FE0     		b	.L35
 492              	.LVL36:
 493              	.L33:
 561:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART.c ****                             */
 569:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART.c ****                         }
 571:.\Generated_Source\PSoC5/UART.c ****                     #else
 572:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART.c ****             }
 576:.\Generated_Source\PSoC5/UART.c **** 
 577:.\Generated_Source\PSoC5/UART.c ****         }
 578:.\Generated_Source\PSoC5/UART.c ****         else
 579:.\Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 494              		.loc 1 579 0
 495 0040 0C4B     		ldr	r3, .L39+12
 496 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 0044 DBB2     		uxtb	r3, r3
 498              	.LVL37:
 580:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 20


 499              		.loc 1 580 0
 500 0046 13F0200F 		tst	r3, #32
 501 004a 06D0     		beq	.L37
 581:.\Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 502              		.loc 1 582 0
 503 004c 0A4A     		ldr	r2, .L39+16
 504              	.LVL38:
 505 004e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 506 0050 C0B2     		uxtb	r0, r0
 507              	.LVL39:
 583:.\Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 508              		.loc 1 584 0
 509 0052 13F01E0F 		tst	r3, #30
 510 0056 02D1     		bne	.L38
 511 0058 02E0     		b	.L35
 512              	.LVL40:
 513              	.L37:
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 514              		.loc 1 534 0
 515 005a 0020     		movs	r0, #0
 516 005c 00E0     		b	.L35
 517              	.LVL41:
 518              	.L38:
 585:.\Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART.c ****                 {
 587:.\Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 519              		.loc 1 587 0
 520 005e 0020     		movs	r0, #0
 521              	.LVL42:
 522              	.L35:
 588:.\Generated_Source\PSoC5/UART.c ****                 }
 589:.\Generated_Source\PSoC5/UART.c ****             }
 590:.\Generated_Source\PSoC5/UART.c ****         }
 591:.\Generated_Source\PSoC5/UART.c **** 
 592:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 523              		.loc 1 592 0
 524 0060 0222     		movs	r2, #2
 525 0062 064B     		ldr	r3, .L39+20
 526 0064 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/UART.c **** 
 594:.\Generated_Source\PSoC5/UART.c ****     #else
 595:.\Generated_Source\PSoC5/UART.c **** 
 596:.\Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/UART.c ****         {
 599:.\Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 601:.\Generated_Source\PSoC5/UART.c **** 
 602:.\Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART.c ****             {
 606:.\Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/UART.c ****             }
 608:.\Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 21


 609:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART.c **** 
 611:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART.c ****     }
 527              		.loc 1 612 0
 528 0066 7047     		bx	lr
 529              	.L40:
 530              		.align	2
 531              	.L39:
 532 0068 80E100E0 		.word	-536813184
 533 006c 00000000 		.word	.LANCHOR0
 534 0070 00000000 		.word	UART_rxBuffer
 535 0074 69640040 		.word	1073767529
 536 0078 49640040 		.word	1073767497
 537 007c 00E100E0 		.word	-536813312
 538              		.cfi_endproc
 539              	.LFE9:
 540              		.size	UART_GetChar, .-UART_GetChar
 541              		.section	.text.UART_GetByte,"ax",%progbits
 542              		.align	2
 543              		.global	UART_GetByte
 544              		.thumb
 545              		.thumb_func
 546              		.type	UART_GetByte, %function
 547              	UART_GetByte:
 548              	.LFB10:
 613:.\Generated_Source\PSoC5/UART.c **** 
 614:.\Generated_Source\PSoC5/UART.c **** 
 615:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART.c ****     *
 619:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART.c ****     *
 623:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART.c ****     *
 626:.\Generated_Source\PSoC5/UART.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART.c ****     *
 630:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART.c ****     *
 633:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART.c ****     {
 549              		.loc 1 635 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553 0000 10B5     		push	{r4, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 22


 636:.\Generated_Source\PSoC5/UART.c ****         
 637:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 557              		.loc 1 640 0
 558 0002 0223     		movs	r3, #2
 559 0004 064A     		ldr	r2, .L42
 560 0006 1360     		str	r3, [r2]
 641:.\Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 561              		.loc 1 641 0
 562 0008 064A     		ldr	r2, .L42+4
 563 000a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 564              	.LVL43:
 642:.\Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 565              		.loc 1 642 0
 566 000c 0021     		movs	r1, #0
 567 000e 1170     		strb	r1, [r2]
 643:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 568              		.loc 1 643 0
 569 0010 054A     		ldr	r2, .L42+8
 570 0012 1360     		str	r3, [r2]
 644:.\Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 571              		.loc 1 644 0
 572 0014 2402     		lsls	r4, r4, #8
 573              	.LVL44:
 574 0016 FFF7FEFF 		bl	UART_ReadRxData
 575              	.LVL45:
 576 001a 2043     		orrs	r0, r0, r4
 645:.\Generated_Source\PSoC5/UART.c ****     #else
 646:.\Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART.c ****         
 649:.\Generated_Source\PSoC5/UART.c ****     }
 577              		.loc 1 649 0
 578 001c 80B2     		uxth	r0, r0
 579 001e 10BD     		pop	{r4, pc}
 580              	.L43:
 581              		.align	2
 582              	.L42:
 583 0020 80E100E0 		.word	-536813184
 584 0024 00000000 		.word	.LANCHOR0
 585 0028 00E100E0 		.word	-536813312
 586              		.cfi_endproc
 587              	.LFE10:
 588              		.size	UART_GetByte, .-UART_GetByte
 589              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 590              		.align	2
 591              		.global	UART_GetRxBufferSize
 592              		.thumb
 593              		.thumb_func
 594              		.type	UART_GetRxBufferSize, %function
 595              	UART_GetRxBufferSize:
 596              	.LFB11:
 650:.\Generated_Source\PSoC5/UART.c **** 
 651:.\Generated_Source\PSoC5/UART.c **** 
 652:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 23


 653:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART.c ****     *
 656:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART.c ****     *
 664:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART.c ****     *
 667:.\Generated_Source\PSoC5/UART.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART.c ****     *
 671:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART.c ****     *
 676:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART.c ****     *
 679:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART.c ****     *
 682:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART.c ****                                                             
 685:.\Generated_Source\PSoC5/UART.c ****     {
 597              		.loc 1 685 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 686:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART.c **** 
 688:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART.c **** 
 690:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 602              		.loc 1 691 0
 603 0000 0222     		movs	r2, #2
 604 0002 134B     		ldr	r3, .L49
 605 0004 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/UART.c **** 
 693:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 606              		.loc 1 693 0
 607 0006 134B     		ldr	r3, .L49+4
 608 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 609 000a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 610 000c D2B2     		uxtb	r2, r2
 611 000e 9A42     		cmp	r2, r3
 612 0010 06D1     		bne	.L45
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 24


 694:.\Generated_Source\PSoC5/UART.c ****         {
 695:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 613              		.loc 1 695 0
 614 0012 104B     		ldr	r3, .L49+4
 615 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 616 0016 13F0FF0F 		tst	r3, #255
 617 001a 14D0     		beq	.L48
 696:.\Generated_Source\PSoC5/UART.c ****             {
 697:.\Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 618              		.loc 1 697 0
 619 001c 0920     		movs	r0, #9
 620 001e 13E0     		b	.L46
 621              	.L45:
 698:.\Generated_Source\PSoC5/UART.c ****             }
 699:.\Generated_Source\PSoC5/UART.c ****             else
 700:.\Generated_Source\PSoC5/UART.c ****             {
 701:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART.c ****             }
 703:.\Generated_Source\PSoC5/UART.c ****         }
 704:.\Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 622              		.loc 1 704 0
 623 0020 0C4B     		ldr	r3, .L49+4
 624 0022 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 625 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 626 0026 D2B2     		uxtb	r2, r2
 627 0028 9A42     		cmp	r2, r3
 628 002a 05D2     		bcs	.L47
 705:.\Generated_Source\PSoC5/UART.c ****         {
 706:.\Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 629              		.loc 1 706 0
 630 002c 094B     		ldr	r3, .L49+4
 631 002e D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 632 0030 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 633 0032 C01A     		subs	r0, r0, r3
 634 0034 C0B2     		uxtb	r0, r0
 635              	.LVL46:
 636 0036 07E0     		b	.L46
 637              	.LVL47:
 638              	.L47:
 707:.\Generated_Source\PSoC5/UART.c ****         }
 708:.\Generated_Source\PSoC5/UART.c ****         else
 709:.\Generated_Source\PSoC5/UART.c ****         {
 710:.\Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 639              		.loc 1 710 0
 640 0038 064B     		ldr	r3, .L49+4
 641 003a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 642 003c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 643 003e C01A     		subs	r0, r0, r3
 644 0040 0930     		adds	r0, r0, #9
 645 0042 C0B2     		uxtb	r0, r0
 646              	.LVL48:
 647 0044 00E0     		b	.L46
 648              	.LVL49:
 649              	.L48:
 701:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
 650              		.loc 1 701 0
 651 0046 0020     		movs	r0, #0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 25


 652              	.L46:
 653              	.LVL50:
 711:.\Generated_Source\PSoC5/UART.c ****         }
 712:.\Generated_Source\PSoC5/UART.c **** 
 713:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 654              		.loc 1 713 0
 655 0048 0222     		movs	r2, #2
 656 004a 034B     		ldr	r3, .L49+8
 657 004c 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/UART.c **** 
 715:.\Generated_Source\PSoC5/UART.c ****     #else
 716:.\Generated_Source\PSoC5/UART.c **** 
 717:.\Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/UART.c **** 
 720:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART.c **** 
 722:.\Generated_Source\PSoC5/UART.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART.c ****     }
 658              		.loc 1 723 0
 659 004e 7047     		bx	lr
 660              	.L50:
 661              		.align	2
 662              	.L49:
 663 0050 80E100E0 		.word	-536813184
 664 0054 00000000 		.word	.LANCHOR0
 665 0058 00E100E0 		.word	-536813312
 666              		.cfi_endproc
 667              	.LFE11:
 668              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 669              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 670              		.align	2
 671              		.global	UART_ClearRxBuffer
 672              		.thumb
 673              		.thumb_func
 674              		.type	UART_ClearRxBuffer, %function
 675              	UART_ClearRxBuffer:
 676              	.LFB12:
 724:.\Generated_Source\PSoC5/UART.c **** 
 725:.\Generated_Source\PSoC5/UART.c **** 
 726:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART.c ****     *
 730:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART.c ****     *
 733:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART.c ****     *
 736:.\Generated_Source\PSoC5/UART.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART.c ****     *
 739:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 26


 743:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART.c ****     *
 745:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART.c ****     *
 748:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART.c ****     *
 753:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART.c ****     *
 756:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART.c ****     {
 677              		.loc 1 758 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681 0000 08B5     		push	{r3, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 3, -8
 684              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART.c **** 
 761:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 685              		.loc 1 762 0
 686 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 687              	.LVL51:
 763:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 688              		.loc 1 763 0
 689 0006 0B4B     		ldr	r3, .L52
 690 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 691 000a 42F00102 		orr	r2, r2, #1
 692 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 693              		.loc 1 764 0
 694 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 695 0012 02F0FE02 		and	r2, r2, #254
 696 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 697              		.loc 1 765 0
 698 0018 FFF7FEFF 		bl	CyExitCriticalSection
 699              	.LVL52:
 766:.\Generated_Source\PSoC5/UART.c **** 
 767:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART.c **** 
 769:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 700              		.loc 1 770 0
 701 001c 0221     		movs	r1, #2
 702 001e 064B     		ldr	r3, .L52+4
 703 0020 1960     		str	r1, [r3]
 771:.\Generated_Source\PSoC5/UART.c **** 
 772:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 27


 704              		.loc 1 772 0
 705 0022 064B     		ldr	r3, .L52+8
 706 0024 0022     		movs	r2, #0
 707 0026 9A70     		strb	r2, [r3, #2]
 773:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 708              		.loc 1 773 0
 709 0028 DA70     		strb	r2, [r3, #3]
 774:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 710              		.loc 1 774 0
 711 002a 1A71     		strb	r2, [r3, #4]
 775:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 712              		.loc 1 775 0
 713 002c 5A71     		strb	r2, [r3, #5]
 776:.\Generated_Source\PSoC5/UART.c **** 
 777:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714              		.loc 1 777 0
 715 002e 044B     		ldr	r3, .L52+12
 716 0030 1960     		str	r1, [r3]
 717 0032 08BD     		pop	{r3, pc}
 718              	.L53:
 719              		.align	2
 720              	.L52:
 721 0034 99640040 		.word	1073767577
 722 0038 80E100E0 		.word	-536813184
 723 003c 00000000 		.word	.LANCHOR0
 724 0040 00E100E0 		.word	-536813312
 725              		.cfi_endproc
 726              	.LFE12:
 727              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 728              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 729              		.align	2
 730              		.global	UART_SetRxAddressMode
 731              		.thumb
 732              		.thumb_func
 733              		.type	UART_SetRxAddressMode, %function
 734              	UART_SetRxAddressMode:
 735              	.LFB13:
 778:.\Generated_Source\PSoC5/UART.c **** 
 779:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART.c **** 
 781:.\Generated_Source\PSoC5/UART.c ****     }
 782:.\Generated_Source\PSoC5/UART.c **** 
 783:.\Generated_Source\PSoC5/UART.c **** 
 784:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART.c ****     *
 788:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART.c ****     *
 792:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 28


 798:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART.c ****     *
 804:.\Generated_Source\PSoC5/UART.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART.c ****     *
 807:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART.c ****     *
 812:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART.c ****                                                         
 815:.\Generated_Source\PSoC5/UART.c ****     {
 736              		.loc 1 815 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741              	.LVL53:
 742 0000 7047     		bx	lr
 743              		.cfi_endproc
 744              	.LFE13:
 745              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 746 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 747              		.align	2
 748              		.global	UART_SetRxAddress1
 749              		.thumb
 750              		.thumb_func
 751              		.type	UART_SetRxAddress1, %function
 752              	UART_SetRxAddress1:
 753              	.LFB14:
 816:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART.c ****                 {
 820:.\Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART.c ****                 }
 822:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART.c **** 
 828:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 29


 837:.\Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART.c ****             }
 839:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART.c ****     }
 841:.\Generated_Source\PSoC5/UART.c **** 
 842:.\Generated_Source\PSoC5/UART.c **** 
 843:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART.c ****     *
 847:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART.c ****     *
 850:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART.c ****     *
 853:.\Generated_Source\PSoC5/UART.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART.c ****     *
 856:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART.c ****     {
 754              		.loc 1 858 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759              	.LVL54:
 859:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 760              		.loc 1 859 0
 761 0000 014B     		ldr	r3, .L56
 762 0002 1870     		strb	r0, [r3]
 763 0004 7047     		bx	lr
 764              	.L57:
 765 0006 00BF     		.align	2
 766              	.L56:
 767 0008 29640040 		.word	1073767465
 768              		.cfi_endproc
 769              	.LFE14:
 770              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 771              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 772              		.align	2
 773              		.global	UART_SetRxAddress2
 774              		.thumb
 775              		.thumb_func
 776              		.type	UART_SetRxAddress2, %function
 777              	UART_SetRxAddress2:
 778              	.LFB15:
 860:.\Generated_Source\PSoC5/UART.c ****     }
 861:.\Generated_Source\PSoC5/UART.c **** 
 862:.\Generated_Source\PSoC5/UART.c **** 
 863:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART.c ****     *
 867:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 30


 869:.\Generated_Source\PSoC5/UART.c ****     *
 870:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART.c ****     *
 873:.\Generated_Source\PSoC5/UART.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART.c ****     *
 876:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART.c ****     {
 779              		.loc 1 878 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784              	.LVL55:
 879:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 785              		.loc 1 879 0
 786 0000 014B     		ldr	r3, .L59
 787 0002 1870     		strb	r0, [r3]
 788 0004 7047     		bx	lr
 789              	.L60:
 790 0006 00BF     		.align	2
 791              	.L59:
 792 0008 39640040 		.word	1073767481
 793              		.cfi_endproc
 794              	.LFE15:
 795              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 796              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 797              		.align	2
 798              		.global	UART_SetTxInterruptMode
 799              		.thumb
 800              		.thumb_func
 801              		.type	UART_SetTxInterruptMode, %function
 802              	UART_SetTxInterruptMode:
 803              	.LFB16:
 880:.\Generated_Source\PSoC5/UART.c ****     }
 881:.\Generated_Source\PSoC5/UART.c **** 
 882:.\Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART.c **** 
 884:.\Generated_Source\PSoC5/UART.c **** 
 885:.\Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART.c ****     *
 890:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART.c ****     *
 894:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 31


 901:.\Generated_Source\PSoC5/UART.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART.c ****     *
 904:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART.c ****     *
 907:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART.c ****     {
 804              		.loc 1 909 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              	.LVL56:
 910:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 810              		.loc 1 910 0
 811 0000 014B     		ldr	r3, .L62
 812 0002 1870     		strb	r0, [r3]
 813 0004 7047     		bx	lr
 814              	.L63:
 815 0006 00BF     		.align	2
 816              	.L62:
 817 0008 88640040 		.word	1073767560
 818              		.cfi_endproc
 819              	.LFE16:
 820              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 821              		.section	.text.UART_WriteTxData,"ax",%progbits
 822              		.align	2
 823              		.global	UART_WriteTxData
 824              		.thumb
 825              		.thumb_func
 826              		.type	UART_WriteTxData, %function
 827              	UART_WriteTxData:
 828              	.LFB17:
 911:.\Generated_Source\PSoC5/UART.c ****     }
 912:.\Generated_Source\PSoC5/UART.c **** 
 913:.\Generated_Source\PSoC5/UART.c **** 
 914:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART.c ****     *
 918:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART.c ****     *
 923:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART.c ****     *
 926:.\Generated_Source\PSoC5/UART.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART.c ****     * None.
 928:.\Generated_Source\PSoC5/UART.c ****     *
 929:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 32


 933:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART.c ****     *
 938:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART.c ****     *
 941:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART.c ****     {
 829              		.loc 1 943 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834              	.LVL57:
 944:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 835              		.loc 1 945 0
 836 0000 024B     		ldr	r3, .L66
 837 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 838 0004 0BB1     		cbz	r3, .L64
 946:.\Generated_Source\PSoC5/UART.c ****         {
 947:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART.c **** 
 949:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART.c **** 
 952:.\Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART.c ****             {
 955:.\Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART.c ****             }
 958:.\Generated_Source\PSoC5/UART.c ****             else
 959:.\Generated_Source\PSoC5/UART.c ****             {
 960:.\Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART.c ****                 {
 962:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART.c ****                 }
 964:.\Generated_Source\PSoC5/UART.c **** 
 965:.\Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART.c **** 
 967:.\Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART.c ****             }
 970:.\Generated_Source\PSoC5/UART.c **** 
 971:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART.c **** 
 973:.\Generated_Source\PSoC5/UART.c ****         #else
 974:.\Generated_Source\PSoC5/UART.c **** 
 975:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 839              		.loc 1 976 0
 840 0006 024B     		ldr	r3, .L66+4
 841 0008 1870     		strb	r0, [r3]
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 33


 842              	.L64:
 843 000a 7047     		bx	lr
 844              	.L67:
 845              		.align	2
 846              	.L66:
 847 000c 00000000 		.word	.LANCHOR0
 848 0010 48640040 		.word	1073767496
 849              		.cfi_endproc
 850              	.LFE17:
 851              		.size	UART_WriteTxData, .-UART_WriteTxData
 852              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 853              		.align	2
 854              		.global	UART_ReadTxStatus
 855              		.thumb
 856              		.thumb_func
 857              		.type	UART_ReadTxStatus, %function
 858              	UART_ReadTxStatus:
 859              	.LFB18:
 977:.\Generated_Source\PSoC5/UART.c **** 
 978:.\Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART.c ****         }
 980:.\Generated_Source\PSoC5/UART.c ****     }
 981:.\Generated_Source\PSoC5/UART.c **** 
 982:.\Generated_Source\PSoC5/UART.c **** 
 983:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART.c ****     *
 987:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART.c ****     *
 990:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART.c ****     *
 993:.\Generated_Source\PSoC5/UART.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART.c ****     *
 996:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART.c ****     *
1002:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART.c ****     {
 860              		.loc 1 1004 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 865              		.loc 1 1005 0
 866 0000 014B     		ldr	r3, .L69
 867 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/UART.c ****     }
 868              		.loc 1 1006 0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 34


 869 0004 7047     		bx	lr
 870              	.L70:
 871 0006 00BF     		.align	2
 872              	.L69:
 873 0008 68640040 		.word	1073767528
 874              		.cfi_endproc
 875              	.LFE18:
 876              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 877              		.section	.text.UART_PutChar,"ax",%progbits
 878              		.align	2
 879              		.global	UART_PutChar
 880              		.thumb
 881              		.thumb_func
 882              		.type	UART_PutChar, %function
 883              	UART_PutChar:
 884              	.LFB19:
1007:.\Generated_Source\PSoC5/UART.c **** 
1008:.\Generated_Source\PSoC5/UART.c **** 
1009:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART.c ****     *
1013:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART.c ****     *
1018:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART.c ****     *
1021:.\Generated_Source\PSoC5/UART.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART.c ****     *
1024:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART.c ****     *
1034:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART.c ****     *
1037:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART.c ****     *
1040:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART.c ****     {
 885              		.loc 1 1042 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		@ link register save eliminated.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 35


 890              	.LVL58:
1043:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART.c ****         */
1048:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART.c **** 
1051:.\Generated_Source\PSoC5/UART.c ****         do
1052:.\Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART.c **** 
1054:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART.c **** 
1059:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:.\Generated_Source\PSoC5/UART.c **** 
1062:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART.c ****         }
1067:.\Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART.c **** 
1071:.\Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART.c ****         {
1074:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART.c ****         }
1077:.\Generated_Source\PSoC5/UART.c ****         else
1078:.\Generated_Source\PSoC5/UART.c ****         {
1079:.\Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART.c ****             {
1081:.\Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART.c ****             }
1083:.\Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART.c **** 
1087:.\Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART.c **** 
1092:.\Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART.c **** 
1094:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART.c **** 
1098:.\Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 36


1099:.\Generated_Source\PSoC5/UART.c ****             {
1100:.\Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART.c ****             }
1103:.\Generated_Source\PSoC5/UART.c ****         }
1104:.\Generated_Source\PSoC5/UART.c **** 
1105:.\Generated_Source\PSoC5/UART.c ****     #else
1106:.\Generated_Source\PSoC5/UART.c **** 
1107:.\Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 891              		.loc 1 1107 0
 892 0000 034A     		ldr	r2, .L74
 893              	.L72:
 894              		.loc 1 1107 0 is_stmt 0 discriminator 1
 895 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 896 0004 13F0040F 		tst	r3, #4
 897 0008 FBD1     		bne	.L72
1108:.\Generated_Source\PSoC5/UART.c ****         {
1109:.\Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART.c ****         }
1111:.\Generated_Source\PSoC5/UART.c **** 
1112:.\Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 898              		.loc 1 1113 0 is_stmt 1
 899 000a 024B     		ldr	r3, .L74+4
 900 000c 1870     		strb	r0, [r3]
 901 000e 7047     		bx	lr
 902              	.L75:
 903              		.align	2
 904              	.L74:
 905 0010 68640040 		.word	1073767528
 906 0014 48640040 		.word	1073767496
 907              		.cfi_endproc
 908              	.LFE19:
 909              		.size	UART_PutChar, .-UART_PutChar
 910              		.section	.text.UART_PutString,"ax",%progbits
 911              		.align	2
 912              		.global	UART_PutString
 913              		.thumb
 914              		.thumb_func
 915              		.type	UART_PutString, %function
 916              	UART_PutString:
 917              	.LFB20:
1114:.\Generated_Source\PSoC5/UART.c **** 
1115:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART.c ****     }
1117:.\Generated_Source\PSoC5/UART.c **** 
1118:.\Generated_Source\PSoC5/UART.c **** 
1119:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART.c ****     *
1123:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART.c ****     *
1126:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 37


1129:.\Generated_Source\PSoC5/UART.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART.c ****     *
1132:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART.c ****     *
1136:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART.c ****     *
1139:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART.c ****     *
1144:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART.c ****     {
 918              		.loc 1 1146 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              	.LVL59:
 923 0000 38B5     		push	{r3, r4, r5, lr}
 924              		.cfi_def_cfa_offset 16
 925              		.cfi_offset 3, -16
 926              		.cfi_offset 4, -12
 927              		.cfi_offset 5, -8
 928              		.cfi_offset 14, -4
 929 0002 0546     		mov	r5, r0
 930              	.LVL60:
1147:.\Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC5/UART.c **** 
1149:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 931              		.loc 1 1150 0
 932 0004 064B     		ldr	r3, .L81
 933 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 934 0008 2BB9     		cbnz	r3, .L80
 935 000a 38BD     		pop	{r3, r4, r5, pc}
 936              	.LVL61:
 937              	.L79:
1151:.\Generated_Source\PSoC5/UART.c ****         {
1152:.\Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC5/UART.c ****             {
1155:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 938              		.loc 1 1155 0
 939 000c FFF7FEFF 		bl	UART_PutChar
 940              	.LVL62:
1156:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 941              		.loc 1 1156 0
 942 0010 0134     		adds	r4, r4, #1
 943              	.LVL63:
 944 0012 A4B2     		uxth	r4, r4
 945              	.LVL64:
 946 0014 00E0     		b	.L77
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 38


 947              	.LVL65:
 948              	.L80:
 949 0016 0024     		movs	r4, #0
 950              	.LVL66:
 951              	.L77:
1153:.\Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 952              		.loc 1 1153 0 discriminator 1
 953 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 954 001a 0028     		cmp	r0, #0
 955 001c F6D1     		bne	.L79
 956 001e 38BD     		pop	{r3, r4, r5, pc}
 957              	.LVL67:
 958              	.L82:
 959              		.align	2
 960              	.L81:
 961 0020 00000000 		.word	.LANCHOR0
 962              		.cfi_endproc
 963              	.LFE20:
 964              		.size	UART_PutString, .-UART_PutString
 965              		.section	.text.UART_PutArray,"ax",%progbits
 966              		.align	2
 967              		.global	UART_PutArray
 968              		.thumb
 969              		.thumb_func
 970              		.type	UART_PutArray, %function
 971              	UART_PutArray:
 972              	.LFB21:
1157:.\Generated_Source\PSoC5/UART.c ****             }
1158:.\Generated_Source\PSoC5/UART.c ****         }
1159:.\Generated_Source\PSoC5/UART.c ****     }
1160:.\Generated_Source\PSoC5/UART.c **** 
1161:.\Generated_Source\PSoC5/UART.c **** 
1162:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART.c ****     *
1166:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART.c ****     *
1170:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART.c ****     *
1175:.\Generated_Source\PSoC5/UART.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART.c ****     *
1178:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART.c ****     *
1182:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART.c ****     *
1185:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 39


1187:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART.c ****     *
1190:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART.c ****     {
 973              		.loc 1 1193 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              	.LVL68:
 978 0000 70B5     		push	{r4, r5, r6, lr}
 979              		.cfi_def_cfa_offset 16
 980              		.cfi_offset 4, -16
 981              		.cfi_offset 5, -12
 982              		.cfi_offset 6, -8
 983              		.cfi_offset 14, -4
 984 0002 0646     		mov	r6, r0
 985 0004 0D46     		mov	r5, r1
 986              	.LVL69:
1194:.\Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/UART.c **** 
1196:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 987              		.loc 1 1197 0
 988 0006 074B     		ldr	r3, .L88
 989 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 990 000a 33B9     		cbnz	r3, .L87
 991 000c 70BD     		pop	{r4, r5, r6, pc}
 992              	.LVL70:
 993              	.L86:
1198:.\Generated_Source\PSoC5/UART.c ****         {
1199:.\Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC5/UART.c ****             {
1201:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 994              		.loc 1 1201 0
 995 000e 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 996 0010 FFF7FEFF 		bl	UART_PutChar
 997              	.LVL71:
1202:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 998              		.loc 1 1202 0
 999 0014 0134     		adds	r4, r4, #1
 1000              	.LVL72:
 1001 0016 E4B2     		uxtb	r4, r4
 1002              	.LVL73:
 1003 0018 00E0     		b	.L84
 1004              	.LVL74:
 1005              	.L87:
 1006 001a 0024     		movs	r4, #0
 1007              	.LVL75:
 1008              	.L84:
1199:.\Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 1009              		.loc 1 1199 0 discriminator 1
 1010 001c AC42     		cmp	r4, r5
 1011 001e F6D3     		bcc	.L86
 1012 0020 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 40


 1013              	.LVL76:
 1014              	.L89:
 1015 0022 00BF     		.align	2
 1016              	.L88:
 1017 0024 00000000 		.word	.LANCHOR0
 1018              		.cfi_endproc
 1019              	.LFE21:
 1020              		.size	UART_PutArray, .-UART_PutArray
 1021              		.section	.text.UART_PutCRLF,"ax",%progbits
 1022              		.align	2
 1023              		.global	UART_PutCRLF
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	UART_PutCRLF, %function
 1027              	UART_PutCRLF:
 1028              	.LFB22:
1203:.\Generated_Source\PSoC5/UART.c ****             }
1204:.\Generated_Source\PSoC5/UART.c ****         }
1205:.\Generated_Source\PSoC5/UART.c ****     }
1206:.\Generated_Source\PSoC5/UART.c **** 
1207:.\Generated_Source\PSoC5/UART.c **** 
1208:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART.c ****     *
1212:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART.c ****     *
1216:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART.c ****     *
1219:.\Generated_Source\PSoC5/UART.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART.c ****     *
1222:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART.c ****     *
1226:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART.c ****     *
1229:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART.c ****     {
 1029              		.loc 1 1231 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              	.LVL77:
 1034 0000 08B5     		push	{r3, lr}
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 3, -8
 1037              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1038              		.loc 1 1233 0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 41


 1039 0002 064B     		ldr	r3, .L92
 1040 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1041 0006 3BB1     		cbz	r3, .L90
1234:.\Generated_Source\PSoC5/UART.c ****         {
1235:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 1042              		.loc 1 1235 0
 1043 0008 FFF7FEFF 		bl	UART_PutChar
 1044              	.LVL78:
1236:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 1045              		.loc 1 1236 0
 1046 000c 0D20     		movs	r0, #13
 1047 000e FFF7FEFF 		bl	UART_PutChar
 1048              	.LVL79:
1237:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 1049              		.loc 1 1237 0
 1050 0012 0A20     		movs	r0, #10
 1051 0014 FFF7FEFF 		bl	UART_PutChar
 1052              	.LVL80:
 1053              	.L90:
 1054 0018 08BD     		pop	{r3, pc}
 1055              	.L93:
 1056 001a 00BF     		.align	2
 1057              	.L92:
 1058 001c 00000000 		.word	.LANCHOR0
 1059              		.cfi_endproc
 1060              	.LFE22:
 1061              		.size	UART_PutCRLF, .-UART_PutCRLF
 1062              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1063              		.align	2
 1064              		.global	UART_GetTxBufferSize
 1065              		.thumb
 1066              		.thumb_func
 1067              		.type	UART_GetTxBufferSize, %function
 1068              	UART_GetTxBufferSize:
 1069              	.LFB23:
1238:.\Generated_Source\PSoC5/UART.c ****         }
1239:.\Generated_Source\PSoC5/UART.c ****     }
1240:.\Generated_Source\PSoC5/UART.c **** 
1241:.\Generated_Source\PSoC5/UART.c **** 
1242:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART.c ****     *
1246:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART.c ****     *
1255:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART.c ****     *
1258:.\Generated_Source\PSoC5/UART.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 42


1260:.\Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART.c ****     *
1262:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART.c ****     *
1266:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART.c ****     *
1269:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART.c ****     *
1272:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART.c ****                                                             
1275:.\Generated_Source\PSoC5/UART.c ****     {
 1070              		.loc 1 1275 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART.c **** 
1278:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART.c **** 
1280:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART.c **** 
1283:.\Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART.c ****         {
1285:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART.c ****         }
1287:.\Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART.c ****         {
1289:.\Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:.\Generated_Source\PSoC5/UART.c ****         }
1291:.\Generated_Source\PSoC5/UART.c ****         else
1292:.\Generated_Source\PSoC5/UART.c ****         {
1293:.\Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART.c ****         }
1296:.\Generated_Source\PSoC5/UART.c **** 
1297:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART.c **** 
1299:.\Generated_Source\PSoC5/UART.c ****     #else
1300:.\Generated_Source\PSoC5/UART.c **** 
1301:.\Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 1075              		.loc 1 1301 0
 1076 0000 074B     		ldr	r3, .L98
 1077 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 0004 DBB2     		uxtb	r3, r3
 1079              	.LVL81:
1302:.\Generated_Source\PSoC5/UART.c **** 
1303:.\Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 1080              		.loc 1 1304 0
 1081 0006 13F0040F 		tst	r3, #4
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 43


 1082 000a 04D1     		bne	.L96
1305:.\Generated_Source\PSoC5/UART.c ****         {
1306:.\Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART.c ****         }
1308:.\Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 1083              		.loc 1 1308 0
 1084 000c 13F0020F 		tst	r3, #2
 1085 0010 03D0     		beq	.L97
1309:.\Generated_Source\PSoC5/UART.c ****         {
1310:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
 1086              		.loc 1 1310 0
 1087 0012 0020     		movs	r0, #0
 1088 0014 7047     		bx	lr
 1089              	.L96:
1306:.\Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
 1090              		.loc 1 1306 0
 1091 0016 0420     		movs	r0, #4
 1092 0018 7047     		bx	lr
 1093              	.L97:
1311:.\Generated_Source\PSoC5/UART.c ****         }
1312:.\Generated_Source\PSoC5/UART.c ****         else
1313:.\Generated_Source\PSoC5/UART.c ****         {
1314:.\Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART.c ****             size = 1u;
 1094              		.loc 1 1315 0
 1095 001a 0120     		movs	r0, #1
 1096              	.LVL82:
1316:.\Generated_Source\PSoC5/UART.c ****         }
1317:.\Generated_Source\PSoC5/UART.c **** 
1318:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART.c **** 
1320:.\Generated_Source\PSoC5/UART.c ****     return(size);
1321:.\Generated_Source\PSoC5/UART.c ****     }
 1097              		.loc 1 1321 0
 1098 001c 7047     		bx	lr
 1099              	.L99:
 1100 001e 00BF     		.align	2
 1101              	.L98:
 1102 0020 68640040 		.word	1073767528
 1103              		.cfi_endproc
 1104              	.LFE23:
 1105              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1106              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1107              		.align	2
 1108              		.global	UART_ClearTxBuffer
 1109              		.thumb
 1110              		.thumb_func
 1111              		.type	UART_ClearTxBuffer, %function
 1112              	UART_ClearTxBuffer:
 1113              	.LFB24:
1322:.\Generated_Source\PSoC5/UART.c **** 
1323:.\Generated_Source\PSoC5/UART.c **** 
1324:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART.c ****     *
1328:.\Generated_Source\PSoC5/UART.c ****     * Summary:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 44


1329:.\Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART.c ****     *
1331:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART.c ****     *
1334:.\Generated_Source\PSoC5/UART.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART.c ****     *
1337:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART.c ****     *
1341:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART.c ****     *
1344:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART.c ****     *
1349:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART.c ****     *
1353:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART.c ****     {
 1114              		.loc 1 1355 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118 0000 08B5     		push	{r3, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 3, -8
 1121              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART.c **** 
1358:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1122              		.loc 1 1358 0
 1123 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1124              	.LVL83:
1359:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1125              		.loc 1 1360 0
 1126 0006 064B     		ldr	r3, .L101
 1127 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1128 000a 42F00102 		orr	r2, r2, #1
 1129 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1130              		.loc 1 1361 0
 1131 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1132 0012 02F0FE02 		and	r2, r2, #254
 1133 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1134              		.loc 1 1362 0
 1135 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1136              	.LVL84:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 45


 1137 001c 08BD     		pop	{r3, pc}
 1138              	.L102:
 1139 001e 00BF     		.align	2
 1140              	.L101:
 1141 0020 98640040 		.word	1073767576
 1142              		.cfi_endproc
 1143              	.LFE24:
 1144              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1145              		.section	.text.UART_SendBreak,"ax",%progbits
 1146              		.align	2
 1147              		.global	UART_SendBreak
 1148              		.thumb
 1149              		.thumb_func
 1150              		.type	UART_SendBreak, %function
 1151              	UART_SendBreak:
 1152              	.LFB25:
1363:.\Generated_Source\PSoC5/UART.c **** 
1364:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART.c **** 
1366:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART.c **** 
1369:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART.c **** 
1372:.\Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART.c **** 
1375:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART.c ****     }
1377:.\Generated_Source\PSoC5/UART.c **** 
1378:.\Generated_Source\PSoC5/UART.c **** 
1379:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART.c ****     *
1383:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART.c ****     *
1386:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART.c ****     *
1398:.\Generated_Source\PSoC5/UART.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART.c ****     *
1401:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 46


1404:.\Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART.c ****     *
1406:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART.c ****     *
1409:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART.c ****     *
1432:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART.c ****     *
1439:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART.c ****     {
 1153              		.loc 1 1441 0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157              		@ link register save eliminated.
 1158              	.LVL85:
1442:.\Generated_Source\PSoC5/UART.c **** 
1443:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1159              		.loc 1 1444 0
 1160 0000 124B     		ldr	r3, .L113
 1161 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1162 0004 0BB3     		cbz	r3, .L103
 1163              	.LBB2:
1445:.\Generated_Source\PSoC5/UART.c ****         {
1446:.\Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 47


1450:.\Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART.c **** 
1452:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART.c ****             {
1455:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART.c **** 
1461:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART.c ****                 {
1463:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART.c ****                 }
1465:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART.c ****             }
1467:.\Generated_Source\PSoC5/UART.c **** 
1468:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART.c ****             {
1471:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART.c ****                 {
1473:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART.c ****                 }
1475:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART.c ****             }
1477:.\Generated_Source\PSoC5/UART.c **** 
1478:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART.c ****             {
1482:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART.c ****             }
1485:.\Generated_Source\PSoC5/UART.c **** 
1486:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART.c **** 
1488:.\Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART.c **** 
1490:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1164              		.loc 1 1490 0
 1165 0006 08B1     		cbz	r0, .L105
 1166              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1167 0008 0328     		cmp	r0, #3
 1168 000a 0DD1     		bne	.L106
 1169              	.L105:
1491:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART.c ****             {
1493:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART.c **** 
1500:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 48


1501:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1170              		.loc 1 1501 0 is_stmt 1
 1171 000c 104B     		ldr	r3, .L113+4
 1172 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1173 0010 0E4A     		ldr	r2, .L113
 1174 0012 9171     		strb	r1, [r2, #6]
1502:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1175              		.loc 1 1502 0
 1176 0014 6722     		movs	r2, #103
 1177 0016 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/UART.c ****                 #else
1504:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART.c **** 
1508:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1178              		.loc 1 1509 0
 1179 0018 0022     		movs	r2, #0
 1180 001a 0D33     		adds	r3, r3, #13
 1181 001c 1A70     		strb	r2, [r3]
1510:.\Generated_Source\PSoC5/UART.c **** 
1511:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART.c ****                 {
1513:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1182              		.loc 1 1513 0
 1183 001e 0D4A     		ldr	r2, .L113+8
 1184              	.L107:
 1185              		.loc 1 1513 0 is_stmt 0 discriminator 1
 1186 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1187              	.LVL86:
1514:.\Generated_Source\PSoC5/UART.c ****                 }
1515:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1188              		.loc 1 1515 0 is_stmt 1 discriminator 1
 1189 0022 13F0020F 		tst	r3, #2
 1190 0026 FBD1     		bne	.L107
 1191              	.LVL87:
 1192              	.L106:
1516:.\Generated_Source\PSoC5/UART.c ****             }
1517:.\Generated_Source\PSoC5/UART.c **** 
1518:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1193              		.loc 1 1518 0
 1194 0028 0128     		cmp	r0, #1
 1195 002a 01D0     		beq	.L108
 1196              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1197 002c 0328     		cmp	r0, #3
 1198 002e 04D1     		bne	.L109
 1199              	.L108:
1519:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART.c ****             {
1521:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART.c ****                 {
1523:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1200              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1201 0030 084A     		ldr	r2, .L113+8
 1202              	.L110:
 1203 0032 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 49


 1204              	.LVL88:
1524:.\Generated_Source\PSoC5/UART.c ****                 }
1525:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1205              		.loc 1 1525 0 discriminator 1
 1206 0034 13F0010F 		tst	r3, #1
 1207 0038 FBD0     		beq	.L110
 1208              	.LVL89:
 1209              	.L109:
1526:.\Generated_Source\PSoC5/UART.c ****             }
1527:.\Generated_Source\PSoC5/UART.c **** 
1528:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1210              		.loc 1 1529 0
 1211 003a 0138     		subs	r0, r0, #1
 1212              	.LVL90:
 1213 003c C0B2     		uxtb	r0, r0
1528:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1214              		.loc 1 1528 0
 1215 003e 0228     		cmp	r0, #2
 1216 0040 03D8     		bhi	.L103
1530:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART.c ****             {
1532:.\Generated_Source\PSoC5/UART.c **** 
1533:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1217              		.loc 1 1534 0
 1218 0042 024B     		ldr	r3, .L113
 1219 0044 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1220 0046 024B     		ldr	r3, .L113+4
 1221 0048 1A70     		strb	r2, [r3]
 1222              	.L103:
 1223 004a 7047     		bx	lr
 1224              	.L114:
 1225              		.align	2
 1226              	.L113:
 1227 004c 00000000 		.word	.LANCHOR0
 1228 0050 3B640040 		.word	1073767483
 1229 0054 68640040 		.word	1073767528
 1230              	.LBE2:
 1231              		.cfi_endproc
 1232              	.LFE25:
 1233              		.size	UART_SendBreak, .-UART_SendBreak
 1234              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1235              		.align	2
 1236              		.global	UART_SetTxAddressMode
 1237              		.thumb
 1238              		.thumb_func
 1239              		.type	UART_SetTxAddressMode, %function
 1240              	UART_SetTxAddressMode:
 1241              	.LFB26:
1535:.\Generated_Source\PSoC5/UART.c ****             #else
1536:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART.c **** 
1539:.\Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 50


1542:.\Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART.c ****             }
1545:.\Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART.c ****         }
1547:.\Generated_Source\PSoC5/UART.c ****     }
1548:.\Generated_Source\PSoC5/UART.c **** 
1549:.\Generated_Source\PSoC5/UART.c **** 
1550:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART.c ****     *
1554:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART.c ****     *
1557:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART.c ****     *
1564:.\Generated_Source\PSoC5/UART.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART.c ****     *
1567:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART.c ****     *
1571:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART.c ****     {
 1242              		.loc 1 1573 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247              	.LVL91:
 1248 0000 7047     		bx	lr
 1249              		.cfi_endproc
 1250              	.LFE26:
 1251              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1252              		.global	UART_rxBufferOverflow
 1253              		.global	UART_rxBufferLoopDetect
 1254              		.global	UART_rxBufferWrite
 1255              		.global	UART_rxBufferRead
 1256              		.comm	UART_rxBuffer,9,4
 1257              		.global	UART_errorStatus
 1258              		.global	UART_initVar
 1259 0002 00BF     		.bss
 1260              		.set	.LANCHOR0,. + 0
 1261              		.type	UART_errorStatus, %object
 1262              		.size	UART_errorStatus, 1
 1263              	UART_errorStatus:
 1264 0000 00       		.space	1
 1265              		.type	UART_initVar, %object
 1266              		.size	UART_initVar, 1
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 51


 1267              	UART_initVar:
 1268 0001 00       		.space	1
 1269              		.type	UART_rxBufferRead, %object
 1270              		.size	UART_rxBufferRead, 1
 1271              	UART_rxBufferRead:
 1272 0002 00       		.space	1
 1273              		.type	UART_rxBufferWrite, %object
 1274              		.size	UART_rxBufferWrite, 1
 1275              	UART_rxBufferWrite:
 1276 0003 00       		.space	1
 1277              		.type	UART_rxBufferLoopDetect, %object
 1278              		.size	UART_rxBufferLoopDetect, 1
 1279              	UART_rxBufferLoopDetect:
 1280 0004 00       		.space	1
 1281              		.type	UART_rxBufferOverflow, %object
 1282              		.size	UART_rxBufferOverflow, 1
 1283              	UART_rxBufferOverflow:
 1284 0005 00       		.space	1
 1285              		.type	txPeriod.5011, %object
 1286              		.size	txPeriod.5011, 1
 1287              	txPeriod.5011:
 1288 0006 00       		.space	1
 1289              		.text
 1290              	.Letext0:
 1291              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1292              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1293              		.file 4 ".\\Generated_Source\\PSoC5\\UART_IntClock.h"
 1294              		.section	.debug_info,"",%progbits
 1295              	.Ldebug_info0:
 1296 0000 49070000 		.4byte	0x749
 1297 0004 0400     		.2byte	0x4
 1298 0006 00000000 		.4byte	.Ldebug_abbrev0
 1299 000a 04       		.byte	0x4
 1300 000b 01       		.uleb128 0x1
 1301 000c 1D000000 		.4byte	.LASF77
 1302 0010 01       		.byte	0x1
 1303 0011 FB000000 		.4byte	.LASF78
 1304 0015 9B020000 		.4byte	.LASF79
 1305 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1306 001d 00000000 		.4byte	0
 1307 0021 00000000 		.4byte	.Ldebug_line0
 1308 0025 02       		.uleb128 0x2
 1309 0026 01       		.byte	0x1
 1310 0027 06       		.byte	0x6
 1311 0028 29010000 		.4byte	.LASF0
 1312 002c 02       		.uleb128 0x2
 1313 002d 01       		.byte	0x1
 1314 002e 08       		.byte	0x8
 1315 002f E8030000 		.4byte	.LASF1
 1316 0033 02       		.uleb128 0x2
 1317 0034 02       		.byte	0x2
 1318 0035 05       		.byte	0x5
 1319 0036 07040000 		.4byte	.LASF2
 1320 003a 02       		.uleb128 0x2
 1321 003b 02       		.byte	0x2
 1322 003c 07       		.byte	0x7
 1323 003d 76020000 		.4byte	.LASF3
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 52


 1324 0041 02       		.uleb128 0x2
 1325 0042 04       		.byte	0x4
 1326 0043 05       		.byte	0x5
 1327 0044 3E010000 		.4byte	.LASF4
 1328 0048 02       		.uleb128 0x2
 1329 0049 04       		.byte	0x4
 1330 004a 07       		.byte	0x7
 1331 004b 22020000 		.4byte	.LASF5
 1332 004f 02       		.uleb128 0x2
 1333 0050 08       		.byte	0x8
 1334 0051 05       		.byte	0x5
 1335 0052 1B010000 		.4byte	.LASF6
 1336 0056 02       		.uleb128 0x2
 1337 0057 08       		.byte	0x8
 1338 0058 07       		.byte	0x7
 1339 0059 AB000000 		.4byte	.LASF7
 1340 005d 03       		.uleb128 0x3
 1341 005e 04       		.byte	0x4
 1342 005f 05       		.byte	0x5
 1343 0060 696E7400 		.ascii	"int\000"
 1344 0064 02       		.uleb128 0x2
 1345 0065 04       		.byte	0x4
 1346 0066 07       		.byte	0x7
 1347 0067 E6010000 		.4byte	.LASF8
 1348 006b 04       		.uleb128 0x4
 1349 006c 64010000 		.4byte	.LASF9
 1350 0070 02       		.byte	0x2
 1351 0071 B3       		.byte	0xb3
 1352 0072 2C000000 		.4byte	0x2c
 1353 0076 04       		.uleb128 0x4
 1354 0077 00000000 		.4byte	.LASF10
 1355 007b 02       		.byte	0x2
 1356 007c B4       		.byte	0xb4
 1357 007d 3A000000 		.4byte	0x3a
 1358 0081 04       		.uleb128 0x4
 1359 0082 A9010000 		.4byte	.LASF11
 1360 0086 02       		.byte	0x2
 1361 0087 B5       		.byte	0xb5
 1362 0088 48000000 		.4byte	0x48
 1363 008c 02       		.uleb128 0x2
 1364 008d 04       		.byte	0x4
 1365 008e 04       		.byte	0x4
 1366 008f B2030000 		.4byte	.LASF12
 1367 0093 02       		.uleb128 0x2
 1368 0094 08       		.byte	0x8
 1369 0095 04       		.byte	0x4
 1370 0096 83010000 		.4byte	.LASF13
 1371 009a 04       		.uleb128 0x4
 1372 009b 61040000 		.4byte	.LASF14
 1373 009f 02       		.byte	0x2
 1374 00a0 C4       		.byte	0xc4
 1375 00a1 A5000000 		.4byte	0xa5
 1376 00a5 02       		.uleb128 0x2
 1377 00a6 01       		.byte	0x1
 1378 00a7 08       		.byte	0x8
 1379 00a8 4F040000 		.4byte	.LASF15
 1380 00ac 05       		.uleb128 0x5
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 53


 1381 00ad CD030000 		.4byte	.LASF16
 1382 00b1 02       		.byte	0x2
 1383 00b2 5D01     		.2byte	0x15d
 1384 00b4 B8000000 		.4byte	0xb8
 1385 00b8 06       		.uleb128 0x6
 1386 00b9 6B000000 		.4byte	0x6b
 1387 00bd 05       		.uleb128 0x5
 1388 00be 1E030000 		.4byte	.LASF17
 1389 00c2 02       		.byte	0x2
 1390 00c3 5F01     		.2byte	0x15f
 1391 00c5 C9000000 		.4byte	0xc9
 1392 00c9 06       		.uleb128 0x6
 1393 00ca 81000000 		.4byte	0x81
 1394 00ce 05       		.uleb128 0x5
 1395 00cf 54040000 		.4byte	.LASF18
 1396 00d3 02       		.byte	0x2
 1397 00d4 6F01     		.2byte	0x16f
 1398 00d6 DA000000 		.4byte	0xda
 1399 00da 07       		.uleb128 0x7
 1400 00db 04       		.byte	0x4
 1401 00dc E0000000 		.4byte	0xe0
 1402 00e0 08       		.uleb128 0x8
 1403 00e1 02       		.uleb128 0x2
 1404 00e2 04       		.byte	0x4
 1405 00e3 07       		.byte	0x7
 1406 00e4 2C030000 		.4byte	.LASF19
 1407 00e8 09       		.uleb128 0x9
 1408 00e9 C7010000 		.4byte	.LASF20
 1409 00ed 01       		.byte	0x1
 1410 00ee 6A       		.byte	0x6a
 1411 00ef 00000000 		.4byte	.LFB1
 1412 00f3 44000000 		.4byte	.LFE1-.LFB1
 1413 00f7 01       		.uleb128 0x1
 1414 00f8 9C       		.byte	0x9c
 1415 00f9 25010000 		.4byte	0x125
 1416 00fd 0A       		.uleb128 0xa
 1417 00fe 0A000000 		.4byte	.LVL0
 1418 0102 F2060000 		.4byte	0x6f2
 1419 0106 10010000 		.4byte	0x110
 1420 010a 0B       		.uleb128 0xb
 1421 010b 01       		.uleb128 0x1
 1422 010c 50       		.byte	0x50
 1423 010d 01       		.uleb128 0x1
 1424 010e 31       		.byte	0x31
 1425 010f 00       		.byte	0
 1426 0110 0C       		.uleb128 0xc
 1427 0111 12000000 		.4byte	.LVL1
 1428 0115 0C070000 		.4byte	0x70c
 1429 0119 0B       		.uleb128 0xb
 1430 011a 01       		.uleb128 0x1
 1431 011b 51       		.byte	0x51
 1432 011c 01       		.uleb128 0x1
 1433 011d 37       		.byte	0x37
 1434 011e 0B       		.uleb128 0xb
 1435 011f 01       		.uleb128 0x1
 1436 0120 50       		.byte	0x50
 1437 0121 01       		.uleb128 0x1
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 54


 1438 0122 31       		.byte	0x31
 1439 0123 00       		.byte	0
 1440 0124 00       		.byte	0
 1441 0125 09       		.uleb128 0x9
 1442 0126 31040000 		.4byte	.LASF21
 1443 012a 01       		.byte	0x1
 1444 012b B7       		.byte	0xb7
 1445 012c 00000000 		.4byte	.LFB2
 1446 0130 44000000 		.4byte	.LFE2-.LFB2
 1447 0134 01       		.uleb128 0x1
 1448 0135 9C       		.byte	0x9c
 1449 0136 6C010000 		.4byte	0x16c
 1450 013a 0D       		.uleb128 0xd
 1451 013b 9C040000 		.4byte	.LASF24
 1452 013f 01       		.byte	0x1
 1453 0140 B9       		.byte	0xb9
 1454 0141 6B000000 		.4byte	0x6b
 1455 0145 00000000 		.4byte	.LLST0
 1456 0149 0E       		.uleb128 0xe
 1457 014a 06000000 		.4byte	.LVL2
 1458 014e 22070000 		.4byte	0x722
 1459 0152 0E       		.uleb128 0xe
 1460 0153 30000000 		.4byte	.LVL4
 1461 0157 2D070000 		.4byte	0x72d
 1462 015b 0C       		.uleb128 0xc
 1463 015c 36000000 		.4byte	.LVL5
 1464 0160 34070000 		.4byte	0x734
 1465 0164 0B       		.uleb128 0xb
 1466 0165 01       		.uleb128 0x1
 1467 0166 50       		.byte	0x50
 1468 0167 02       		.uleb128 0x2
 1469 0168 74       		.byte	0x74
 1470 0169 00       		.sleb128 0
 1471 016a 00       		.byte	0
 1472 016b 00       		.byte	0
 1473 016c 09       		.uleb128 0x9
 1474 016d C2000000 		.4byte	.LASF22
 1475 0171 01       		.byte	0x1
 1476 0172 4C       		.byte	0x4c
 1477 0173 00000000 		.4byte	.LFB0
 1478 0177 1C000000 		.4byte	.LFE0-.LFB0
 1479 017b 01       		.uleb128 0x1
 1480 017c 9C       		.byte	0x9c
 1481 017d 94010000 		.4byte	0x194
 1482 0181 0E       		.uleb128 0xe
 1483 0182 0C000000 		.4byte	.LVL7
 1484 0186 E8000000 		.4byte	0xe8
 1485 018a 0E       		.uleb128 0xe
 1486 018b 16000000 		.4byte	.LVL8
 1487 018f 25010000 		.4byte	0x125
 1488 0193 00       		.byte	0
 1489 0194 09       		.uleb128 0x9
 1490 0195 D6040000 		.4byte	.LASF23
 1491 0199 01       		.byte	0x1
 1492 019a F0       		.byte	0xf0
 1493 019b 00000000 		.4byte	.LFB3
 1494 019f 48000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 55


 1495 01a3 01       		.uleb128 0x1
 1496 01a4 9C       		.byte	0x9c
 1497 01a5 DB010000 		.4byte	0x1db
 1498 01a9 0D       		.uleb128 0xd
 1499 01aa 9C040000 		.4byte	.LASF24
 1500 01ae 01       		.byte	0x1
 1501 01af F2       		.byte	0xf2
 1502 01b0 6B000000 		.4byte	0x6b
 1503 01b4 1E000000 		.4byte	.LLST1
 1504 01b8 0E       		.uleb128 0xe
 1505 01b9 06000000 		.4byte	.LVL9
 1506 01bd 22070000 		.4byte	0x722
 1507 01c1 0E       		.uleb128 0xe
 1508 01c2 16000000 		.4byte	.LVL11
 1509 01c6 45070000 		.4byte	0x745
 1510 01ca 0C       		.uleb128 0xc
 1511 01cb 36000000 		.4byte	.LVL12
 1512 01cf 34070000 		.4byte	0x734
 1513 01d3 0B       		.uleb128 0xb
 1514 01d4 01       		.uleb128 0x1
 1515 01d5 50       		.byte	0x50
 1516 01d6 02       		.uleb128 0x2
 1517 01d7 74       		.byte	0x74
 1518 01d8 00       		.sleb128 0
 1519 01d9 00       		.byte	0
 1520 01da 00       		.byte	0
 1521 01db 0F       		.uleb128 0xf
 1522 01dc 6A010000 		.4byte	.LASF50
 1523 01e0 01       		.byte	0x1
 1524 01e1 2701     		.2byte	0x127
 1525 01e3 6B000000 		.4byte	0x6b
 1526 01e7 00000000 		.4byte	.LFB4
 1527 01eb 04000000 		.4byte	.LFE4-.LFB4
 1528 01ef 01       		.uleb128 0x1
 1529 01f0 9C       		.byte	0x9c
 1530 01f1 10       		.uleb128 0x10
 1531 01f2 FD040000 		.4byte	.LASF25
 1532 01f6 01       		.byte	0x1
 1533 01f7 3F01     		.2byte	0x13f
 1534 01f9 00000000 		.4byte	.LFB5
 1535 01fd 02000000 		.4byte	.LFE5-.LFB5
 1536 0201 01       		.uleb128 0x1
 1537 0202 9C       		.byte	0x9c
 1538 0203 16020000 		.4byte	0x216
 1539 0207 11       		.uleb128 0x11
 1540 0208 BF010000 		.4byte	.LASF27
 1541 020c 01       		.byte	0x1
 1542 020d 3F01     		.2byte	0x13f
 1543 020f 6B000000 		.4byte	0x6b
 1544 0213 01       		.uleb128 0x1
 1545 0214 50       		.byte	0x50
 1546 0215 00       		.byte	0
 1547 0216 10       		.uleb128 0x10
 1548 0217 67040000 		.4byte	.LASF26
 1549 021b 01       		.byte	0x1
 1550 021c 6701     		.2byte	0x167
 1551 021e 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 56


 1552 0222 0C000000 		.4byte	.LFE6-.LFB6
 1553 0226 01       		.uleb128 0x1
 1554 0227 9C       		.byte	0x9c
 1555 0228 3B020000 		.4byte	0x23b
 1556 022c 11       		.uleb128 0x11
 1557 022d DB020000 		.4byte	.LASF28
 1558 0231 01       		.byte	0x1
 1559 0232 6701     		.2byte	0x167
 1560 0234 6B000000 		.4byte	0x6b
 1561 0238 01       		.uleb128 0x1
 1562 0239 50       		.byte	0x50
 1563 023a 00       		.byte	0
 1564 023b 12       		.uleb128 0x12
 1565 023c 54010000 		.4byte	.LASF32
 1566 0240 01       		.byte	0x1
 1567 0241 8801     		.2byte	0x188
 1568 0243 6B000000 		.4byte	0x6b
 1569 0247 00000000 		.4byte	.LFB7
 1570 024b 64000000 		.4byte	.LFE7-.LFB7
 1571 024f 01       		.uleb128 0x1
 1572 0250 9C       		.byte	0x9c
 1573 0251 84020000 		.4byte	0x284
 1574 0255 13       		.uleb128 0x13
 1575 0256 2A040000 		.4byte	.LASF29
 1576 025a 01       		.byte	0x1
 1577 025b 8A01     		.2byte	0x18a
 1578 025d 6B000000 		.4byte	0x6b
 1579 0261 3C000000 		.4byte	.LLST2
 1580 0265 13       		.uleb128 0x13
 1581 0266 8C040000 		.4byte	.LASF30
 1582 026a 01       		.byte	0x1
 1583 026b 8E01     		.2byte	0x18e
 1584 026d 6B000000 		.4byte	0x6b
 1585 0271 5A000000 		.4byte	.LLST3
 1586 0275 14       		.uleb128 0x14
 1587 0276 63030000 		.4byte	.LASF31
 1588 027a 01       		.byte	0x1
 1589 027b 8F01     		.2byte	0x18f
 1590 027d 6B000000 		.4byte	0x6b
 1591 0281 01       		.uleb128 0x1
 1592 0282 51       		.byte	0x51
 1593 0283 00       		.byte	0
 1594 0284 12       		.uleb128 0x12
 1595 0285 3D040000 		.4byte	.LASF33
 1596 0289 01       		.byte	0x1
 1597 028a E501     		.2byte	0x1e5
 1598 028c 6B000000 		.4byte	0x6b
 1599 0290 00000000 		.4byte	.LFB8
 1600 0294 28000000 		.4byte	.LFE8-.LFB8
 1601 0298 01       		.uleb128 0x1
 1602 0299 9C       		.byte	0x9c
 1603 029a AD020000 		.4byte	0x2ad
 1604 029e 14       		.uleb128 0x14
 1605 029f CF040000 		.4byte	.LASF34
 1606 02a3 01       		.byte	0x1
 1607 02a4 E701     		.2byte	0x1e7
 1608 02a6 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 57


 1609 02aa 01       		.uleb128 0x1
 1610 02ab 50       		.byte	0x50
 1611 02ac 00       		.byte	0
 1612 02ad 12       		.uleb128 0x12
 1613 02ae 7F040000 		.4byte	.LASF35
 1614 02b2 01       		.byte	0x1
 1615 02b3 1402     		.2byte	0x214
 1616 02b5 6B000000 		.4byte	0x6b
 1617 02b9 00000000 		.4byte	.LFB9
 1618 02bd 80000000 		.4byte	.LFE9-.LFB9
 1619 02c1 01       		.uleb128 0x1
 1620 02c2 9C       		.byte	0x9c
 1621 02c3 06030000 		.4byte	0x306
 1622 02c7 13       		.uleb128 0x13
 1623 02c8 2A040000 		.4byte	.LASF29
 1624 02cc 01       		.byte	0x1
 1625 02cd 1602     		.2byte	0x216
 1626 02cf 6B000000 		.4byte	0x6b
 1627 02d3 90000000 		.4byte	.LLST4
 1628 02d7 13       		.uleb128 0x13
 1629 02d8 74030000 		.4byte	.LASF36
 1630 02dc 01       		.byte	0x1
 1631 02dd 1702     		.2byte	0x217
 1632 02df 6B000000 		.4byte	0x6b
 1633 02e3 DD000000 		.4byte	.LLST5
 1634 02e7 13       		.uleb128 0x13
 1635 02e8 8C040000 		.4byte	.LASF30
 1636 02ec 01       		.byte	0x1
 1637 02ed 1A02     		.2byte	0x21a
 1638 02ef 6B000000 		.4byte	0x6b
 1639 02f3 F0000000 		.4byte	.LLST6
 1640 02f7 14       		.uleb128 0x14
 1641 02f8 63030000 		.4byte	.LASF31
 1642 02fc 01       		.byte	0x1
 1643 02fd 1B02     		.2byte	0x21b
 1644 02ff 6B000000 		.4byte	0x6b
 1645 0303 01       		.uleb128 0x1
 1646 0304 51       		.byte	0x51
 1647 0305 00       		.byte	0
 1648 0306 12       		.uleb128 0x12
 1649 0307 D9010000 		.4byte	.LASF37
 1650 030b 01       		.byte	0x1
 1651 030c 7A02     		.2byte	0x27a
 1652 030e 76000000 		.4byte	0x76
 1653 0312 00000000 		.4byte	.LFB10
 1654 0316 2C000000 		.4byte	.LFE10-.LFB10
 1655 031a 01       		.uleb128 0x1
 1656 031b 9C       		.byte	0x9c
 1657 031c 3A030000 		.4byte	0x33a
 1658 0320 13       		.uleb128 0x13
 1659 0321 13020000 		.4byte	.LASF38
 1660 0325 01       		.byte	0x1
 1661 0326 7E02     		.2byte	0x27e
 1662 0328 76000000 		.4byte	0x76
 1663 032c 31010000 		.4byte	.LLST7
 1664 0330 0E       		.uleb128 0xe
 1665 0331 1A000000 		.4byte	.LVL45
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 58


 1666 0335 3B020000 		.4byte	0x23b
 1667 0339 00       		.byte	0
 1668 033a 12       		.uleb128 0x12
 1669 033b BA040000 		.4byte	.LASF39
 1670 033f 01       		.byte	0x1
 1671 0340 AB02     		.2byte	0x2ab
 1672 0342 6B000000 		.4byte	0x6b
 1673 0346 00000000 		.4byte	.LFB11
 1674 034a 5C000000 		.4byte	.LFE11-.LFB11
 1675 034e 01       		.uleb128 0x1
 1676 034f 9C       		.byte	0x9c
 1677 0350 65030000 		.4byte	0x365
 1678 0354 13       		.uleb128 0x13
 1679 0355 71020000 		.4byte	.LASF40
 1680 0359 01       		.byte	0x1
 1681 035a AE02     		.2byte	0x2ae
 1682 035c 6B000000 		.4byte	0x6b
 1683 0360 44010000 		.4byte	.LLST8
 1684 0364 00       		.byte	0
 1685 0365 10       		.uleb128 0x10
 1686 0366 17050000 		.4byte	.LASF41
 1687 036a 01       		.byte	0x1
 1688 036b F502     		.2byte	0x2f5
 1689 036d 00000000 		.4byte	.LFB12
 1690 0371 44000000 		.4byte	.LFE12-.LFB12
 1691 0375 01       		.uleb128 0x1
 1692 0376 9C       		.byte	0x9c
 1693 0377 9E030000 		.4byte	0x39e
 1694 037b 13       		.uleb128 0x13
 1695 037c 9C040000 		.4byte	.LASF24
 1696 0380 01       		.byte	0x1
 1697 0381 F702     		.2byte	0x2f7
 1698 0383 6B000000 		.4byte	0x6b
 1699 0387 6D010000 		.4byte	.LLST9
 1700 038b 0E       		.uleb128 0xe
 1701 038c 06000000 		.4byte	.LVL51
 1702 0390 22070000 		.4byte	0x722
 1703 0394 0E       		.uleb128 0xe
 1704 0395 1C000000 		.4byte	.LVL52
 1705 0399 34070000 		.4byte	0x734
 1706 039d 00       		.byte	0
 1707 039e 10       		.uleb128 0x10
 1708 039f D2030000 		.4byte	.LASF42
 1709 03a3 01       		.byte	0x1
 1710 03a4 2D03     		.2byte	0x32d
 1711 03a6 00000000 		.4byte	.LFB13
 1712 03aa 02000000 		.4byte	.LFE13-.LFB13
 1713 03ae 01       		.uleb128 0x1
 1714 03af 9C       		.byte	0x9c
 1715 03b0 C3030000 		.4byte	0x3c3
 1716 03b4 11       		.uleb128 0x11
 1717 03b5 8A010000 		.4byte	.LASF43
 1718 03b9 01       		.byte	0x1
 1719 03ba 2D03     		.2byte	0x32d
 1720 03bc 6B000000 		.4byte	0x6b
 1721 03c0 01       		.uleb128 0x1
 1722 03c1 50       		.byte	0x50
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 59


 1723 03c2 00       		.byte	0
 1724 03c3 10       		.uleb128 0x10
 1725 03c4 3D030000 		.4byte	.LASF44
 1726 03c8 01       		.byte	0x1
 1727 03c9 5903     		.2byte	0x359
 1728 03cb 00000000 		.4byte	.LFB14
 1729 03cf 0C000000 		.4byte	.LFE14-.LFB14
 1730 03d3 01       		.uleb128 0x1
 1731 03d4 9C       		.byte	0x9c
 1732 03d5 E8030000 		.4byte	0x3e8
 1733 03d9 11       		.uleb128 0x11
 1734 03da 35030000 		.4byte	.LASF45
 1735 03de 01       		.byte	0x1
 1736 03df 5903     		.2byte	0x359
 1737 03e1 6B000000 		.4byte	0x6b
 1738 03e5 01       		.uleb128 0x1
 1739 03e6 50       		.byte	0x50
 1740 03e7 00       		.byte	0
 1741 03e8 10       		.uleb128 0x10
 1742 03e9 50030000 		.4byte	.LASF46
 1743 03ed 01       		.byte	0x1
 1744 03ee 6D03     		.2byte	0x36d
 1745 03f0 00000000 		.4byte	.LFB15
 1746 03f4 0C000000 		.4byte	.LFE15-.LFB15
 1747 03f8 01       		.uleb128 0x1
 1748 03f9 9C       		.byte	0x9c
 1749 03fa 0D040000 		.4byte	0x40d
 1750 03fe 11       		.uleb128 0x11
 1751 03ff 35030000 		.4byte	.LASF45
 1752 0403 01       		.byte	0x1
 1753 0404 6D03     		.2byte	0x36d
 1754 0406 6B000000 		.4byte	0x6b
 1755 040a 01       		.uleb128 0x1
 1756 040b 50       		.byte	0x50
 1757 040c 00       		.byte	0
 1758 040d 10       		.uleb128 0x10
 1759 040e CD000000 		.4byte	.LASF47
 1760 0412 01       		.byte	0x1
 1761 0413 8C03     		.2byte	0x38c
 1762 0415 00000000 		.4byte	.LFB16
 1763 0419 0C000000 		.4byte	.LFE16-.LFB16
 1764 041d 01       		.uleb128 0x1
 1765 041e 9C       		.byte	0x9c
 1766 041f 32040000 		.4byte	0x432
 1767 0423 11       		.uleb128 0x11
 1768 0424 DB020000 		.4byte	.LASF28
 1769 0428 01       		.byte	0x1
 1770 0429 8C03     		.2byte	0x38c
 1771 042b 6B000000 		.4byte	0x6b
 1772 042f 01       		.uleb128 0x1
 1773 0430 50       		.byte	0x50
 1774 0431 00       		.byte	0
 1775 0432 10       		.uleb128 0x10
 1776 0433 F6030000 		.4byte	.LASF48
 1777 0437 01       		.byte	0x1
 1778 0438 AE03     		.2byte	0x3ae
 1779 043a 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 60


 1780 043e 14000000 		.4byte	.LFE17-.LFB17
 1781 0442 01       		.uleb128 0x1
 1782 0443 9C       		.byte	0x9c
 1783 0444 57040000 		.4byte	0x457
 1784 0448 11       		.uleb128 0x11
 1785 0449 99000000 		.4byte	.LASF49
 1786 044d 01       		.byte	0x1
 1787 044e AE03     		.2byte	0x3ae
 1788 0450 6B000000 		.4byte	0x6b
 1789 0454 01       		.uleb128 0x1
 1790 0455 50       		.byte	0x50
 1791 0456 00       		.byte	0
 1792 0457 0F       		.uleb128 0xf
 1793 0458 F8020000 		.4byte	.LASF51
 1794 045c 01       		.byte	0x1
 1795 045d EB03     		.2byte	0x3eb
 1796 045f 6B000000 		.4byte	0x6b
 1797 0463 00000000 		.4byte	.LFB18
 1798 0467 0C000000 		.4byte	.LFE18-.LFB18
 1799 046b 01       		.uleb128 0x1
 1800 046c 9C       		.byte	0x9c
 1801 046d 10       		.uleb128 0x10
 1802 046e 47010000 		.4byte	.LASF52
 1803 0472 01       		.byte	0x1
 1804 0473 1104     		.2byte	0x411
 1805 0475 00000000 		.4byte	.LFB19
 1806 0479 18000000 		.4byte	.LFE19-.LFB19
 1807 047d 01       		.uleb128 0x1
 1808 047e 9C       		.byte	0x9c
 1809 047f 92040000 		.4byte	0x492
 1810 0483 11       		.uleb128 0x11
 1811 0484 99000000 		.4byte	.LASF49
 1812 0488 01       		.byte	0x1
 1813 0489 1104     		.2byte	0x411
 1814 048b 6B000000 		.4byte	0x6b
 1815 048f 01       		.uleb128 0x1
 1816 0490 50       		.byte	0x50
 1817 0491 00       		.byte	0
 1818 0492 10       		.uleb128 0x10
 1819 0493 EE040000 		.4byte	.LASF53
 1820 0497 01       		.byte	0x1
 1821 0498 7904     		.2byte	0x479
 1822 049a 00000000 		.4byte	.LFB20
 1823 049e 24000000 		.4byte	.LFE20-.LFB20
 1824 04a2 01       		.uleb128 0x1
 1825 04a3 9C       		.byte	0x9c
 1826 04a4 D2040000 		.4byte	0x4d2
 1827 04a8 15       		.uleb128 0x15
 1828 04a9 A4000000 		.4byte	.LASF54
 1829 04ad 01       		.byte	0x1
 1830 04ae 7904     		.2byte	0x479
 1831 04b0 D2040000 		.4byte	0x4d2
 1832 04b4 80010000 		.4byte	.LLST10
 1833 04b8 13       		.uleb128 0x13
 1834 04b9 D2020000 		.4byte	.LASF55
 1835 04bd 01       		.byte	0x1
 1836 04be 7B04     		.2byte	0x47b
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 61


 1837 04c0 76000000 		.4byte	0x76
 1838 04c4 C2010000 		.4byte	.LLST11
 1839 04c8 0E       		.uleb128 0xe
 1840 04c9 10000000 		.4byte	.LVL62
 1841 04cd 6D040000 		.4byte	0x46d
 1842 04d1 00       		.byte	0
 1843 04d2 07       		.uleb128 0x7
 1844 04d3 04       		.byte	0x4
 1845 04d4 D8040000 		.4byte	0x4d8
 1846 04d8 16       		.uleb128 0x16
 1847 04d9 9A000000 		.4byte	0x9a
 1848 04dd 10       		.uleb128 0x10
 1849 04de 34020000 		.4byte	.LASF56
 1850 04e2 01       		.byte	0x1
 1851 04e3 A704     		.2byte	0x4a7
 1852 04e5 00000000 		.4byte	.LFB21
 1853 04e9 28000000 		.4byte	.LFE21-.LFB21
 1854 04ed 01       		.uleb128 0x1
 1855 04ee 9C       		.byte	0x9c
 1856 04ef 2D050000 		.4byte	0x52d
 1857 04f3 15       		.uleb128 0x15
 1858 04f4 A4000000 		.4byte	.LASF54
 1859 04f8 01       		.byte	0x1
 1860 04f9 A704     		.2byte	0x4a7
 1861 04fb 2D050000 		.4byte	0x52d
 1862 04ff 10020000 		.4byte	.LLST12
 1863 0503 15       		.uleb128 0x15
 1864 0504 20040000 		.4byte	.LASF57
 1865 0508 01       		.byte	0x1
 1866 0509 A704     		.2byte	0x4a7
 1867 050b 6B000000 		.4byte	0x6b
 1868 050f 52020000 		.4byte	.LLST13
 1869 0513 13       		.uleb128 0x13
 1870 0514 D2020000 		.4byte	.LASF55
 1871 0518 01       		.byte	0x1
 1872 0519 AA04     		.2byte	0x4aa
 1873 051b 6B000000 		.4byte	0x6b
 1874 051f 8C020000 		.4byte	.LLST14
 1875 0523 0E       		.uleb128 0xe
 1876 0524 14000000 		.4byte	.LVL71
 1877 0528 6D040000 		.4byte	0x46d
 1878 052c 00       		.byte	0
 1879 052d 07       		.uleb128 0x7
 1880 052e 04       		.byte	0x4
 1881 052f 33050000 		.4byte	0x533
 1882 0533 16       		.uleb128 0x16
 1883 0534 6B000000 		.4byte	0x6b
 1884 0538 10       		.uleb128 0x10
 1885 0539 06020000 		.4byte	.LASF58
 1886 053d 01       		.byte	0x1
 1887 053e CE04     		.2byte	0x4ce
 1888 0540 00000000 		.4byte	.LFB22
 1889 0544 20000000 		.4byte	.LFE22-.LFB22
 1890 0548 01       		.uleb128 0x1
 1891 0549 9C       		.byte	0x9c
 1892 054a 8A050000 		.4byte	0x58a
 1893 054e 15       		.uleb128 0x15
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 62


 1894 054f 99000000 		.4byte	.LASF49
 1895 0553 01       		.byte	0x1
 1896 0554 CE04     		.2byte	0x4ce
 1897 0556 6B000000 		.4byte	0x6b
 1898 055a DA020000 		.4byte	.LLST15
 1899 055e 0E       		.uleb128 0xe
 1900 055f 0C000000 		.4byte	.LVL78
 1901 0563 6D040000 		.4byte	0x46d
 1902 0567 0A       		.uleb128 0xa
 1903 0568 12000000 		.4byte	.LVL79
 1904 056c 6D040000 		.4byte	0x46d
 1905 0570 7A050000 		.4byte	0x57a
 1906 0574 0B       		.uleb128 0xb
 1907 0575 01       		.uleb128 0x1
 1908 0576 50       		.byte	0x50
 1909 0577 01       		.uleb128 0x1
 1910 0578 3D       		.byte	0x3d
 1911 0579 00       		.byte	0
 1912 057a 0C       		.uleb128 0xc
 1913 057b 18000000 		.4byte	.LVL80
 1914 057f 6D040000 		.4byte	0x46d
 1915 0583 0B       		.uleb128 0xb
 1916 0584 01       		.uleb128 0x1
 1917 0585 50       		.byte	0x50
 1918 0586 01       		.uleb128 0x1
 1919 0587 3A       		.byte	0x3a
 1920 0588 00       		.byte	0
 1921 0589 00       		.byte	0
 1922 058a 12       		.uleb128 0x12
 1923 058b B8030000 		.4byte	.LASF59
 1924 058f 01       		.byte	0x1
 1925 0590 F904     		.2byte	0x4f9
 1926 0592 6B000000 		.4byte	0x6b
 1927 0596 00000000 		.4byte	.LFB23
 1928 059a 24000000 		.4byte	.LFE23-.LFB23
 1929 059e 01       		.uleb128 0x1
 1930 059f 9C       		.byte	0x9c
 1931 05a0 B5050000 		.4byte	0x5b5
 1932 05a4 13       		.uleb128 0x13
 1933 05a5 71020000 		.4byte	.LASF40
 1934 05a9 01       		.byte	0x1
 1935 05aa FC04     		.2byte	0x4fc
 1936 05ac 6B000000 		.4byte	0x6b
 1937 05b0 FB020000 		.4byte	.LLST16
 1938 05b4 00       		.byte	0
 1939 05b5 10       		.uleb128 0x10
 1940 05b6 F3010000 		.4byte	.LASF60
 1941 05ba 01       		.byte	0x1
 1942 05bb 4A05     		.2byte	0x54a
 1943 05bd 00000000 		.4byte	.LFB24
 1944 05c1 24000000 		.4byte	.LFE24-.LFB24
 1945 05c5 01       		.uleb128 0x1
 1946 05c6 9C       		.byte	0x9c
 1947 05c7 EE050000 		.4byte	0x5ee
 1948 05cb 13       		.uleb128 0x13
 1949 05cc 9C040000 		.4byte	.LASF24
 1950 05d0 01       		.byte	0x1
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 63


 1951 05d1 4C05     		.2byte	0x54c
 1952 05d3 6B000000 		.4byte	0x6b
 1953 05d7 19030000 		.4byte	.LLST17
 1954 05db 0E       		.uleb128 0xe
 1955 05dc 06000000 		.4byte	.LVL83
 1956 05e0 22070000 		.4byte	0x722
 1957 05e4 0E       		.uleb128 0xe
 1958 05e5 1C000000 		.4byte	.LVL84
 1959 05e9 34070000 		.4byte	0x734
 1960 05ed 00       		.byte	0
 1961 05ee 10       		.uleb128 0x10
 1962 05ef 11040000 		.4byte	.LASF61
 1963 05f3 01       		.byte	0x1
 1964 05f4 A005     		.2byte	0x5a0
 1965 05f6 00000000 		.4byte	.LFB25
 1966 05fa 58000000 		.4byte	.LFE25-.LFB25
 1967 05fe 01       		.uleb128 0x1
 1968 05ff 9C       		.byte	0x9c
 1969 0600 41060000 		.4byte	0x641
 1970 0604 15       		.uleb128 0x15
 1971 0605 D1010000 		.4byte	.LASF62
 1972 0609 01       		.byte	0x1
 1973 060a A005     		.2byte	0x5a0
 1974 060c 6B000000 		.4byte	0x6b
 1975 0610 2C030000 		.4byte	.LLST18
 1976 0614 17       		.uleb128 0x17
 1977 0615 06000000 		.4byte	.LBB2
 1978 0619 52000000 		.4byte	.LBE2-.LBB2
 1979 061d 13       		.uleb128 0x13
 1980 061e 24030000 		.4byte	.LASF63
 1981 0622 01       		.byte	0x1
 1982 0623 A805     		.2byte	0x5a8
 1983 0625 6B000000 		.4byte	0x6b
 1984 0629 4D030000 		.4byte	.LLST19
 1985 062d 14       		.uleb128 0x14
 1986 062e 35010000 		.4byte	.LASF64
 1987 0632 01       		.byte	0x1
 1988 0633 D005     		.2byte	0x5d0
 1989 0635 6B000000 		.4byte	0x6b
 1990 0639 05       		.uleb128 0x5
 1991 063a 03       		.byte	0x3
 1992 063b 06000000 		.4byte	txPeriod.5011
 1993 063f 00       		.byte	0
 1994 0640 00       		.byte	0
 1995 0641 10       		.uleb128 0x10
 1996 0642 E2020000 		.4byte	.LASF65
 1997 0646 01       		.byte	0x1
 1998 0647 2406     		.2byte	0x624
 1999 0649 00000000 		.4byte	.LFB26
 2000 064d 02000000 		.4byte	.LFE26-.LFB26
 2001 0651 01       		.uleb128 0x1
 2002 0652 9C       		.byte	0x9c
 2003 0653 66060000 		.4byte	0x666
 2004 0657 11       		.uleb128 0x11
 2005 0658 8A010000 		.4byte	.LASF43
 2006 065c 01       		.byte	0x1
 2007 065d 2406     		.2byte	0x624
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 64


 2008 065f 6B000000 		.4byte	0x6b
 2009 0663 01       		.uleb128 0x1
 2010 0664 50       		.byte	0x50
 2011 0665 00       		.byte	0
 2012 0666 18       		.uleb128 0x18
 2013 0667 AD040000 		.4byte	.LASF66
 2014 066b 01       		.byte	0x1
 2015 066c 1B       		.byte	0x1b
 2016 066d 6B000000 		.4byte	0x6b
 2017 0671 05       		.uleb128 0x5
 2018 0672 03       		.byte	0x3
 2019 0673 00000000 		.4byte	UART_initVar
 2020 0677 18       		.uleb128 0x18
 2021 0678 A1030000 		.4byte	.LASF67
 2022 067c 01       		.byte	0x1
 2023 067d 24       		.byte	0x24
 2024 067e 6B000000 		.4byte	0x6b
 2025 0682 05       		.uleb128 0x5
 2026 0683 03       		.byte	0x3
 2027 0684 00000000 		.4byte	UART_errorStatus
 2028 0688 19       		.uleb128 0x19
 2029 0689 6B000000 		.4byte	0x6b
 2030 068d 98060000 		.4byte	0x698
 2031 0691 1A       		.uleb128 0x1a
 2032 0692 E1000000 		.4byte	0xe1
 2033 0696 08       		.byte	0x8
 2034 0697 00       		.byte	0
 2035 0698 18       		.uleb128 0x18
 2036 0699 E0040000 		.4byte	.LASF68
 2037 069d 01       		.byte	0x1
 2038 069e 25       		.byte	0x25
 2039 069f A9060000 		.4byte	0x6a9
 2040 06a3 05       		.uleb128 0x5
 2041 06a4 03       		.byte	0x3
 2042 06a5 00000000 		.4byte	UART_rxBuffer
 2043 06a9 06       		.uleb128 0x6
 2044 06aa 88060000 		.4byte	0x688
 2045 06ae 18       		.uleb128 0x18
 2046 06af 89020000 		.4byte	.LASF69
 2047 06b3 01       		.byte	0x1
 2048 06b4 26       		.byte	0x26
 2049 06b5 B8000000 		.4byte	0xb8
 2050 06b9 05       		.uleb128 0x5
 2051 06ba 03       		.byte	0x3
 2052 06bb 00000000 		.4byte	UART_rxBufferRead
 2053 06bf 18       		.uleb128 0x18
 2054 06c0 96010000 		.4byte	.LASF70
 2055 06c4 01       		.byte	0x1
 2056 06c5 27       		.byte	0x27
 2057 06c6 B8000000 		.4byte	0xb8
 2058 06ca 05       		.uleb128 0x5
 2059 06cb 03       		.byte	0x3
 2060 06cc 00000000 		.4byte	UART_rxBufferWrite
 2061 06d0 18       		.uleb128 0x18
 2062 06d1 59020000 		.4byte	.LASF71
 2063 06d5 01       		.byte	0x1
 2064 06d6 28       		.byte	0x28
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 65


 2065 06d7 B8000000 		.4byte	0xb8
 2066 06db 05       		.uleb128 0x5
 2067 06dc 03       		.byte	0x3
 2068 06dd 00000000 		.4byte	UART_rxBufferLoopDetect
 2069 06e1 18       		.uleb128 0x18
 2070 06e2 E5000000 		.4byte	.LASF72
 2071 06e6 01       		.byte	0x1
 2072 06e7 29       		.byte	0x29
 2073 06e8 B8000000 		.4byte	0xb8
 2074 06ec 05       		.uleb128 0x5
 2075 06ed 03       		.byte	0x3
 2076 06ee 00000000 		.4byte	UART_rxBufferOverflow
 2077 06f2 1B       		.uleb128 0x1b
 2078 06f3 B0010000 		.4byte	.LASF80
 2079 06f7 03       		.byte	0x3
 2080 06f8 89       		.byte	0x89
 2081 06f9 CE000000 		.4byte	0xce
 2082 06fd 0C070000 		.4byte	0x70c
 2083 0701 1C       		.uleb128 0x1c
 2084 0702 6B000000 		.4byte	0x6b
 2085 0706 1C       		.uleb128 0x1c
 2086 0707 CE000000 		.4byte	0xce
 2087 070b 00       		.byte	0
 2088 070c 1D       		.uleb128 0x1d
 2089 070d 90030000 		.4byte	.LASF73
 2090 0711 03       		.byte	0x3
 2091 0712 8C       		.byte	0x8c
 2092 0713 22070000 		.4byte	0x722
 2093 0717 1C       		.uleb128 0x1c
 2094 0718 6B000000 		.4byte	0x6b
 2095 071c 1C       		.uleb128 0x1c
 2096 071d 6B000000 		.4byte	0x6b
 2097 0721 00       		.byte	0
 2098 0722 1E       		.uleb128 0x1e
 2099 0723 42020000 		.4byte	.LASF81
 2100 0727 03       		.byte	0x3
 2101 0728 7E       		.byte	0x7e
 2102 0729 6B000000 		.4byte	0x6b
 2103 072d 1F       		.uleb128 0x1f
 2104 072e 0A030000 		.4byte	.LASF75
 2105 0732 04       		.byte	0x4
 2106 0733 27       		.byte	0x27
 2107 0734 1D       		.uleb128 0x1d
 2108 0735 07000000 		.4byte	.LASF74
 2109 0739 03       		.byte	0x3
 2110 073a 7F       		.byte	0x7f
 2111 073b 45070000 		.4byte	0x745
 2112 073f 1C       		.uleb128 0x1c
 2113 0740 6B000000 		.4byte	0x6b
 2114 0744 00       		.byte	0
 2115 0745 1F       		.uleb128 0x1f
 2116 0746 7D030000 		.4byte	.LASF76
 2117 074a 04       		.byte	0x4
 2118 074b 28       		.byte	0x28
 2119 074c 00       		.byte	0
 2120              		.section	.debug_abbrev,"",%progbits
 2121              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 66


 2122 0000 01       		.uleb128 0x1
 2123 0001 11       		.uleb128 0x11
 2124 0002 01       		.byte	0x1
 2125 0003 25       		.uleb128 0x25
 2126 0004 0E       		.uleb128 0xe
 2127 0005 13       		.uleb128 0x13
 2128 0006 0B       		.uleb128 0xb
 2129 0007 03       		.uleb128 0x3
 2130 0008 0E       		.uleb128 0xe
 2131 0009 1B       		.uleb128 0x1b
 2132 000a 0E       		.uleb128 0xe
 2133 000b 55       		.uleb128 0x55
 2134 000c 17       		.uleb128 0x17
 2135 000d 11       		.uleb128 0x11
 2136 000e 01       		.uleb128 0x1
 2137 000f 10       		.uleb128 0x10
 2138 0010 17       		.uleb128 0x17
 2139 0011 00       		.byte	0
 2140 0012 00       		.byte	0
 2141 0013 02       		.uleb128 0x2
 2142 0014 24       		.uleb128 0x24
 2143 0015 00       		.byte	0
 2144 0016 0B       		.uleb128 0xb
 2145 0017 0B       		.uleb128 0xb
 2146 0018 3E       		.uleb128 0x3e
 2147 0019 0B       		.uleb128 0xb
 2148 001a 03       		.uleb128 0x3
 2149 001b 0E       		.uleb128 0xe
 2150 001c 00       		.byte	0
 2151 001d 00       		.byte	0
 2152 001e 03       		.uleb128 0x3
 2153 001f 24       		.uleb128 0x24
 2154 0020 00       		.byte	0
 2155 0021 0B       		.uleb128 0xb
 2156 0022 0B       		.uleb128 0xb
 2157 0023 3E       		.uleb128 0x3e
 2158 0024 0B       		.uleb128 0xb
 2159 0025 03       		.uleb128 0x3
 2160 0026 08       		.uleb128 0x8
 2161 0027 00       		.byte	0
 2162 0028 00       		.byte	0
 2163 0029 04       		.uleb128 0x4
 2164 002a 16       		.uleb128 0x16
 2165 002b 00       		.byte	0
 2166 002c 03       		.uleb128 0x3
 2167 002d 0E       		.uleb128 0xe
 2168 002e 3A       		.uleb128 0x3a
 2169 002f 0B       		.uleb128 0xb
 2170 0030 3B       		.uleb128 0x3b
 2171 0031 0B       		.uleb128 0xb
 2172 0032 49       		.uleb128 0x49
 2173 0033 13       		.uleb128 0x13
 2174 0034 00       		.byte	0
 2175 0035 00       		.byte	0
 2176 0036 05       		.uleb128 0x5
 2177 0037 16       		.uleb128 0x16
 2178 0038 00       		.byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 67


 2179 0039 03       		.uleb128 0x3
 2180 003a 0E       		.uleb128 0xe
 2181 003b 3A       		.uleb128 0x3a
 2182 003c 0B       		.uleb128 0xb
 2183 003d 3B       		.uleb128 0x3b
 2184 003e 05       		.uleb128 0x5
 2185 003f 49       		.uleb128 0x49
 2186 0040 13       		.uleb128 0x13
 2187 0041 00       		.byte	0
 2188 0042 00       		.byte	0
 2189 0043 06       		.uleb128 0x6
 2190 0044 35       		.uleb128 0x35
 2191 0045 00       		.byte	0
 2192 0046 49       		.uleb128 0x49
 2193 0047 13       		.uleb128 0x13
 2194 0048 00       		.byte	0
 2195 0049 00       		.byte	0
 2196 004a 07       		.uleb128 0x7
 2197 004b 0F       		.uleb128 0xf
 2198 004c 00       		.byte	0
 2199 004d 0B       		.uleb128 0xb
 2200 004e 0B       		.uleb128 0xb
 2201 004f 49       		.uleb128 0x49
 2202 0050 13       		.uleb128 0x13
 2203 0051 00       		.byte	0
 2204 0052 00       		.byte	0
 2205 0053 08       		.uleb128 0x8
 2206 0054 15       		.uleb128 0x15
 2207 0055 00       		.byte	0
 2208 0056 27       		.uleb128 0x27
 2209 0057 19       		.uleb128 0x19
 2210 0058 00       		.byte	0
 2211 0059 00       		.byte	0
 2212 005a 09       		.uleb128 0x9
 2213 005b 2E       		.uleb128 0x2e
 2214 005c 01       		.byte	0x1
 2215 005d 3F       		.uleb128 0x3f
 2216 005e 19       		.uleb128 0x19
 2217 005f 03       		.uleb128 0x3
 2218 0060 0E       		.uleb128 0xe
 2219 0061 3A       		.uleb128 0x3a
 2220 0062 0B       		.uleb128 0xb
 2221 0063 3B       		.uleb128 0x3b
 2222 0064 0B       		.uleb128 0xb
 2223 0065 27       		.uleb128 0x27
 2224 0066 19       		.uleb128 0x19
 2225 0067 11       		.uleb128 0x11
 2226 0068 01       		.uleb128 0x1
 2227 0069 12       		.uleb128 0x12
 2228 006a 06       		.uleb128 0x6
 2229 006b 40       		.uleb128 0x40
 2230 006c 18       		.uleb128 0x18
 2231 006d 9742     		.uleb128 0x2117
 2232 006f 19       		.uleb128 0x19
 2233 0070 01       		.uleb128 0x1
 2234 0071 13       		.uleb128 0x13
 2235 0072 00       		.byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 68


 2236 0073 00       		.byte	0
 2237 0074 0A       		.uleb128 0xa
 2238 0075 898201   		.uleb128 0x4109
 2239 0078 01       		.byte	0x1
 2240 0079 11       		.uleb128 0x11
 2241 007a 01       		.uleb128 0x1
 2242 007b 31       		.uleb128 0x31
 2243 007c 13       		.uleb128 0x13
 2244 007d 01       		.uleb128 0x1
 2245 007e 13       		.uleb128 0x13
 2246 007f 00       		.byte	0
 2247 0080 00       		.byte	0
 2248 0081 0B       		.uleb128 0xb
 2249 0082 8A8201   		.uleb128 0x410a
 2250 0085 00       		.byte	0
 2251 0086 02       		.uleb128 0x2
 2252 0087 18       		.uleb128 0x18
 2253 0088 9142     		.uleb128 0x2111
 2254 008a 18       		.uleb128 0x18
 2255 008b 00       		.byte	0
 2256 008c 00       		.byte	0
 2257 008d 0C       		.uleb128 0xc
 2258 008e 898201   		.uleb128 0x4109
 2259 0091 01       		.byte	0x1
 2260 0092 11       		.uleb128 0x11
 2261 0093 01       		.uleb128 0x1
 2262 0094 31       		.uleb128 0x31
 2263 0095 13       		.uleb128 0x13
 2264 0096 00       		.byte	0
 2265 0097 00       		.byte	0
 2266 0098 0D       		.uleb128 0xd
 2267 0099 34       		.uleb128 0x34
 2268 009a 00       		.byte	0
 2269 009b 03       		.uleb128 0x3
 2270 009c 0E       		.uleb128 0xe
 2271 009d 3A       		.uleb128 0x3a
 2272 009e 0B       		.uleb128 0xb
 2273 009f 3B       		.uleb128 0x3b
 2274 00a0 0B       		.uleb128 0xb
 2275 00a1 49       		.uleb128 0x49
 2276 00a2 13       		.uleb128 0x13
 2277 00a3 02       		.uleb128 0x2
 2278 00a4 17       		.uleb128 0x17
 2279 00a5 00       		.byte	0
 2280 00a6 00       		.byte	0
 2281 00a7 0E       		.uleb128 0xe
 2282 00a8 898201   		.uleb128 0x4109
 2283 00ab 00       		.byte	0
 2284 00ac 11       		.uleb128 0x11
 2285 00ad 01       		.uleb128 0x1
 2286 00ae 31       		.uleb128 0x31
 2287 00af 13       		.uleb128 0x13
 2288 00b0 00       		.byte	0
 2289 00b1 00       		.byte	0
 2290 00b2 0F       		.uleb128 0xf
 2291 00b3 2E       		.uleb128 0x2e
 2292 00b4 00       		.byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 69


 2293 00b5 3F       		.uleb128 0x3f
 2294 00b6 19       		.uleb128 0x19
 2295 00b7 03       		.uleb128 0x3
 2296 00b8 0E       		.uleb128 0xe
 2297 00b9 3A       		.uleb128 0x3a
 2298 00ba 0B       		.uleb128 0xb
 2299 00bb 3B       		.uleb128 0x3b
 2300 00bc 05       		.uleb128 0x5
 2301 00bd 27       		.uleb128 0x27
 2302 00be 19       		.uleb128 0x19
 2303 00bf 49       		.uleb128 0x49
 2304 00c0 13       		.uleb128 0x13
 2305 00c1 11       		.uleb128 0x11
 2306 00c2 01       		.uleb128 0x1
 2307 00c3 12       		.uleb128 0x12
 2308 00c4 06       		.uleb128 0x6
 2309 00c5 40       		.uleb128 0x40
 2310 00c6 18       		.uleb128 0x18
 2311 00c7 9742     		.uleb128 0x2117
 2312 00c9 19       		.uleb128 0x19
 2313 00ca 00       		.byte	0
 2314 00cb 00       		.byte	0
 2315 00cc 10       		.uleb128 0x10
 2316 00cd 2E       		.uleb128 0x2e
 2317 00ce 01       		.byte	0x1
 2318 00cf 3F       		.uleb128 0x3f
 2319 00d0 19       		.uleb128 0x19
 2320 00d1 03       		.uleb128 0x3
 2321 00d2 0E       		.uleb128 0xe
 2322 00d3 3A       		.uleb128 0x3a
 2323 00d4 0B       		.uleb128 0xb
 2324 00d5 3B       		.uleb128 0x3b
 2325 00d6 05       		.uleb128 0x5
 2326 00d7 27       		.uleb128 0x27
 2327 00d8 19       		.uleb128 0x19
 2328 00d9 11       		.uleb128 0x11
 2329 00da 01       		.uleb128 0x1
 2330 00db 12       		.uleb128 0x12
 2331 00dc 06       		.uleb128 0x6
 2332 00dd 40       		.uleb128 0x40
 2333 00de 18       		.uleb128 0x18
 2334 00df 9742     		.uleb128 0x2117
 2335 00e1 19       		.uleb128 0x19
 2336 00e2 01       		.uleb128 0x1
 2337 00e3 13       		.uleb128 0x13
 2338 00e4 00       		.byte	0
 2339 00e5 00       		.byte	0
 2340 00e6 11       		.uleb128 0x11
 2341 00e7 05       		.uleb128 0x5
 2342 00e8 00       		.byte	0
 2343 00e9 03       		.uleb128 0x3
 2344 00ea 0E       		.uleb128 0xe
 2345 00eb 3A       		.uleb128 0x3a
 2346 00ec 0B       		.uleb128 0xb
 2347 00ed 3B       		.uleb128 0x3b
 2348 00ee 05       		.uleb128 0x5
 2349 00ef 49       		.uleb128 0x49
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 70


 2350 00f0 13       		.uleb128 0x13
 2351 00f1 02       		.uleb128 0x2
 2352 00f2 18       		.uleb128 0x18
 2353 00f3 00       		.byte	0
 2354 00f4 00       		.byte	0
 2355 00f5 12       		.uleb128 0x12
 2356 00f6 2E       		.uleb128 0x2e
 2357 00f7 01       		.byte	0x1
 2358 00f8 3F       		.uleb128 0x3f
 2359 00f9 19       		.uleb128 0x19
 2360 00fa 03       		.uleb128 0x3
 2361 00fb 0E       		.uleb128 0xe
 2362 00fc 3A       		.uleb128 0x3a
 2363 00fd 0B       		.uleb128 0xb
 2364 00fe 3B       		.uleb128 0x3b
 2365 00ff 05       		.uleb128 0x5
 2366 0100 27       		.uleb128 0x27
 2367 0101 19       		.uleb128 0x19
 2368 0102 49       		.uleb128 0x49
 2369 0103 13       		.uleb128 0x13
 2370 0104 11       		.uleb128 0x11
 2371 0105 01       		.uleb128 0x1
 2372 0106 12       		.uleb128 0x12
 2373 0107 06       		.uleb128 0x6
 2374 0108 40       		.uleb128 0x40
 2375 0109 18       		.uleb128 0x18
 2376 010a 9742     		.uleb128 0x2117
 2377 010c 19       		.uleb128 0x19
 2378 010d 01       		.uleb128 0x1
 2379 010e 13       		.uleb128 0x13
 2380 010f 00       		.byte	0
 2381 0110 00       		.byte	0
 2382 0111 13       		.uleb128 0x13
 2383 0112 34       		.uleb128 0x34
 2384 0113 00       		.byte	0
 2385 0114 03       		.uleb128 0x3
 2386 0115 0E       		.uleb128 0xe
 2387 0116 3A       		.uleb128 0x3a
 2388 0117 0B       		.uleb128 0xb
 2389 0118 3B       		.uleb128 0x3b
 2390 0119 05       		.uleb128 0x5
 2391 011a 49       		.uleb128 0x49
 2392 011b 13       		.uleb128 0x13
 2393 011c 02       		.uleb128 0x2
 2394 011d 17       		.uleb128 0x17
 2395 011e 00       		.byte	0
 2396 011f 00       		.byte	0
 2397 0120 14       		.uleb128 0x14
 2398 0121 34       		.uleb128 0x34
 2399 0122 00       		.byte	0
 2400 0123 03       		.uleb128 0x3
 2401 0124 0E       		.uleb128 0xe
 2402 0125 3A       		.uleb128 0x3a
 2403 0126 0B       		.uleb128 0xb
 2404 0127 3B       		.uleb128 0x3b
 2405 0128 05       		.uleb128 0x5
 2406 0129 49       		.uleb128 0x49
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 71


 2407 012a 13       		.uleb128 0x13
 2408 012b 02       		.uleb128 0x2
 2409 012c 18       		.uleb128 0x18
 2410 012d 00       		.byte	0
 2411 012e 00       		.byte	0
 2412 012f 15       		.uleb128 0x15
 2413 0130 05       		.uleb128 0x5
 2414 0131 00       		.byte	0
 2415 0132 03       		.uleb128 0x3
 2416 0133 0E       		.uleb128 0xe
 2417 0134 3A       		.uleb128 0x3a
 2418 0135 0B       		.uleb128 0xb
 2419 0136 3B       		.uleb128 0x3b
 2420 0137 05       		.uleb128 0x5
 2421 0138 49       		.uleb128 0x49
 2422 0139 13       		.uleb128 0x13
 2423 013a 02       		.uleb128 0x2
 2424 013b 17       		.uleb128 0x17
 2425 013c 00       		.byte	0
 2426 013d 00       		.byte	0
 2427 013e 16       		.uleb128 0x16
 2428 013f 26       		.uleb128 0x26
 2429 0140 00       		.byte	0
 2430 0141 49       		.uleb128 0x49
 2431 0142 13       		.uleb128 0x13
 2432 0143 00       		.byte	0
 2433 0144 00       		.byte	0
 2434 0145 17       		.uleb128 0x17
 2435 0146 0B       		.uleb128 0xb
 2436 0147 01       		.byte	0x1
 2437 0148 11       		.uleb128 0x11
 2438 0149 01       		.uleb128 0x1
 2439 014a 12       		.uleb128 0x12
 2440 014b 06       		.uleb128 0x6
 2441 014c 00       		.byte	0
 2442 014d 00       		.byte	0
 2443 014e 18       		.uleb128 0x18
 2444 014f 34       		.uleb128 0x34
 2445 0150 00       		.byte	0
 2446 0151 03       		.uleb128 0x3
 2447 0152 0E       		.uleb128 0xe
 2448 0153 3A       		.uleb128 0x3a
 2449 0154 0B       		.uleb128 0xb
 2450 0155 3B       		.uleb128 0x3b
 2451 0156 0B       		.uleb128 0xb
 2452 0157 49       		.uleb128 0x49
 2453 0158 13       		.uleb128 0x13
 2454 0159 3F       		.uleb128 0x3f
 2455 015a 19       		.uleb128 0x19
 2456 015b 02       		.uleb128 0x2
 2457 015c 18       		.uleb128 0x18
 2458 015d 00       		.byte	0
 2459 015e 00       		.byte	0
 2460 015f 19       		.uleb128 0x19
 2461 0160 01       		.uleb128 0x1
 2462 0161 01       		.byte	0x1
 2463 0162 49       		.uleb128 0x49
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 72


 2464 0163 13       		.uleb128 0x13
 2465 0164 01       		.uleb128 0x1
 2466 0165 13       		.uleb128 0x13
 2467 0166 00       		.byte	0
 2468 0167 00       		.byte	0
 2469 0168 1A       		.uleb128 0x1a
 2470 0169 21       		.uleb128 0x21
 2471 016a 00       		.byte	0
 2472 016b 49       		.uleb128 0x49
 2473 016c 13       		.uleb128 0x13
 2474 016d 2F       		.uleb128 0x2f
 2475 016e 0B       		.uleb128 0xb
 2476 016f 00       		.byte	0
 2477 0170 00       		.byte	0
 2478 0171 1B       		.uleb128 0x1b
 2479 0172 2E       		.uleb128 0x2e
 2480 0173 01       		.byte	0x1
 2481 0174 3F       		.uleb128 0x3f
 2482 0175 19       		.uleb128 0x19
 2483 0176 03       		.uleb128 0x3
 2484 0177 0E       		.uleb128 0xe
 2485 0178 3A       		.uleb128 0x3a
 2486 0179 0B       		.uleb128 0xb
 2487 017a 3B       		.uleb128 0x3b
 2488 017b 0B       		.uleb128 0xb
 2489 017c 27       		.uleb128 0x27
 2490 017d 19       		.uleb128 0x19
 2491 017e 49       		.uleb128 0x49
 2492 017f 13       		.uleb128 0x13
 2493 0180 3C       		.uleb128 0x3c
 2494 0181 19       		.uleb128 0x19
 2495 0182 01       		.uleb128 0x1
 2496 0183 13       		.uleb128 0x13
 2497 0184 00       		.byte	0
 2498 0185 00       		.byte	0
 2499 0186 1C       		.uleb128 0x1c
 2500 0187 05       		.uleb128 0x5
 2501 0188 00       		.byte	0
 2502 0189 49       		.uleb128 0x49
 2503 018a 13       		.uleb128 0x13
 2504 018b 00       		.byte	0
 2505 018c 00       		.byte	0
 2506 018d 1D       		.uleb128 0x1d
 2507 018e 2E       		.uleb128 0x2e
 2508 018f 01       		.byte	0x1
 2509 0190 3F       		.uleb128 0x3f
 2510 0191 19       		.uleb128 0x19
 2511 0192 03       		.uleb128 0x3
 2512 0193 0E       		.uleb128 0xe
 2513 0194 3A       		.uleb128 0x3a
 2514 0195 0B       		.uleb128 0xb
 2515 0196 3B       		.uleb128 0x3b
 2516 0197 0B       		.uleb128 0xb
 2517 0198 27       		.uleb128 0x27
 2518 0199 19       		.uleb128 0x19
 2519 019a 3C       		.uleb128 0x3c
 2520 019b 19       		.uleb128 0x19
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 73


 2521 019c 01       		.uleb128 0x1
 2522 019d 13       		.uleb128 0x13
 2523 019e 00       		.byte	0
 2524 019f 00       		.byte	0
 2525 01a0 1E       		.uleb128 0x1e
 2526 01a1 2E       		.uleb128 0x2e
 2527 01a2 00       		.byte	0
 2528 01a3 3F       		.uleb128 0x3f
 2529 01a4 19       		.uleb128 0x19
 2530 01a5 03       		.uleb128 0x3
 2531 01a6 0E       		.uleb128 0xe
 2532 01a7 3A       		.uleb128 0x3a
 2533 01a8 0B       		.uleb128 0xb
 2534 01a9 3B       		.uleb128 0x3b
 2535 01aa 0B       		.uleb128 0xb
 2536 01ab 27       		.uleb128 0x27
 2537 01ac 19       		.uleb128 0x19
 2538 01ad 49       		.uleb128 0x49
 2539 01ae 13       		.uleb128 0x13
 2540 01af 3C       		.uleb128 0x3c
 2541 01b0 19       		.uleb128 0x19
 2542 01b1 00       		.byte	0
 2543 01b2 00       		.byte	0
 2544 01b3 1F       		.uleb128 0x1f
 2545 01b4 2E       		.uleb128 0x2e
 2546 01b5 00       		.byte	0
 2547 01b6 3F       		.uleb128 0x3f
 2548 01b7 19       		.uleb128 0x19
 2549 01b8 03       		.uleb128 0x3
 2550 01b9 0E       		.uleb128 0xe
 2551 01ba 3A       		.uleb128 0x3a
 2552 01bb 0B       		.uleb128 0xb
 2553 01bc 3B       		.uleb128 0x3b
 2554 01bd 0B       		.uleb128 0xb
 2555 01be 27       		.uleb128 0x27
 2556 01bf 19       		.uleb128 0x19
 2557 01c0 3C       		.uleb128 0x3c
 2558 01c1 19       		.uleb128 0x19
 2559 01c2 00       		.byte	0
 2560 01c3 00       		.byte	0
 2561 01c4 00       		.byte	0
 2562              		.section	.debug_loc,"",%progbits
 2563              	.Ldebug_loc0:
 2564              	.LLST0:
 2565 0000 08000000 		.4byte	.LVL3
 2566 0004 2F000000 		.4byte	.LVL4-1
 2567 0008 0100     		.2byte	0x1
 2568 000a 50       		.byte	0x50
 2569 000b 2F000000 		.4byte	.LVL4-1
 2570 000f 38000000 		.4byte	.LVL6
 2571 0013 0100     		.2byte	0x1
 2572 0015 54       		.byte	0x54
 2573 0016 00000000 		.4byte	0
 2574 001a 00000000 		.4byte	0
 2575              	.LLST1:
 2576 001e 08000000 		.4byte	.LVL10
 2577 0022 15000000 		.4byte	.LVL11-1
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 74


 2578 0026 0100     		.2byte	0x1
 2579 0028 50       		.byte	0x50
 2580 0029 15000000 		.4byte	.LVL11-1
 2581 002d 38000000 		.4byte	.LVL13
 2582 0031 0100     		.2byte	0x1
 2583 0033 54       		.byte	0x54
 2584 0034 00000000 		.4byte	0
 2585 0038 00000000 		.4byte	0
 2586              	.LLST2:
 2587 003c 22000000 		.4byte	.LVL18
 2588 0040 40000000 		.4byte	.LVL23
 2589 0044 0100     		.2byte	0x1
 2590 0046 50       		.byte	0x50
 2591 0047 46000000 		.4byte	.LVL24
 2592 004b 64000000 		.4byte	.LFE7
 2593 004f 0100     		.2byte	0x1
 2594 0051 50       		.byte	0x50
 2595 0052 00000000 		.4byte	0
 2596 0056 00000000 		.4byte	0
 2597              	.LLST3:
 2598 005a 0C000000 		.4byte	.LVL16
 2599 005e 24000000 		.4byte	.LVL19
 2600 0062 0100     		.2byte	0x1
 2601 0064 52       		.byte	0x52
 2602 0065 24000000 		.4byte	.LVL19
 2603 0069 26000000 		.4byte	.LVL20
 2604 006d 0300     		.2byte	0x3
 2605 006f 72       		.byte	0x72
 2606 0070 7F       		.sleb128 -1
 2607 0071 9F       		.byte	0x9f
 2608 0072 26000000 		.4byte	.LVL20
 2609 0076 3A000000 		.4byte	.LVL22
 2610 007a 0100     		.2byte	0x1
 2611 007c 52       		.byte	0x52
 2612 007d 40000000 		.4byte	.LVL23
 2613 0081 46000000 		.4byte	.LVL24
 2614 0085 0100     		.2byte	0x1
 2615 0087 52       		.byte	0x52
 2616 0088 00000000 		.4byte	0
 2617 008c 00000000 		.4byte	0
 2618              	.LLST4:
 2619 0090 00000000 		.4byte	.LVL28
 2620 0094 22000000 		.4byte	.LVL31
 2621 0098 0200     		.2byte	0x2
 2622 009a 30       		.byte	0x30
 2623 009b 9F       		.byte	0x9f
 2624 009c 22000000 		.4byte	.LVL31
 2625 00a0 40000000 		.4byte	.LVL36
 2626 00a4 0100     		.2byte	0x1
 2627 00a6 50       		.byte	0x50
 2628 00a7 40000000 		.4byte	.LVL36
 2629 00ab 52000000 		.4byte	.LVL39
 2630 00af 0200     		.2byte	0x2
 2631 00b1 30       		.byte	0x30
 2632 00b2 9F       		.byte	0x9f
 2633 00b3 52000000 		.4byte	.LVL39
 2634 00b7 5A000000 		.4byte	.LVL40
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 75


 2635 00bb 0100     		.2byte	0x1
 2636 00bd 50       		.byte	0x50
 2637 00be 5A000000 		.4byte	.LVL40
 2638 00c2 5E000000 		.4byte	.LVL41
 2639 00c6 0200     		.2byte	0x2
 2640 00c8 30       		.byte	0x30
 2641 00c9 9F       		.byte	0x9f
 2642 00ca 5E000000 		.4byte	.LVL41
 2643 00ce 80000000 		.4byte	.LFE9
 2644 00d2 0100     		.2byte	0x1
 2645 00d4 50       		.byte	0x50
 2646 00d5 00000000 		.4byte	0
 2647 00d9 00000000 		.4byte	0
 2648              	.LLST5:
 2649 00dd 46000000 		.4byte	.LVL37
 2650 00e1 60000000 		.4byte	.LVL42
 2651 00e5 0100     		.2byte	0x1
 2652 00e7 53       		.byte	0x53
 2653 00e8 00000000 		.4byte	0
 2654 00ec 00000000 		.4byte	0
 2655              	.LLST6:
 2656 00f0 0C000000 		.4byte	.LVL29
 2657 00f4 24000000 		.4byte	.LVL32
 2658 00f8 0100     		.2byte	0x1
 2659 00fa 52       		.byte	0x52
 2660 00fb 24000000 		.4byte	.LVL32
 2661 00ff 26000000 		.4byte	.LVL33
 2662 0103 0300     		.2byte	0x3
 2663 0105 72       		.byte	0x72
 2664 0106 7F       		.sleb128 -1
 2665 0107 9F       		.byte	0x9f
 2666 0108 26000000 		.4byte	.LVL33
 2667 010c 3A000000 		.4byte	.LVL35
 2668 0110 0100     		.2byte	0x1
 2669 0112 52       		.byte	0x52
 2670 0113 40000000 		.4byte	.LVL36
 2671 0117 4E000000 		.4byte	.LVL38
 2672 011b 0100     		.2byte	0x1
 2673 011d 52       		.byte	0x52
 2674 011e 5A000000 		.4byte	.LVL40
 2675 0122 5E000000 		.4byte	.LVL41
 2676 0126 0100     		.2byte	0x1
 2677 0128 52       		.byte	0x52
 2678 0129 00000000 		.4byte	0
 2679 012d 00000000 		.4byte	0
 2680              	.LLST7:
 2681 0131 0C000000 		.4byte	.LVL43
 2682 0135 16000000 		.4byte	.LVL44
 2683 0139 0100     		.2byte	0x1
 2684 013b 54       		.byte	0x54
 2685 013c 00000000 		.4byte	0
 2686 0140 00000000 		.4byte	0
 2687              	.LLST8:
 2688 0144 36000000 		.4byte	.LVL46
 2689 0148 38000000 		.4byte	.LVL47
 2690 014c 0100     		.2byte	0x1
 2691 014e 50       		.byte	0x50
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 76


 2692 014f 44000000 		.4byte	.LVL48
 2693 0153 46000000 		.4byte	.LVL49
 2694 0157 0100     		.2byte	0x1
 2695 0159 50       		.byte	0x50
 2696 015a 48000000 		.4byte	.LVL50
 2697 015e 5C000000 		.4byte	.LFE11
 2698 0162 0100     		.2byte	0x1
 2699 0164 50       		.byte	0x50
 2700 0165 00000000 		.4byte	0
 2701 0169 00000000 		.4byte	0
 2702              	.LLST9:
 2703 016d 06000000 		.4byte	.LVL51
 2704 0171 1B000000 		.4byte	.LVL52-1
 2705 0175 0100     		.2byte	0x1
 2706 0177 50       		.byte	0x50
 2707 0178 00000000 		.4byte	0
 2708 017c 00000000 		.4byte	0
 2709              	.LLST10:
 2710 0180 00000000 		.4byte	.LVL59
 2711 0184 0C000000 		.4byte	.LVL61
 2712 0188 0100     		.2byte	0x1
 2713 018a 50       		.byte	0x50
 2714 018b 0C000000 		.4byte	.LVL61
 2715 018f 16000000 		.4byte	.LVL65
 2716 0193 0100     		.2byte	0x1
 2717 0195 55       		.byte	0x55
 2718 0196 16000000 		.4byte	.LVL65
 2719 019a 18000000 		.4byte	.LVL66
 2720 019e 0100     		.2byte	0x1
 2721 01a0 50       		.byte	0x50
 2722 01a1 18000000 		.4byte	.LVL66
 2723 01a5 20000000 		.4byte	.LVL67
 2724 01a9 0100     		.2byte	0x1
 2725 01ab 55       		.byte	0x55
 2726 01ac 20000000 		.4byte	.LVL67
 2727 01b0 24000000 		.4byte	.LFE20
 2728 01b4 0400     		.2byte	0x4
 2729 01b6 F3       		.byte	0xf3
 2730 01b7 01       		.uleb128 0x1
 2731 01b8 50       		.byte	0x50
 2732 01b9 9F       		.byte	0x9f
 2733 01ba 00000000 		.4byte	0
 2734 01be 00000000 		.4byte	0
 2735              	.LLST11:
 2736 01c2 04000000 		.4byte	.LVL60
 2737 01c6 0C000000 		.4byte	.LVL61
 2738 01ca 0200     		.2byte	0x2
 2739 01cc 30       		.byte	0x30
 2740 01cd 9F       		.byte	0x9f
 2741 01ce 0C000000 		.4byte	.LVL61
 2742 01d2 12000000 		.4byte	.LVL63
 2743 01d6 0100     		.2byte	0x1
 2744 01d8 54       		.byte	0x54
 2745 01d9 12000000 		.4byte	.LVL63
 2746 01dd 14000000 		.4byte	.LVL64
 2747 01e1 0300     		.2byte	0x3
 2748 01e3 74       		.byte	0x74
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 77


 2749 01e4 7F       		.sleb128 -1
 2750 01e5 9F       		.byte	0x9f
 2751 01e6 14000000 		.4byte	.LVL64
 2752 01ea 16000000 		.4byte	.LVL65
 2753 01ee 0100     		.2byte	0x1
 2754 01f0 54       		.byte	0x54
 2755 01f1 16000000 		.4byte	.LVL65
 2756 01f5 18000000 		.4byte	.LVL66
 2757 01f9 0200     		.2byte	0x2
 2758 01fb 30       		.byte	0x30
 2759 01fc 9F       		.byte	0x9f
 2760 01fd 18000000 		.4byte	.LVL66
 2761 0201 20000000 		.4byte	.LVL67
 2762 0205 0100     		.2byte	0x1
 2763 0207 54       		.byte	0x54
 2764 0208 00000000 		.4byte	0
 2765 020c 00000000 		.4byte	0
 2766              	.LLST12:
 2767 0210 00000000 		.4byte	.LVL68
 2768 0214 0E000000 		.4byte	.LVL70
 2769 0218 0100     		.2byte	0x1
 2770 021a 50       		.byte	0x50
 2771 021b 0E000000 		.4byte	.LVL70
 2772 021f 1A000000 		.4byte	.LVL74
 2773 0223 0100     		.2byte	0x1
 2774 0225 56       		.byte	0x56
 2775 0226 1A000000 		.4byte	.LVL74
 2776 022a 1C000000 		.4byte	.LVL75
 2777 022e 0100     		.2byte	0x1
 2778 0230 50       		.byte	0x50
 2779 0231 1C000000 		.4byte	.LVL75
 2780 0235 22000000 		.4byte	.LVL76
 2781 0239 0100     		.2byte	0x1
 2782 023b 56       		.byte	0x56
 2783 023c 22000000 		.4byte	.LVL76
 2784 0240 28000000 		.4byte	.LFE21
 2785 0244 0400     		.2byte	0x4
 2786 0246 F3       		.byte	0xf3
 2787 0247 01       		.uleb128 0x1
 2788 0248 50       		.byte	0x50
 2789 0249 9F       		.byte	0x9f
 2790 024a 00000000 		.4byte	0
 2791 024e 00000000 		.4byte	0
 2792              	.LLST13:
 2793 0252 00000000 		.4byte	.LVL68
 2794 0256 0E000000 		.4byte	.LVL70
 2795 025a 0100     		.2byte	0x1
 2796 025c 51       		.byte	0x51
 2797 025d 0E000000 		.4byte	.LVL70
 2798 0261 1A000000 		.4byte	.LVL74
 2799 0265 0400     		.2byte	0x4
 2800 0267 F3       		.byte	0xf3
 2801 0268 01       		.uleb128 0x1
 2802 0269 51       		.byte	0x51
 2803 026a 9F       		.byte	0x9f
 2804 026b 1A000000 		.4byte	.LVL74
 2805 026f 1C000000 		.4byte	.LVL75
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 78


 2806 0273 0100     		.2byte	0x1
 2807 0275 51       		.byte	0x51
 2808 0276 1C000000 		.4byte	.LVL75
 2809 027a 28000000 		.4byte	.LFE21
 2810 027e 0400     		.2byte	0x4
 2811 0280 F3       		.byte	0xf3
 2812 0281 01       		.uleb128 0x1
 2813 0282 51       		.byte	0x51
 2814 0283 9F       		.byte	0x9f
 2815 0284 00000000 		.4byte	0
 2816 0288 00000000 		.4byte	0
 2817              	.LLST14:
 2818 028c 06000000 		.4byte	.LVL69
 2819 0290 0E000000 		.4byte	.LVL70
 2820 0294 0200     		.2byte	0x2
 2821 0296 30       		.byte	0x30
 2822 0297 9F       		.byte	0x9f
 2823 0298 0E000000 		.4byte	.LVL70
 2824 029c 16000000 		.4byte	.LVL72
 2825 02a0 0100     		.2byte	0x1
 2826 02a2 54       		.byte	0x54
 2827 02a3 16000000 		.4byte	.LVL72
 2828 02a7 18000000 		.4byte	.LVL73
 2829 02ab 0300     		.2byte	0x3
 2830 02ad 74       		.byte	0x74
 2831 02ae 7F       		.sleb128 -1
 2832 02af 9F       		.byte	0x9f
 2833 02b0 18000000 		.4byte	.LVL73
 2834 02b4 1A000000 		.4byte	.LVL74
 2835 02b8 0100     		.2byte	0x1
 2836 02ba 54       		.byte	0x54
 2837 02bb 1A000000 		.4byte	.LVL74
 2838 02bf 1C000000 		.4byte	.LVL75
 2839 02c3 0200     		.2byte	0x2
 2840 02c5 30       		.byte	0x30
 2841 02c6 9F       		.byte	0x9f
 2842 02c7 1C000000 		.4byte	.LVL75
 2843 02cb 22000000 		.4byte	.LVL76
 2844 02cf 0100     		.2byte	0x1
 2845 02d1 54       		.byte	0x54
 2846 02d2 00000000 		.4byte	0
 2847 02d6 00000000 		.4byte	0
 2848              	.LLST15:
 2849 02da 00000000 		.4byte	.LVL77
 2850 02de 0B000000 		.4byte	.LVL78-1
 2851 02e2 0100     		.2byte	0x1
 2852 02e4 50       		.byte	0x50
 2853 02e5 0B000000 		.4byte	.LVL78-1
 2854 02e9 20000000 		.4byte	.LFE22
 2855 02ed 0400     		.2byte	0x4
 2856 02ef F3       		.byte	0xf3
 2857 02f0 01       		.uleb128 0x1
 2858 02f1 50       		.byte	0x50
 2859 02f2 9F       		.byte	0x9f
 2860 02f3 00000000 		.4byte	0
 2861 02f7 00000000 		.4byte	0
 2862              	.LLST16:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 79


 2863 02fb 06000000 		.4byte	.LVL81
 2864 02ff 1C000000 		.4byte	.LVL82
 2865 0303 0100     		.2byte	0x1
 2866 0305 53       		.byte	0x53
 2867 0306 1C000000 		.4byte	.LVL82
 2868 030a 24000000 		.4byte	.LFE23
 2869 030e 0100     		.2byte	0x1
 2870 0310 50       		.byte	0x50
 2871 0311 00000000 		.4byte	0
 2872 0315 00000000 		.4byte	0
 2873              	.LLST17:
 2874 0319 06000000 		.4byte	.LVL83
 2875 031d 1B000000 		.4byte	.LVL84-1
 2876 0321 0100     		.2byte	0x1
 2877 0323 50       		.byte	0x50
 2878 0324 00000000 		.4byte	0
 2879 0328 00000000 		.4byte	0
 2880              	.LLST18:
 2881 032c 00000000 		.4byte	.LVL85
 2882 0330 3C000000 		.4byte	.LVL90
 2883 0334 0100     		.2byte	0x1
 2884 0336 50       		.byte	0x50
 2885 0337 3C000000 		.4byte	.LVL90
 2886 033b 58000000 		.4byte	.LFE25
 2887 033f 0400     		.2byte	0x4
 2888 0341 F3       		.byte	0xf3
 2889 0342 01       		.uleb128 0x1
 2890 0343 50       		.byte	0x50
 2891 0344 9F       		.byte	0x9f
 2892 0345 00000000 		.4byte	0
 2893 0349 00000000 		.4byte	0
 2894              	.LLST19:
 2895 034d 22000000 		.4byte	.LVL86
 2896 0351 28000000 		.4byte	.LVL87
 2897 0355 0100     		.2byte	0x1
 2898 0357 53       		.byte	0x53
 2899 0358 34000000 		.4byte	.LVL88
 2900 035c 3A000000 		.4byte	.LVL89
 2901 0360 0100     		.2byte	0x1
 2902 0362 53       		.byte	0x53
 2903 0363 00000000 		.4byte	0
 2904 0367 00000000 		.4byte	0
 2905              		.section	.debug_aranges,"",%progbits
 2906 0000 EC000000 		.4byte	0xec
 2907 0004 0200     		.2byte	0x2
 2908 0006 00000000 		.4byte	.Ldebug_info0
 2909 000a 04       		.byte	0x4
 2910 000b 00       		.byte	0
 2911 000c 0000     		.2byte	0
 2912 000e 0000     		.2byte	0
 2913 0010 00000000 		.4byte	.LFB1
 2914 0014 44000000 		.4byte	.LFE1-.LFB1
 2915 0018 00000000 		.4byte	.LFB2
 2916 001c 44000000 		.4byte	.LFE2-.LFB2
 2917 0020 00000000 		.4byte	.LFB0
 2918 0024 1C000000 		.4byte	.LFE0-.LFB0
 2919 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 80


 2920 002c 48000000 		.4byte	.LFE3-.LFB3
 2921 0030 00000000 		.4byte	.LFB4
 2922 0034 04000000 		.4byte	.LFE4-.LFB4
 2923 0038 00000000 		.4byte	.LFB5
 2924 003c 02000000 		.4byte	.LFE5-.LFB5
 2925 0040 00000000 		.4byte	.LFB6
 2926 0044 0C000000 		.4byte	.LFE6-.LFB6
 2927 0048 00000000 		.4byte	.LFB7
 2928 004c 64000000 		.4byte	.LFE7-.LFB7
 2929 0050 00000000 		.4byte	.LFB8
 2930 0054 28000000 		.4byte	.LFE8-.LFB8
 2931 0058 00000000 		.4byte	.LFB9
 2932 005c 80000000 		.4byte	.LFE9-.LFB9
 2933 0060 00000000 		.4byte	.LFB10
 2934 0064 2C000000 		.4byte	.LFE10-.LFB10
 2935 0068 00000000 		.4byte	.LFB11
 2936 006c 5C000000 		.4byte	.LFE11-.LFB11
 2937 0070 00000000 		.4byte	.LFB12
 2938 0074 44000000 		.4byte	.LFE12-.LFB12
 2939 0078 00000000 		.4byte	.LFB13
 2940 007c 02000000 		.4byte	.LFE13-.LFB13
 2941 0080 00000000 		.4byte	.LFB14
 2942 0084 0C000000 		.4byte	.LFE14-.LFB14
 2943 0088 00000000 		.4byte	.LFB15
 2944 008c 0C000000 		.4byte	.LFE15-.LFB15
 2945 0090 00000000 		.4byte	.LFB16
 2946 0094 0C000000 		.4byte	.LFE16-.LFB16
 2947 0098 00000000 		.4byte	.LFB17
 2948 009c 14000000 		.4byte	.LFE17-.LFB17
 2949 00a0 00000000 		.4byte	.LFB18
 2950 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2951 00a8 00000000 		.4byte	.LFB19
 2952 00ac 18000000 		.4byte	.LFE19-.LFB19
 2953 00b0 00000000 		.4byte	.LFB20
 2954 00b4 24000000 		.4byte	.LFE20-.LFB20
 2955 00b8 00000000 		.4byte	.LFB21
 2956 00bc 28000000 		.4byte	.LFE21-.LFB21
 2957 00c0 00000000 		.4byte	.LFB22
 2958 00c4 20000000 		.4byte	.LFE22-.LFB22
 2959 00c8 00000000 		.4byte	.LFB23
 2960 00cc 24000000 		.4byte	.LFE23-.LFB23
 2961 00d0 00000000 		.4byte	.LFB24
 2962 00d4 24000000 		.4byte	.LFE24-.LFB24
 2963 00d8 00000000 		.4byte	.LFB25
 2964 00dc 58000000 		.4byte	.LFE25-.LFB25
 2965 00e0 00000000 		.4byte	.LFB26
 2966 00e4 02000000 		.4byte	.LFE26-.LFB26
 2967 00e8 00000000 		.4byte	0
 2968 00ec 00000000 		.4byte	0
 2969              		.section	.debug_ranges,"",%progbits
 2970              	.Ldebug_ranges0:
 2971 0000 00000000 		.4byte	.LFB1
 2972 0004 44000000 		.4byte	.LFE1
 2973 0008 00000000 		.4byte	.LFB2
 2974 000c 44000000 		.4byte	.LFE2
 2975 0010 00000000 		.4byte	.LFB0
 2976 0014 1C000000 		.4byte	.LFE0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 81


 2977 0018 00000000 		.4byte	.LFB3
 2978 001c 48000000 		.4byte	.LFE3
 2979 0020 00000000 		.4byte	.LFB4
 2980 0024 04000000 		.4byte	.LFE4
 2981 0028 00000000 		.4byte	.LFB5
 2982 002c 02000000 		.4byte	.LFE5
 2983 0030 00000000 		.4byte	.LFB6
 2984 0034 0C000000 		.4byte	.LFE6
 2985 0038 00000000 		.4byte	.LFB7
 2986 003c 64000000 		.4byte	.LFE7
 2987 0040 00000000 		.4byte	.LFB8
 2988 0044 28000000 		.4byte	.LFE8
 2989 0048 00000000 		.4byte	.LFB9
 2990 004c 80000000 		.4byte	.LFE9
 2991 0050 00000000 		.4byte	.LFB10
 2992 0054 2C000000 		.4byte	.LFE10
 2993 0058 00000000 		.4byte	.LFB11
 2994 005c 5C000000 		.4byte	.LFE11
 2995 0060 00000000 		.4byte	.LFB12
 2996 0064 44000000 		.4byte	.LFE12
 2997 0068 00000000 		.4byte	.LFB13
 2998 006c 02000000 		.4byte	.LFE13
 2999 0070 00000000 		.4byte	.LFB14
 3000 0074 0C000000 		.4byte	.LFE14
 3001 0078 00000000 		.4byte	.LFB15
 3002 007c 0C000000 		.4byte	.LFE15
 3003 0080 00000000 		.4byte	.LFB16
 3004 0084 0C000000 		.4byte	.LFE16
 3005 0088 00000000 		.4byte	.LFB17
 3006 008c 14000000 		.4byte	.LFE17
 3007 0090 00000000 		.4byte	.LFB18
 3008 0094 0C000000 		.4byte	.LFE18
 3009 0098 00000000 		.4byte	.LFB19
 3010 009c 18000000 		.4byte	.LFE19
 3011 00a0 00000000 		.4byte	.LFB20
 3012 00a4 24000000 		.4byte	.LFE20
 3013 00a8 00000000 		.4byte	.LFB21
 3014 00ac 28000000 		.4byte	.LFE21
 3015 00b0 00000000 		.4byte	.LFB22
 3016 00b4 20000000 		.4byte	.LFE22
 3017 00b8 00000000 		.4byte	.LFB23
 3018 00bc 24000000 		.4byte	.LFE23
 3019 00c0 00000000 		.4byte	.LFB24
 3020 00c4 24000000 		.4byte	.LFE24
 3021 00c8 00000000 		.4byte	.LFB25
 3022 00cc 58000000 		.4byte	.LFE25
 3023 00d0 00000000 		.4byte	.LFB26
 3024 00d4 02000000 		.4byte	.LFE26
 3025 00d8 00000000 		.4byte	0
 3026 00dc 00000000 		.4byte	0
 3027              		.section	.debug_line,"",%progbits
 3028              	.Ldebug_line0:
 3029 0000 0B030000 		.section	.debug_str,"MS",%progbits,1
 3029      02006100 
 3029      00000201 
 3029      FB0E0D00 
 3029      01010101 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 82


 3030              	.LASF10:
 3031 0000 75696E74 		.ascii	"uint16\000"
 3031      313600
 3032              	.LASF74:
 3033 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3033      69744372 
 3033      69746963 
 3033      616C5365 
 3033      6374696F 
 3034              	.LASF77:
 3035 001d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3035      4320342E 
 3035      382E3420 
 3035      32303134 
 3035      30353236 
 3036 0050 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3036      20726576 
 3036      6973696F 
 3036      6E203231 
 3036      31333538 
 3037 0083 67202D66 		.ascii	"g -ffunction-sections\000"
 3037      66756E63 
 3037      74696F6E 
 3037      2D736563 
 3037      74696F6E 
 3038              	.LASF49:
 3039 0099 74784461 		.ascii	"txDataByte\000"
 3039      74614279 
 3039      746500
 3040              	.LASF54:
 3041 00a4 73747269 		.ascii	"string\000"
 3041      6E6700
 3042              	.LASF7:
 3043 00ab 6C6F6E67 		.ascii	"long long unsigned int\000"
 3043      206C6F6E 
 3043      6720756E 
 3043      7369676E 
 3043      65642069 
 3044              	.LASF22:
 3045 00c2 55415254 		.ascii	"UART_Start\000"
 3045      5F537461 
 3045      727400
 3046              	.LASF47:
 3047 00cd 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3047      5F536574 
 3047      5478496E 
 3047      74657272 
 3047      7570744D 
 3048              	.LASF72:
 3049 00e5 55415254 		.ascii	"UART_rxBufferOverflow\000"
 3049      5F727842 
 3049      75666665 
 3049      724F7665 
 3049      72666C6F 
 3050              	.LASF78:
 3051 00fb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART.c\000"
 3051      6E657261 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 83


 3051      7465645F 
 3051      536F7572 
 3051      63655C50 
 3052              	.LASF6:
 3053 011b 6C6F6E67 		.ascii	"long long int\000"
 3053      206C6F6E 
 3053      6720696E 
 3053      7400
 3054              	.LASF0:
 3055 0129 7369676E 		.ascii	"signed char\000"
 3055      65642063 
 3055      68617200 
 3056              	.LASF64:
 3057 0135 74785065 		.ascii	"txPeriod\000"
 3057      72696F64 
 3057      00
 3058              	.LASF4:
 3059 013e 6C6F6E67 		.ascii	"long int\000"
 3059      20696E74 
 3059      00
 3060              	.LASF52:
 3061 0147 55415254 		.ascii	"UART_PutChar\000"
 3061      5F507574 
 3061      43686172 
 3061      00
 3062              	.LASF32:
 3063 0154 55415254 		.ascii	"UART_ReadRxData\000"
 3063      5F526561 
 3063      64527844 
 3063      61746100 
 3064              	.LASF9:
 3065 0164 75696E74 		.ascii	"uint8\000"
 3065      3800
 3066              	.LASF50:
 3067 016a 55415254 		.ascii	"UART_ReadControlRegister\000"
 3067      5F526561 
 3067      64436F6E 
 3067      74726F6C 
 3067      52656769 
 3068              	.LASF13:
 3069 0183 646F7562 		.ascii	"double\000"
 3069      6C6500
 3070              	.LASF43:
 3071 018a 61646472 		.ascii	"addressMode\000"
 3071      6573734D 
 3071      6F646500 
 3072              	.LASF70:
 3073 0196 55415254 		.ascii	"UART_rxBufferWrite\000"
 3073      5F727842 
 3073      75666665 
 3073      72577269 
 3073      746500
 3074              	.LASF11:
 3075 01a9 75696E74 		.ascii	"uint32\000"
 3075      333200
 3076              	.LASF80:
 3077 01b0 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 84


 3077      74536574 
 3077      56656374 
 3077      6F7200
 3078              	.LASF27:
 3079 01bf 636F6E74 		.ascii	"control\000"
 3079      726F6C00 
 3080              	.LASF20:
 3081 01c7 55415254 		.ascii	"UART_Init\000"
 3081      5F496E69 
 3081      7400
 3082              	.LASF62:
 3083 01d1 7265744D 		.ascii	"retMode\000"
 3083      6F646500 
 3084              	.LASF37:
 3085 01d9 55415254 		.ascii	"UART_GetByte\000"
 3085      5F476574 
 3085      42797465 
 3085      00
 3086              	.LASF8:
 3087 01e6 756E7369 		.ascii	"unsigned int\000"
 3087      676E6564 
 3087      20696E74 
 3087      00
 3088              	.LASF60:
 3089 01f3 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3089      5F436C65 
 3089      61725478 
 3089      42756666 
 3089      657200
 3090              	.LASF58:
 3091 0206 55415254 		.ascii	"UART_PutCRLF\000"
 3091      5F507574 
 3091      43524C46 
 3091      00
 3092              	.LASF38:
 3093 0213 6C6F6345 		.ascii	"locErrorStatus\000"
 3093      72726F72 
 3093      53746174 
 3093      757300
 3094              	.LASF5:
 3095 0222 6C6F6E67 		.ascii	"long unsigned int\000"
 3095      20756E73 
 3095      69676E65 
 3095      6420696E 
 3095      7400
 3096              	.LASF56:
 3097 0234 55415254 		.ascii	"UART_PutArray\000"
 3097      5F507574 
 3097      41727261 
 3097      7900
 3098              	.LASF81:
 3099 0242 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3099      74657243 
 3099      72697469 
 3099      63616C53 
 3099      65637469 
 3100              	.LASF71:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 85


 3101 0259 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3101      5F727842 
 3101      75666665 
 3101      724C6F6F 
 3101      70446574 
 3102              	.LASF40:
 3103 0271 73697A65 		.ascii	"size\000"
 3103      00
 3104              	.LASF3:
 3105 0276 73686F72 		.ascii	"short unsigned int\000"
 3105      7420756E 
 3105      7369676E 
 3105      65642069 
 3105      6E7400
 3106              	.LASF69:
 3107 0289 55415254 		.ascii	"UART_rxBufferRead\000"
 3107      5F727842 
 3107      75666665 
 3107      72526561 
 3107      6400
 3108              	.LASF79:
 3109 029b 433A5C55 		.ascii	"C:\\Users\\Jorden\\Documents\\PSoC Creator\\Test\\T"
 3109      73657273 
 3109      5C4A6F72 
 3109      64656E5C 
 3109      446F6375 
 3110 02c8 6573742E 		.ascii	"est.cydsn\000"
 3110      63796473 
 3110      6E00
 3111              	.LASF55:
 3112 02d2 62756649 		.ascii	"bufIndex\000"
 3112      6E646578 
 3112      00
 3113              	.LASF28:
 3114 02db 696E7453 		.ascii	"intSrc\000"
 3114      726300
 3115              	.LASF65:
 3116 02e2 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3116      5F536574 
 3116      54784164 
 3116      64726573 
 3116      734D6F64 
 3117              	.LASF51:
 3118 02f8 55415254 		.ascii	"UART_ReadTxStatus\000"
 3118      5F526561 
 3118      64547853 
 3118      74617475 
 3118      7300
 3119              	.LASF75:
 3120 030a 55415254 		.ascii	"UART_IntClock_Start\000"
 3120      5F496E74 
 3120      436C6F63 
 3120      6B5F5374 
 3120      61727400 
 3121              	.LASF17:
 3122 031e 72656733 		.ascii	"reg32\000"
 3122      3200
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 86


 3123              	.LASF63:
 3124 0324 746D7053 		.ascii	"tmpStat\000"
 3124      74617400 
 3125              	.LASF19:
 3126 032c 73697A65 		.ascii	"sizetype\000"
 3126      74797065 
 3126      00
 3127              	.LASF45:
 3128 0335 61646472 		.ascii	"address\000"
 3128      65737300 
 3129              	.LASF44:
 3130 033d 55415254 		.ascii	"UART_SetRxAddress1\000"
 3130      5F536574 
 3130      52784164 
 3130      64726573 
 3130      733100
 3131              	.LASF46:
 3132 0350 55415254 		.ascii	"UART_SetRxAddress2\000"
 3132      5F536574 
 3132      52784164 
 3132      64726573 
 3132      733200
 3133              	.LASF31:
 3134 0363 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3134      78427566 
 3134      66657257 
 3134      72697465 
 3134      00
 3135              	.LASF36:
 3136 0374 72785374 		.ascii	"rxStatus\000"
 3136      61747573 
 3136      00
 3137              	.LASF76:
 3138 037d 55415254 		.ascii	"UART_IntClock_Stop\000"
 3138      5F496E74 
 3138      436C6F63 
 3138      6B5F5374 
 3138      6F7000
 3139              	.LASF73:
 3140 0390 4379496E 		.ascii	"CyIntSetPriority\000"
 3140      74536574 
 3140      5072696F 
 3140      72697479 
 3140      00
 3141              	.LASF67:
 3142 03a1 55415254 		.ascii	"UART_errorStatus\000"
 3142      5F657272 
 3142      6F725374 
 3142      61747573 
 3142      00
 3143              	.LASF12:
 3144 03b2 666C6F61 		.ascii	"float\000"
 3144      7400
 3145              	.LASF59:
 3146 03b8 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3146      5F476574 
 3146      54784275 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 87


 3146      66666572 
 3146      53697A65 
 3147              	.LASF16:
 3148 03cd 72656738 		.ascii	"reg8\000"
 3148      00
 3149              	.LASF42:
 3150 03d2 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3150      5F536574 
 3150      52784164 
 3150      64726573 
 3150      734D6F64 
 3151              	.LASF1:
 3152 03e8 756E7369 		.ascii	"unsigned char\000"
 3152      676E6564 
 3152      20636861 
 3152      7200
 3153              	.LASF48:
 3154 03f6 55415254 		.ascii	"UART_WriteTxData\000"
 3154      5F577269 
 3154      74655478 
 3154      44617461 
 3154      00
 3155              	.LASF2:
 3156 0407 73686F72 		.ascii	"short int\000"
 3156      7420696E 
 3156      7400
 3157              	.LASF61:
 3158 0411 55415254 		.ascii	"UART_SendBreak\000"
 3158      5F53656E 
 3158      64427265 
 3158      616B00
 3159              	.LASF57:
 3160 0420 62797465 		.ascii	"byteCount\000"
 3160      436F756E 
 3160      7400
 3161              	.LASF29:
 3162 042a 72784461 		.ascii	"rxData\000"
 3162      746100
 3163              	.LASF21:
 3164 0431 55415254 		.ascii	"UART_Enable\000"
 3164      5F456E61 
 3164      626C6500 
 3165              	.LASF33:
 3166 043d 55415254 		.ascii	"UART_ReadRxStatus\000"
 3166      5F526561 
 3166      64527853 
 3166      74617475 
 3166      7300
 3167              	.LASF15:
 3168 044f 63686172 		.ascii	"char\000"
 3168      00
 3169              	.LASF18:
 3170 0454 63796973 		.ascii	"cyisraddress\000"
 3170      72616464 
 3170      72657373 
 3170      00
 3171              	.LASF14:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 88


 3172 0461 63686172 		.ascii	"char8\000"
 3172      3800
 3173              	.LASF26:
 3174 0467 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3174      5F536574 
 3174      5278496E 
 3174      74657272 
 3174      7570744D 
 3175              	.LASF35:
 3176 047f 55415254 		.ascii	"UART_GetChar\000"
 3176      5F476574 
 3176      43686172 
 3176      00
 3177              	.LASF30:
 3178 048c 6C6F6352 		.ascii	"locRxBufferRead\000"
 3178      78427566 
 3178      66657252 
 3178      65616400 
 3179              	.LASF24:
 3180 049c 656E6162 		.ascii	"enableInterrupts\000"
 3180      6C65496E 
 3180      74657272 
 3180      75707473 
 3180      00
 3181              	.LASF66:
 3182 04ad 55415254 		.ascii	"UART_initVar\000"
 3182      5F696E69 
 3182      74566172 
 3182      00
 3183              	.LASF39:
 3184 04ba 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3184      5F476574 
 3184      52784275 
 3184      66666572 
 3184      53697A65 
 3185              	.LASF34:
 3186 04cf 73746174 		.ascii	"status\000"
 3186      757300
 3187              	.LASF23:
 3188 04d6 55415254 		.ascii	"UART_Stop\000"
 3188      5F53746F 
 3188      7000
 3189              	.LASF68:
 3190 04e0 55415254 		.ascii	"UART_rxBuffer\000"
 3190      5F727842 
 3190      75666665 
 3190      7200
 3191              	.LASF53:
 3192 04ee 55415254 		.ascii	"UART_PutString\000"
 3192      5F507574 
 3192      53747269 
 3192      6E6700
 3193              	.LASF25:
 3194 04fd 55415254 		.ascii	"UART_WriteControlRegister\000"
 3194      5F577269 
 3194      7465436F 
 3194      6E74726F 
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc0x8qRL.s 			page 89


 3194      6C526567 
 3195              	.LASF41:
 3196 0517 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3196      5F436C65 
 3196      61725278 
 3196      42756666 
 3196      657200
 3197              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
