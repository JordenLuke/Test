ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_RXISR,"ax",%progbits
  19              		.align	2
  20              		.global	UART_RXISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_RXISR, %function
  24              	UART_RXISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART_INT.c"
   1:.\Generated_Source\PSoC5/UART_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_INT.c **** * File Name: UARTINT.c
   3:.\Generated_Source\PSoC5/UART_INT.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_INT.c **** *
   5:.\Generated_Source\PSoC5/UART_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_INT.c **** *
   8:.\Generated_Source\PSoC5/UART_INT.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC5/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:.\Generated_Source\PSoC5/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:.\Generated_Source\PSoC5/UART_INT.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC5/UART_INT.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC5/UART_INT.c **** 
  15:.\Generated_Source\PSoC5/UART_INT.c **** #include "UART.h"
  16:.\Generated_Source\PSoC5/UART_INT.c **** 
  17:.\Generated_Source\PSoC5/UART_INT.c **** 
  18:.\Generated_Source\PSoC5/UART_INT.c **** /***************************************
  19:.\Generated_Source\PSoC5/UART_INT.c **** * Custom Declarations
  20:.\Generated_Source\PSoC5/UART_INT.c **** ***************************************/
  21:.\Generated_Source\PSoC5/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  22:.\Generated_Source\PSoC5/UART_INT.c **** 
  23:.\Generated_Source\PSoC5/UART_INT.c **** /* `#END` */
  24:.\Generated_Source\PSoC5/UART_INT.c **** 
  25:.\Generated_Source\PSoC5/UART_INT.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  26:.\Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
  27:.\Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_RXISR
  28:.\Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
  29:.\Generated_Source\PSoC5/UART_INT.c ****     *
  30:.\Generated_Source\PSoC5/UART_INT.c ****     * Summary:
  31:.\Generated_Source\PSoC5/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 2


  32:.\Generated_Source\PSoC5/UART_INT.c ****     *
  33:.\Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
  34:.\Generated_Source\PSoC5/UART_INT.c ****     *  None.
  35:.\Generated_Source\PSoC5/UART_INT.c ****     *
  36:.\Generated_Source\PSoC5/UART_INT.c ****     * Return:
  37:.\Generated_Source\PSoC5/UART_INT.c ****     *  None.
  38:.\Generated_Source\PSoC5/UART_INT.c ****     *
  39:.\Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
  40:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  41:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  42:.\Generated_Source\PSoC5/UART_INT.c ****     *     increments after each byte saved to buffer.
  43:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  44:.\Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect overflow condition.
  45:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  46:.\Generated_Source\PSoC5/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  47:.\Generated_Source\PSoC5/UART_INT.c ****     *     UART_rxBufferRead index.
  48:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  49:.\Generated_Source\PSoC5/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  50:.\Generated_Source\PSoC5/UART_INT.c ****     *    UART_rxBufferRead
  51:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  52:.\Generated_Source\PSoC5/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  53:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  54:.\Generated_Source\PSoC5/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  55:.\Generated_Source\PSoC5/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  56:.\Generated_Source\PSoC5/UART_INT.c ****     *
  57:.\Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
  58:.\Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_RXISR)
  59:.\Generated_Source\PSoC5/UART_INT.c ****     {
  27              		.loc 1 59 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 2DE9F007 		push	{r4, r5, r6, r7, r8, r9, r10}
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 10, -4
  41              	.LVL0:
  60:.\Generated_Source\PSoC5/UART_INT.c ****         uint8 readData;
  61:.\Generated_Source\PSoC5/UART_INT.c ****         uint8 readStatus;
  62:.\Generated_Source\PSoC5/UART_INT.c ****         uint8 increment_pointer = 0u;
  63:.\Generated_Source\PSoC5/UART_INT.c **** 
  64:.\Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  65:.\Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
  66:.\Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  67:.\Generated_Source\PSoC5/UART_INT.c **** 
  68:.\Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
  69:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_START` */
  70:.\Generated_Source\PSoC5/UART_INT.c **** 
  71:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
  72:.\Generated_Source\PSoC5/UART_INT.c **** 
  73:.\Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 3


  74:.\Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
  75:.\Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
  76:.\Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  77:.\Generated_Source\PSoC5/UART_INT.c **** 
  78:.\Generated_Source\PSoC5/UART_INT.c ****         do
  79:.\Generated_Source\PSoC5/UART_INT.c ****         {
  80:.\Generated_Source\PSoC5/UART_INT.c ****             /* Read receiver status register */
  81:.\Generated_Source\PSoC5/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  42              		.loc 1 81 0
  43 0004 214C     		ldr	r4, .L8
  82:.\Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  83:.\Generated_Source\PSoC5/UART_INT.c ****             *  of the user code in UART_RXISR_ERROR` section. 
  84:.\Generated_Source\PSoC5/UART_INT.c ****             */
  85:.\Generated_Source\PSoC5/UART_INT.c ****             readData = readStatus;
  86:.\Generated_Source\PSoC5/UART_INT.c **** 
  87:.\Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  88:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  89:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_STOP_ERROR | 
  90:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_OVERRUN)) != 0u)
  91:.\Generated_Source\PSoC5/UART_INT.c ****             {
  92:.\Generated_Source\PSoC5/UART_INT.c ****                 /* ERROR handling. */
  93:.\Generated_Source\PSoC5/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  44              		.loc 1 93 0
  45 0006 2248     		ldr	r0, .L8+4
  94:.\Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
  95:.\Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_STOP_ERROR | 
  96:.\Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_OVERRUN);
  97:.\Generated_Source\PSoC5/UART_INT.c ****                 /* `#START UART_RXISR_ERROR` */
  98:.\Generated_Source\PSoC5/UART_INT.c **** 
  99:.\Generated_Source\PSoC5/UART_INT.c ****                 /* `#END` */
 100:.\Generated_Source\PSoC5/UART_INT.c ****             }
 101:.\Generated_Source\PSoC5/UART_INT.c ****             
 102:.\Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 103:.\Generated_Source\PSoC5/UART_INT.c ****             {
 104:.\Generated_Source\PSoC5/UART_INT.c ****                 /* Read data from the RX data register */
 105:.\Generated_Source\PSoC5/UART_INT.c ****                 readData = UART_RXDATA_REG;
  46              		.loc 1 105 0
  47 0008 DFF898C0 		ldr	ip, .L8+24
 106:.\Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 107:.\Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 108:.\Generated_Source\PSoC5/UART_INT.c ****                 {
 109:.\Generated_Source\PSoC5/UART_INT.c ****                     if((readStatus & UART_RX_STS_MRKSPC) != 0u)
 110:.\Generated_Source\PSoC5/UART_INT.c ****                     {
 111:.\Generated_Source\PSoC5/UART_INT.c ****                         if ((readStatus & UART_RX_STS_ADDR_MATCH) != 0u)
 112:.\Generated_Source\PSoC5/UART_INT.c ****                         {
 113:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 114:.\Generated_Source\PSoC5/UART_INT.c ****                         }
 115:.\Generated_Source\PSoC5/UART_INT.c ****                         else
 116:.\Generated_Source\PSoC5/UART_INT.c ****                         {
 117:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 118:.\Generated_Source\PSoC5/UART_INT.c ****                         }
 119:.\Generated_Source\PSoC5/UART_INT.c ****                     }
 120:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 121:.\Generated_Source\PSoC5/UART_INT.c ****                     {   /* Store only addressed data */
 122:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 123:.\Generated_Source\PSoC5/UART_INT.c ****                         increment_pointer = 1u;
 124:.\Generated_Source\PSoC5/UART_INT.c ****                     }
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 4


 125:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 126:.\Generated_Source\PSoC5/UART_INT.c ****                 else /* Without software addressing */
 127:.\Generated_Source\PSoC5/UART_INT.c ****                 {
 128:.\Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = readData;
 129:.\Generated_Source\PSoC5/UART_INT.c ****                     increment_pointer = 1u;
 130:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 131:.\Generated_Source\PSoC5/UART_INT.c ****             #else  /* Without addressing */
 132:.\Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
  48              		.loc 1 132 0
  49 000c 214A     		ldr	r2, .L8+8
  50 000e 224F     		ldr	r7, .L8+12
 133:.\Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
 134:.\Generated_Source\PSoC5/UART_INT.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_INT.c **** 
 136:.\Generated_Source\PSoC5/UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 137:.\Generated_Source\PSoC5/UART_INT.c ****                 if(increment_pointer != 0u)
 138:.\Generated_Source\PSoC5/UART_INT.c ****                 {
 139:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
  51              		.loc 1 139 0
  52 0010 224D     		ldr	r5, .L8+16
 140:.\Generated_Source\PSoC5/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 141:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
 142:.\Generated_Source\PSoC5/UART_INT.c ****                     }
 143:.\Generated_Source\PSoC5/UART_INT.c ****                     /* Set next pointer. */
 144:.\Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite++;
 145:.\Generated_Source\PSoC5/UART_INT.c **** 
 146:.\Generated_Source\PSoC5/UART_INT.c ****                     /* Check pointer for a loop condition */
 147:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
 148:.\Generated_Source\PSoC5/UART_INT.c ****                     {
 149:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferWrite = 0u;
 150:.\Generated_Source\PSoC5/UART_INT.c ****                     }
 151:.\Generated_Source\PSoC5/UART_INT.c **** 
 152:.\Generated_Source\PSoC5/UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 153:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
  53              		.loc 1 153 0
  54 0012 234E     		ldr	r6, .L8+20
 154:.\Generated_Source\PSoC5/UART_INT.c ****                     {
 155:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferLoopDetect = 1u;
  55              		.loc 1 155 0
  56 0014 4FF00108 		mov	r8, #1
 141:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
  57              		.loc 1 141 0
  58 0018 DFF88C90 		ldr	r9, .L8+28
  59              	.LVL1:
  60              	.L6:
  81:.\Generated_Source\PSoC5/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  61              		.loc 1 81 0
  62 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  63 001e DBB2     		uxtb	r3, r3
  64              	.LVL2:
  87:.\Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  65              		.loc 1 87 0
  66 0020 13F01E0F 		tst	r3, #30
  67 0024 06D0     		beq	.L2
  93:.\Generated_Source\PSoC5/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  68              		.loc 1 93 0
  69 0026 03F01E01 		and	r1, r3, #30
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 5


  70 002a 90F800A0 		ldrb	r10, [r0]	@ zero_extendqisi2
  71 002e 41EA0A01 		orr	r1, r1, r10
  72 0032 0170     		strb	r1, [r0]
  73              	.L2:
 102:.\Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
  74              		.loc 1 102 0
  75 0034 03F02003 		and	r3, r3, #32
  76              	.LVL3:
  77 0038 03F0FF01 		and	r1, r3, #255
  78 003c 03B3     		cbz	r3, .L3
 105:.\Generated_Source\PSoC5/UART_INT.c ****                 readData = UART_RXDATA_REG;
  79              		.loc 1 105 0
  80 003e 9CF800A0 		ldrb	r10, [ip]	@ zero_extendqisi2
  81 0042 5FFA8AFA 		uxtb	r10, r10
  82              	.LVL4:
 132:.\Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
  83              		.loc 1 132 0
  84 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  85 0048 DBB2     		uxtb	r3, r3
  86 004a 07F803A0 		strb	r10, [r7, r3]
  87              	.LVL5:
 139:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
  88              		.loc 1 139 0
  89 004e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  90 0050 13F0FF0F 		tst	r3, #255
  91 0054 01D0     		beq	.L4
 141:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
  92              		.loc 1 141 0
  93 0056 89F80080 		strb	r8, [r9]
  94              	.L4:
 144:.\Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite++;
  95              		.loc 1 144 0
  96 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  97 005c 0133     		adds	r3, r3, #1
  98 005e DBB2     		uxtb	r3, r3
  99 0060 1370     		strb	r3, [r2]
 147:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
 100              		.loc 1 147 0
 101 0062 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 102 0064 DBB2     		uxtb	r3, r3
 103 0066 082B     		cmp	r3, #8
 104 0068 01D9     		bls	.L5
 149:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferWrite = 0u;
 105              		.loc 1 149 0
 106 006a 0023     		movs	r3, #0
 107 006c 1370     		strb	r3, [r2]
 108              	.L5:
 153:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
 109              		.loc 1 153 0
 110 006e 92F800A0 		ldrb	r10, [r2]	@ zero_extendqisi2
 111              	.LVL6:
 112 0072 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 113 0074 5FFA8AFA 		uxtb	r10, r10
 114 0078 9A45     		cmp	r10, r3
 115 007a 01D1     		bne	.L3
 116              		.loc 1 155 0
 117 007c 85F80080 		strb	r8, [r5]
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 6


 118              	.LVL7:
 119              	.L3:
 156:.\Generated_Source\PSoC5/UART_INT.c ****                         /* When Hardware Flow Control selected */
 157:.\Generated_Source\PSoC5/UART_INT.c ****                         #if (UART_FLOW_CONTROL != 0u)
 158:.\Generated_Source\PSoC5/UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 159:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
 160:.\Generated_Source\PSoC5/UART_INT.c ****                             CyIntClearPending(UART_RX_VECT_NUM);
 161:.\Generated_Source\PSoC5/UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 162:.\Generated_Source\PSoC5/UART_INT.c ****                         #endif /* (UART_FLOW_CONTROL != 0u) */
 163:.\Generated_Source\PSoC5/UART_INT.c ****                     }
 164:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 165:.\Generated_Source\PSoC5/UART_INT.c ****             }
 166:.\Generated_Source\PSoC5/UART_INT.c ****         }while((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 120              		.loc 1 166 0
 121 0080 0029     		cmp	r1, #0
 122 0082 CBD1     		bne	.L6
 167:.\Generated_Source\PSoC5/UART_INT.c **** 
 168:.\Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 169:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_END` */
 170:.\Generated_Source\PSoC5/UART_INT.c **** 
 171:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 172:.\Generated_Source\PSoC5/UART_INT.c **** 
 173:.\Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 174:.\Generated_Source\PSoC5/UART_INT.c ****         EA = int_en;
 175:.\Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 176:.\Generated_Source\PSoC5/UART_INT.c ****     }
 123              		.loc 1 176 0
 124 0084 BDE8F007 		pop	{r4, r5, r6, r7, r8, r9, r10}
 125 0088 7047     		bx	lr
 126              	.L9:
 127 008a 00BF     		.align	2
 128              	.L8:
 129 008c 69640040 		.word	1073767529
 130 0090 00000000 		.word	UART_errorStatus
 131 0094 00000000 		.word	UART_rxBufferWrite
 132 0098 00000000 		.word	UART_rxBuffer
 133 009c 00000000 		.word	UART_rxBufferLoopDetect
 134 00a0 00000000 		.word	UART_rxBufferRead
 135 00a4 49640040 		.word	1073767497
 136 00a8 00000000 		.word	UART_rxBufferOverflow
 137              		.cfi_endproc
 138              	.LFE0:
 139              		.size	UART_RXISR, .-UART_RXISR
 140              		.text
 141              	.Letext0:
 142              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 143              		.file 3 ".\\Generated_Source\\PSoC5\\UART.h"
 144              		.section	.debug_info,"",%progbits
 145              	.Ldebug_info0:
 146 0000 40010000 		.4byte	0x140
 147 0004 0400     		.2byte	0x4
 148 0006 00000000 		.4byte	.Ldebug_abbrev0
 149 000a 04       		.byte	0x4
 150 000b 01       		.uleb128 0x1
 151 000c CE000000 		.4byte	.LASF24
 152 0010 01       		.byte	0x1
 153 0011 91000000 		.4byte	.LASF25
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 7


 154 0015 5F010000 		.4byte	.LASF26
 155 0019 00000000 		.4byte	.Ldebug_ranges0+0
 156 001d 00000000 		.4byte	0
 157 0021 00000000 		.4byte	.Ldebug_line0
 158 0025 02       		.uleb128 0x2
 159 0026 01       		.byte	0x1
 160 0027 06       		.byte	0x6
 161 0028 A9010000 		.4byte	.LASF0
 162 002c 02       		.uleb128 0x2
 163 002d 01       		.byte	0x1
 164 002e 08       		.byte	0x8
 165 002f C0000000 		.4byte	.LASF1
 166 0033 02       		.uleb128 0x2
 167 0034 02       		.byte	0x2
 168 0035 05       		.byte	0x5
 169 0036 F0010000 		.4byte	.LASF2
 170 003a 02       		.uleb128 0x2
 171 003b 02       		.byte	0x2
 172 003c 07       		.byte	0x7
 173 003d 96010000 		.4byte	.LASF3
 174 0041 02       		.uleb128 0x2
 175 0042 04       		.byte	0x4
 176 0043 05       		.byte	0x5
 177 0044 4F010000 		.4byte	.LASF4
 178 0048 02       		.uleb128 0x2
 179 0049 04       		.byte	0x4
 180 004a 07       		.byte	0x7
 181 004b 68000000 		.4byte	.LASF5
 182 004f 02       		.uleb128 0x2
 183 0050 08       		.byte	0x8
 184 0051 05       		.byte	0x5
 185 0052 00000000 		.4byte	.LASF6
 186 0056 02       		.uleb128 0x2
 187 0057 08       		.byte	0x8
 188 0058 07       		.byte	0x7
 189 0059 7A000000 		.4byte	.LASF7
 190 005d 03       		.uleb128 0x3
 191 005e 04       		.byte	0x4
 192 005f 05       		.byte	0x5
 193 0060 696E7400 		.ascii	"int\000"
 194 0064 02       		.uleb128 0x2
 195 0065 04       		.byte	0x4
 196 0066 07       		.byte	0x7
 197 0067 0E000000 		.4byte	.LASF8
 198 006b 04       		.uleb128 0x4
 199 006c 62000000 		.4byte	.LASF12
 200 0070 02       		.byte	0x2
 201 0071 B3       		.byte	0xb3
 202 0072 2C000000 		.4byte	0x2c
 203 0076 02       		.uleb128 0x2
 204 0077 04       		.byte	0x4
 205 0078 04       		.byte	0x4
 206 0079 EA010000 		.4byte	.LASF9
 207 007d 02       		.uleb128 0x2
 208 007e 08       		.byte	0x8
 209 007f 04       		.byte	0x4
 210 0080 58010000 		.4byte	.LASF10
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 8


 211 0084 02       		.uleb128 0x2
 212 0085 01       		.byte	0x1
 213 0086 08       		.byte	0x8
 214 0087 4A010000 		.4byte	.LASF11
 215 008b 05       		.uleb128 0x5
 216 008c FA010000 		.4byte	.LASF13
 217 0090 02       		.byte	0x2
 218 0091 5D01     		.2byte	0x15d
 219 0093 97000000 		.4byte	0x97
 220 0097 06       		.uleb128 0x6
 221 0098 6B000000 		.4byte	0x6b
 222 009c 02       		.uleb128 0x2
 223 009d 04       		.byte	0x4
 224 009e 07       		.byte	0x7
 225 009f 1B020000 		.4byte	.LASF14
 226 00a3 07       		.uleb128 0x7
 227 00a4 B5000000 		.4byte	.LASF27
 228 00a8 01       		.byte	0x1
 229 00a9 3A       		.byte	0x3a
 230 00aa 00000000 		.4byte	.LFB0
 231 00ae AC000000 		.4byte	.LFE0-.LFB0
 232 00b2 01       		.uleb128 0x1
 233 00b3 9C       		.byte	0x9c
 234 00b4 E6000000 		.4byte	0xe6
 235 00b8 08       		.uleb128 0x8
 236 00b9 12020000 		.4byte	.LASF15
 237 00bd 01       		.byte	0x1
 238 00be 3C       		.byte	0x3c
 239 00bf 6B000000 		.4byte	0x6b
 240 00c3 00000000 		.4byte	.LLST0
 241 00c7 08       		.uleb128 0x8
 242 00c8 DF010000 		.4byte	.LASF16
 243 00cc 01       		.byte	0x1
 244 00cd 3D       		.byte	0x3d
 245 00ce 6B000000 		.4byte	0x6b
 246 00d2 1E000000 		.4byte	.LLST1
 247 00d6 08       		.uleb128 0x8
 248 00d7 1B000000 		.4byte	.LASF17
 249 00db 01       		.byte	0x1
 250 00dc 3E       		.byte	0x3e
 251 00dd 6B000000 		.4byte	0x6b
 252 00e1 31000000 		.4byte	.LLST2
 253 00e5 00       		.byte	0
 254 00e6 09       		.uleb128 0x9
 255 00e7 2D000000 		.4byte	.LASF18
 256 00eb 03       		.byte	0x3
 257 00ec 3D01     		.2byte	0x13d
 258 00ee 6B000000 		.4byte	0x6b
 259 00f2 0A       		.uleb128 0xa
 260 00f3 6B000000 		.4byte	0x6b
 261 00f7 02010000 		.4byte	0x102
 262 00fb 0B       		.uleb128 0xb
 263 00fc 9C000000 		.4byte	0x9c
 264 0100 08       		.byte	0x8
 265 0101 00       		.byte	0
 266 0102 09       		.uleb128 0x9
 267 0103 54000000 		.4byte	.LASF19
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 9


 268 0107 03       		.byte	0x3
 269 0108 3E01     		.2byte	0x13e
 270 010a 0E010000 		.4byte	0x10e
 271 010e 06       		.uleb128 0x6
 272 010f F2000000 		.4byte	0xf2
 273 0113 09       		.uleb128 0x9
 274 0114 CD010000 		.4byte	.LASF20
 275 0118 03       		.byte	0x3
 276 0119 3F01     		.2byte	0x13f
 277 011b 97000000 		.4byte	0x97
 278 011f 09       		.uleb128 0x9
 279 0120 FF010000 		.4byte	.LASF21
 280 0124 03       		.byte	0x3
 281 0125 4001     		.2byte	0x140
 282 0127 97000000 		.4byte	0x97
 283 012b 09       		.uleb128 0x9
 284 012c B5010000 		.4byte	.LASF22
 285 0130 03       		.byte	0x3
 286 0131 4101     		.2byte	0x141
 287 0133 97000000 		.4byte	0x97
 288 0137 09       		.uleb128 0x9
 289 0138 3E000000 		.4byte	.LASF23
 290 013c 03       		.byte	0x3
 291 013d 4201     		.2byte	0x142
 292 013f 97000000 		.4byte	0x97
 293 0143 00       		.byte	0
 294              		.section	.debug_abbrev,"",%progbits
 295              	.Ldebug_abbrev0:
 296 0000 01       		.uleb128 0x1
 297 0001 11       		.uleb128 0x11
 298 0002 01       		.byte	0x1
 299 0003 25       		.uleb128 0x25
 300 0004 0E       		.uleb128 0xe
 301 0005 13       		.uleb128 0x13
 302 0006 0B       		.uleb128 0xb
 303 0007 03       		.uleb128 0x3
 304 0008 0E       		.uleb128 0xe
 305 0009 1B       		.uleb128 0x1b
 306 000a 0E       		.uleb128 0xe
 307 000b 55       		.uleb128 0x55
 308 000c 17       		.uleb128 0x17
 309 000d 11       		.uleb128 0x11
 310 000e 01       		.uleb128 0x1
 311 000f 10       		.uleb128 0x10
 312 0010 17       		.uleb128 0x17
 313 0011 00       		.byte	0
 314 0012 00       		.byte	0
 315 0013 02       		.uleb128 0x2
 316 0014 24       		.uleb128 0x24
 317 0015 00       		.byte	0
 318 0016 0B       		.uleb128 0xb
 319 0017 0B       		.uleb128 0xb
 320 0018 3E       		.uleb128 0x3e
 321 0019 0B       		.uleb128 0xb
 322 001a 03       		.uleb128 0x3
 323 001b 0E       		.uleb128 0xe
 324 001c 00       		.byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 10


 325 001d 00       		.byte	0
 326 001e 03       		.uleb128 0x3
 327 001f 24       		.uleb128 0x24
 328 0020 00       		.byte	0
 329 0021 0B       		.uleb128 0xb
 330 0022 0B       		.uleb128 0xb
 331 0023 3E       		.uleb128 0x3e
 332 0024 0B       		.uleb128 0xb
 333 0025 03       		.uleb128 0x3
 334 0026 08       		.uleb128 0x8
 335 0027 00       		.byte	0
 336 0028 00       		.byte	0
 337 0029 04       		.uleb128 0x4
 338 002a 16       		.uleb128 0x16
 339 002b 00       		.byte	0
 340 002c 03       		.uleb128 0x3
 341 002d 0E       		.uleb128 0xe
 342 002e 3A       		.uleb128 0x3a
 343 002f 0B       		.uleb128 0xb
 344 0030 3B       		.uleb128 0x3b
 345 0031 0B       		.uleb128 0xb
 346 0032 49       		.uleb128 0x49
 347 0033 13       		.uleb128 0x13
 348 0034 00       		.byte	0
 349 0035 00       		.byte	0
 350 0036 05       		.uleb128 0x5
 351 0037 16       		.uleb128 0x16
 352 0038 00       		.byte	0
 353 0039 03       		.uleb128 0x3
 354 003a 0E       		.uleb128 0xe
 355 003b 3A       		.uleb128 0x3a
 356 003c 0B       		.uleb128 0xb
 357 003d 3B       		.uleb128 0x3b
 358 003e 05       		.uleb128 0x5
 359 003f 49       		.uleb128 0x49
 360 0040 13       		.uleb128 0x13
 361 0041 00       		.byte	0
 362 0042 00       		.byte	0
 363 0043 06       		.uleb128 0x6
 364 0044 35       		.uleb128 0x35
 365 0045 00       		.byte	0
 366 0046 49       		.uleb128 0x49
 367 0047 13       		.uleb128 0x13
 368 0048 00       		.byte	0
 369 0049 00       		.byte	0
 370 004a 07       		.uleb128 0x7
 371 004b 2E       		.uleb128 0x2e
 372 004c 01       		.byte	0x1
 373 004d 3F       		.uleb128 0x3f
 374 004e 19       		.uleb128 0x19
 375 004f 03       		.uleb128 0x3
 376 0050 0E       		.uleb128 0xe
 377 0051 3A       		.uleb128 0x3a
 378 0052 0B       		.uleb128 0xb
 379 0053 3B       		.uleb128 0x3b
 380 0054 0B       		.uleb128 0xb
 381 0055 27       		.uleb128 0x27
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 11


 382 0056 19       		.uleb128 0x19
 383 0057 11       		.uleb128 0x11
 384 0058 01       		.uleb128 0x1
 385 0059 12       		.uleb128 0x12
 386 005a 06       		.uleb128 0x6
 387 005b 40       		.uleb128 0x40
 388 005c 18       		.uleb128 0x18
 389 005d 9742     		.uleb128 0x2117
 390 005f 19       		.uleb128 0x19
 391 0060 01       		.uleb128 0x1
 392 0061 13       		.uleb128 0x13
 393 0062 00       		.byte	0
 394 0063 00       		.byte	0
 395 0064 08       		.uleb128 0x8
 396 0065 34       		.uleb128 0x34
 397 0066 00       		.byte	0
 398 0067 03       		.uleb128 0x3
 399 0068 0E       		.uleb128 0xe
 400 0069 3A       		.uleb128 0x3a
 401 006a 0B       		.uleb128 0xb
 402 006b 3B       		.uleb128 0x3b
 403 006c 0B       		.uleb128 0xb
 404 006d 49       		.uleb128 0x49
 405 006e 13       		.uleb128 0x13
 406 006f 02       		.uleb128 0x2
 407 0070 17       		.uleb128 0x17
 408 0071 00       		.byte	0
 409 0072 00       		.byte	0
 410 0073 09       		.uleb128 0x9
 411 0074 34       		.uleb128 0x34
 412 0075 00       		.byte	0
 413 0076 03       		.uleb128 0x3
 414 0077 0E       		.uleb128 0xe
 415 0078 3A       		.uleb128 0x3a
 416 0079 0B       		.uleb128 0xb
 417 007a 3B       		.uleb128 0x3b
 418 007b 05       		.uleb128 0x5
 419 007c 49       		.uleb128 0x49
 420 007d 13       		.uleb128 0x13
 421 007e 3F       		.uleb128 0x3f
 422 007f 19       		.uleb128 0x19
 423 0080 3C       		.uleb128 0x3c
 424 0081 19       		.uleb128 0x19
 425 0082 00       		.byte	0
 426 0083 00       		.byte	0
 427 0084 0A       		.uleb128 0xa
 428 0085 01       		.uleb128 0x1
 429 0086 01       		.byte	0x1
 430 0087 49       		.uleb128 0x49
 431 0088 13       		.uleb128 0x13
 432 0089 01       		.uleb128 0x1
 433 008a 13       		.uleb128 0x13
 434 008b 00       		.byte	0
 435 008c 00       		.byte	0
 436 008d 0B       		.uleb128 0xb
 437 008e 21       		.uleb128 0x21
 438 008f 00       		.byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 12


 439 0090 49       		.uleb128 0x49
 440 0091 13       		.uleb128 0x13
 441 0092 2F       		.uleb128 0x2f
 442 0093 0B       		.uleb128 0xb
 443 0094 00       		.byte	0
 444 0095 00       		.byte	0
 445 0096 00       		.byte	0
 446              		.section	.debug_loc,"",%progbits
 447              	.Ldebug_loc0:
 448              	.LLST0:
 449 0000 20000000 		.4byte	.LVL2
 450 0004 38000000 		.4byte	.LVL3
 451 0008 0100     		.2byte	0x1
 452 000a 53       		.byte	0x53
 453 000b 46000000 		.4byte	.LVL4
 454 000f 72000000 		.4byte	.LVL6
 455 0013 0100     		.2byte	0x1
 456 0015 5A       		.byte	0x5a
 457 0016 00000000 		.4byte	0
 458 001a 00000000 		.4byte	0
 459              	.LLST1:
 460 001e 20000000 		.4byte	.LVL2
 461 0022 38000000 		.4byte	.LVL3
 462 0026 0100     		.2byte	0x1
 463 0028 53       		.byte	0x53
 464 0029 00000000 		.4byte	0
 465 002d 00000000 		.4byte	0
 466              	.LLST2:
 467 0031 04000000 		.4byte	.LVL0
 468 0035 1C000000 		.4byte	.LVL1
 469 0039 0200     		.2byte	0x2
 470 003b 30       		.byte	0x30
 471 003c 9F       		.byte	0x9f
 472 003d 4E000000 		.4byte	.LVL5
 473 0041 80000000 		.4byte	.LVL7
 474 0045 0200     		.2byte	0x2
 475 0047 31       		.byte	0x31
 476 0048 9F       		.byte	0x9f
 477 0049 00000000 		.4byte	0
 478 004d 00000000 		.4byte	0
 479              		.section	.debug_aranges,"",%progbits
 480 0000 1C000000 		.4byte	0x1c
 481 0004 0200     		.2byte	0x2
 482 0006 00000000 		.4byte	.Ldebug_info0
 483 000a 04       		.byte	0x4
 484 000b 00       		.byte	0
 485 000c 0000     		.2byte	0
 486 000e 0000     		.2byte	0
 487 0010 00000000 		.4byte	.LFB0
 488 0014 AC000000 		.4byte	.LFE0-.LFB0
 489 0018 00000000 		.4byte	0
 490 001c 00000000 		.4byte	0
 491              		.section	.debug_ranges,"",%progbits
 492              	.Ldebug_ranges0:
 493 0000 00000000 		.4byte	.LFB0
 494 0004 AC000000 		.4byte	.LFE0
 495 0008 00000000 		.4byte	0
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 13


 496 000c 00000000 		.4byte	0
 497              		.section	.debug_line,"",%progbits
 498              	.Ldebug_line0:
 499 0000 93000000 		.section	.debug_str,"MS",%progbits,1
 499      02005100 
 499      00000201 
 499      FB0E0D00 
 499      01010101 
 500              	.LASF6:
 501 0000 6C6F6E67 		.ascii	"long long int\000"
 501      206C6F6E 
 501      6720696E 
 501      7400
 502              	.LASF8:
 503 000e 756E7369 		.ascii	"unsigned int\000"
 503      676E6564 
 503      20696E74 
 503      00
 504              	.LASF17:
 505 001b 696E6372 		.ascii	"increment_pointer\000"
 505      656D656E 
 505      745F706F 
 505      696E7465 
 505      7200
 506              	.LASF18:
 507 002d 55415254 		.ascii	"UART_errorStatus\000"
 507      5F657272 
 507      6F725374 
 507      61747573 
 507      00
 508              	.LASF23:
 509 003e 55415254 		.ascii	"UART_rxBufferOverflow\000"
 509      5F727842 
 509      75666665 
 509      724F7665 
 509      72666C6F 
 510              	.LASF19:
 511 0054 55415254 		.ascii	"UART_rxBuffer\000"
 511      5F727842 
 511      75666665 
 511      7200
 512              	.LASF12:
 513 0062 75696E74 		.ascii	"uint8\000"
 513      3800
 514              	.LASF5:
 515 0068 6C6F6E67 		.ascii	"long unsigned int\000"
 515      20756E73 
 515      69676E65 
 515      6420696E 
 515      7400
 516              	.LASF7:
 517 007a 6C6F6E67 		.ascii	"long long unsigned int\000"
 517      206C6F6E 
 517      6720756E 
 517      7369676E 
 517      65642069 
 518              	.LASF25:
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 14


 519 0091 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_INT.c\000"
 519      6E657261 
 519      7465645F 
 519      536F7572 
 519      63655C50 
 520              	.LASF27:
 521 00b5 55415254 		.ascii	"UART_RXISR\000"
 521      5F525849 
 521      535200
 522              	.LASF1:
 523 00c0 756E7369 		.ascii	"unsigned char\000"
 523      676E6564 
 523      20636861 
 523      7200
 524              	.LASF24:
 525 00ce 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 525      4320342E 
 525      382E3420 
 525      32303134 
 525      30353236 
 526 0101 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 526      20726576 
 526      6973696F 
 526      6E203231 
 526      31333538 
 527 0134 67202D66 		.ascii	"g -ffunction-sections\000"
 527      66756E63 
 527      74696F6E 
 527      2D736563 
 527      74696F6E 
 528              	.LASF11:
 529 014a 63686172 		.ascii	"char\000"
 529      00
 530              	.LASF4:
 531 014f 6C6F6E67 		.ascii	"long int\000"
 531      20696E74 
 531      00
 532              	.LASF10:
 533 0158 646F7562 		.ascii	"double\000"
 533      6C6500
 534              	.LASF26:
 535 015f 433A5C55 		.ascii	"C:\\Users\\Jorden\\Documents\\PSoC Creator\\Test\\T"
 535      73657273 
 535      5C4A6F72 
 535      64656E5C 
 535      446F6375 
 536 018c 6573742E 		.ascii	"est.cydsn\000"
 536      63796473 
 536      6E00
 537              	.LASF3:
 538 0196 73686F72 		.ascii	"short unsigned int\000"
 538      7420756E 
 538      7369676E 
 538      65642069 
 538      6E7400
 539              	.LASF0:
 540 01a9 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\Jorden\AppData\Local\Temp\cc6Wjm7c.s 			page 15


 540      65642063 
 540      68617200 
 541              	.LASF22:
 542 01b5 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 542      5F727842 
 542      75666665 
 542      724C6F6F 
 542      70446574 
 543              	.LASF20:
 544 01cd 55415254 		.ascii	"UART_rxBufferRead\000"
 544      5F727842 
 544      75666665 
 544      72526561 
 544      6400
 545              	.LASF16:
 546 01df 72656164 		.ascii	"readStatus\000"
 546      53746174 
 546      757300
 547              	.LASF9:
 548 01ea 666C6F61 		.ascii	"float\000"
 548      7400
 549              	.LASF2:
 550 01f0 73686F72 		.ascii	"short int\000"
 550      7420696E 
 550      7400
 551              	.LASF13:
 552 01fa 72656738 		.ascii	"reg8\000"
 552      00
 553              	.LASF21:
 554 01ff 55415254 		.ascii	"UART_rxBufferWrite\000"
 554      5F727842 
 554      75666665 
 554      72577269 
 554      746500
 555              	.LASF15:
 556 0212 72656164 		.ascii	"readData\000"
 556      44617461 
 556      00
 557              	.LASF14:
 558 021b 73697A65 		.ascii	"sizetype\000"
 558      74797065 
 558      00
 559              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
